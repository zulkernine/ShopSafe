{"version":3,"sources":["services/authService.js","services/httpServices.js","services/userService.js","components/pages/signin.jsx","utils/auth.jsx","components/pages/CustomerRegistration.jsx","components/pages/ShopOwnerRegistration.jsx","components/pages/registration.jsx","components/pages/customer/components/shop.jsx","services/dataServices.js","components/pages/customer/shopPage/getLocation.jsx","components/pages/customer/components/filter.jsx","components/pages/customer/shops.jsx","components/pages/customer/components/editBookings.jsx","components/pages/customer/components/slotCard.jsx","components/pages/customer/myBookings.jsx","components/pages/customer/profile.jsx","components/pages/customer/Logout.js","components/pages/customer/shopPage/Adress.jsx","components/pages/customer/shopPage/Overview.jsx","components/pages/customer/shopPage/Order.jsx","components/pages/customer/shopPage/Image.jsx","components/pages/customer/shopPage/Reviews.jsx","components/pages/customer/shopPage/giveReview.jsx","components/pages/customer/shopPage/shopPage.jsx","components/pages/customer/mainPage.jsx","components/AppComponent.jsx","components/home.jsx","components/pages/shopowner/shopLogout.js","components/pages/shopowner/components/graph.jsx","components/pages/shopowner/components/simpleStat.jsx","components/pages/shopowner/components/UpcomingBookingsTable.jsx","components/pages/shopowner/dashBoard.jsx","components/pages/shopowner/viewBookings.jsx","components/pages/shopowner/ShopProfile.jsx","components/pages/shopowner/shopMainPage.jsx","components/notFound.jsx","App.js","serviceWorker.js","index.js"],"names":["token","jwt","localStorage","getItem","alert","window","location","Axios","require","interceptors","response","use","error","status","console","log","Promise","reject","httpServices","get","api","params","headers","post","put","delete","protectedGet","Authorization","concat","protectedPost","body","protectedPut","protectedDelete","data","uploadForm","Content-Type","Hash","customerRegister","firstName","lastName","email","password","confirmPassword","phoneNumber","address","streetname","cityName","stateName","country","userData","gender","http","customerSignup","ShopRegister","shopName","openingHour","openingMinute","closingHour","closingMinute","tags","bookingTimeUnit","maxConcurrent","payment_modes","discount","ownerName","parseInt","shopSignup","login","logout","bookNewSlot","id","itemList","period","slot","otp","slotName","toLowerCase","purchaseItems","join","isShop","shopId","slotGroupBegins","start","slotGroupEnds","end","customerName","bookSlot","updateBookings","editBooking","updateShopDetails","updateShop","Object","objectSpread","updateCustomerDetails","updateCustomer","userDetails","deleteSlots","giveReview","rating","text","arguments","length","undefined","giveRating","review","getShopDetailsAuthorized","shopData","uploadPhoto","file","uploadProfilePhoto","uploadShopPhoto","uploadShopProfilePhoto","validateSlotByOtp","bookingId","validateSlot","qrdata","Joi","SignIn","state","errors","schema","string","min","max","required","label","checked","isLoading","validateProperty","_ref","name","value","Obj","defineProperty","rules","_this","object","validate","details","message","handleChange","_ref2","input","currentTarget","setState","handleSwitch","event","result","abortEarly","_step","_iterator","_createForOfIteratorHelper","s","n","done","item","path","err","e","f","handleSubmit","forceUpdate","preventDefault","setItem","props","handleAuth","history","push","handleSignup","handleClose","doSubmit","_callee","regenerator_default","a","wrap","_context","prev","next","sent","t0","general","stop","this","classes","react_default","createElement","Container","component","maxWidth","CssBaseline","CircularProgress","className","paper","Avatar","avatar","LockOutlined_default","Typography","variant","form","onSubmit","TextField","margin","fullWidth","type","autoComplete","autoFocus","onChange","helperText","Button","color","submit","Grid","container","xs","Link","href","onClick","style","cursor","Component","withRouter","withStyles","theme","spacing","display","flexDirection","alignItems","backgroundColor","palette","secondary","main","width","marginTop","getStateName","getStateWiseCity","sname","cityList","filter","c","localeCompare","CustomerRegistration","streetName","zipCode","formData","states","handleSelect","_ref2$target","target","handleState","_ref3","_ref3$target","handleHidden","tabValue","index","handleSignin","onSuccess","_this$formData","statesList","noValidate","hidden","Box","borderColor","border","borderRadius","m","p","sm","FormControl","formControl","InputLabel","Select","labelId","MenuItem","map","i","key","city","defaultValue","InputProps","readOnly","FormControlLabel","control","Checkbox","justify","borderStyles","ShopOwnerRegistration","handleNumberChange","updateLocation","addr","description","handleMultipleSelect","Paper","root","IconButton","iconButton","aria-label","Search_default","react_google_places_autocomplete_esm","onSelect","inputProps","ShopOwnerRegistration_MultipleSelect","selectedItems","items","chips","flexWrap","chip","padding","marginLeft","flex","divider","height","withTheme","MultipleSelect","_this2","getStyles","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","maxHeight","_this3","_this$props","multiple","Input","renderValue","selected","Chip","SignUp","open","auth","square","Tabs","indicatorColor","textColor","Tab","pages_CustomerRegistration","pages_ShopOwnerRegistration","Dialog","onClose","aria-labelledby","signin","Shop","imWidth","handleClick","openedNow","d","Date","currentOffset","getTimezoneOffset","ISTTime","getTime","openingTime","closingTime","_this$props$data","setHours","setMinutes","currentTime","getHours","getMinutes","time","t","hour","minute","setSeconds","toLocaleTimeString","_React$createElement","innerWidth","_this$props$data2","imageUrl","distancemetric","openingTimeIST","closingTimeIST","ratings","shopRating","travelDuration","distance","boxShadow","cover","direction","bim","backg","marginBottom","backgroundImage","background","fontSize","align","gutterBottom","paddingLeft","FiberManualRecord_default","marginRight","icon","StarRateOutlined_default","LocationOn_default","paddingBottom","DirectionsBike_default","Math","round","Payment_default","Divider","LocalOffer_default","Favorite_default","endIcon","ArrowForwardIos_default","content","controls","playIcon","backgroundSize","backgroundPosition","getShopList","rad","shopList","userLocation","radius","getShopDetails","getShopBookings","myBookings","CurrentLocation","coordinate","openDialogue","handleAddress","getLocation","xl","lg","DialogContent","orientation","Directions_default","FilterCard","openClose","showAll","isOpen","slotTypes","Morning","Afternoon","Evening","customerRatings","4","3","slotType","customerRating","handleCheck","updateFilter","_ref$target","handleSlot","handleRating","_this$state$filter","Slider","step","marks","valueLabelDisplay","md","filter_MultipleSelect","_this$props2","Shops","updateShopList","filterList","list","shop","shops_createForOfIteratorHelper","tag","includes","newList","getItemList","_step2","_iterator2","toConsumableArray","Array","from","Set","components_filter","GridList","cellHeight","cols","GridListTile","components_shop","userAddress","flexGrow","timeString","h","hour12","EditBookings","bookingDetails","split","arrivalHour","slotLabel","noticeBody","submitted","success","getSlotTimes","slotTimeArr","stime","setTime","interval","handleBooking","_yield$updateBookings","setSlotTime","handlePeriod","handleSlotTime","find","_this$state","editBookings_SuccessNoticeBody","button","SuccessNoticeBody","arrivalMinute","deliveryHour","deliveryMinute","src","QRCode","SlotCard","expanded","handleSlotChange","newData","handleExpandClick","isEditable","isExpired","handleEdit","Card","activeRoot","onMouseOver","onMouseOut","CardHeader","title","media","CardContent","CardActions","disableSpacing","disabled","startIcon","Edit_default","Delete_default","handleDelete","editBookings","clsx","expand","expandOpen","aria-expanded","ExpandMore_default","Collapse","in","timeout","unmountOnExit","&:hover","expiredRoot","transform","transition","transitions","create","duration","shortest","MyBookings","slotData","showPastSlot","editDialogue","errorMessage","ctime","slotStartTme","createdAt","copy","_yield$deleteSlots","numberOfActiveBookngs","count","myBookings_createForOfIteratorHelper","_context2","Fragment","size","cards","slotCard","buildFileSelector","fileSelector","document","setAttribute","MyProfile","edit","selectedFile","toDateString","handleFile","click","uploadFile","url","FormData","append","URL","createObjectURL","finish","updateFile","files","userCredentials","largeAvatar","htmlFor","AddAPhoto_default","Email_default","Phone_default","profile_EditForm","EditForm","shouldAwait","_callee3","_context3","Logout","clear","Address","Order","random","openModal","dialogueData","periodData","splice","handleAddItem","_yield$bookNewSlot","paddingTop","Add_default","onDelete","keys","aria-describedby","Order_ModalNoticeBody","ModalNoticeBody","_this$props$data3","Image","tileData","img","author","tile","alt","justifyContent","overflow","Review","sortType","sorting","reviews","val","Reviews_ReviewCard","ratingId","customIcons","1","SentimentVeryDissatisfied_default","2","SentimentDissatisfied_default","SentimentSatisfied_default","SentimentSatisfiedAltOutlined_default","5","SentimentVerySatisfied_default","IconContainer","other","objectWithoutProperties","ReviewCard","liked","handleLike","date","str","toLocaleDateString","year","month","day","customerId","Rating","getLabelText","IconContainerComponent","paragraph","ThumbUpAlt_default","ThumbUpAltOutlined_default","GiveReview","write","reviewText","multiline","rows","tabs","AddBoxOutlined_default","BallotOutlined_default","PhotoLibraryOutlined_default","ShopPage","tabPageNumber","getTabPage","shopPage_Order","Reviews","shopPage_Image","handleTabs","handleDirection","destination","match","_this$state$data","precision","Share_default","Adress","shopPage_giveReview","scrollButtons","tab","noWrap","toolbarLink","toolbarSecondary","overflowX","flexShrink","MainPage","AccountBox_default","Dashboard_default","BookmarksRounded_default","PowerSettingsNewRounded_default","toolbar","react_router","profile","shops","drawer","breakpoints","up","appBar","menuButton","mixins","drawerPaper","CustomAppBarClass","anchorEl","handlePath","handleSignIn","handleSignUp","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","menuOption","Boolean","homePage","AppBar","elevation","disableGutters","Toolbar","AppComponent_ProfileMenu","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CustomFooter","handleGit","handleApp","bottom","heigt","ProfileMenu","handleMenu","_this4","aria-controls","aria-haspopup","AccountCircle_default","Menu","keepMounted","option","CustomAppBar","Footer","useStyles","makeStyles","textAlign","hero","backgroundRepeat","position","down","blogsContainer","promo","blogTitle","card","cardActions","cardContent","paginationContainer","Home","gutterbottom","CardMedia","image","ApexLineChart","series","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","getOptions","x","getSeries","bookedData","turnUpsData","count1","count2","graph_createForOfIteratorHelper","row","react_apexcharts_min_default","SimpleStatCard","CustomerServedToday","UpcomingCustomer","TodayChart","_Component2","_getPrototypeOf3","classCallCheck","_len2","args","_key2","possibleConstructorReturn","getPrototypeOf","call","apply","plotOptions","bar","columnWidth","show","colors","yaxis","fill","opacity","inherits","createClass","UpcomingBookingsTable","bookingsData","filteredList","ct","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","ShopDashboard","response1","creationTime","response2","simpleStat_TodayChart","graph","simpleStat","components_UpcomingBookingsTable","ViewBookings","todayOnly","updateStatus","filterData","viewBookings_Filter","setFilter","viewBookings_RowBody","RowBody","getChip","ErrorOutline_default","CancelOutlined_default","CheckCircleOutlineOutlined_default","handleOtp","_callee2","arrivalTimeIST","deliveryTimeIST","viewBookings_OTP","submitOtp","Filter","minWidth","ListItemText","primary","OTP","showInputField","_this5","ShopProfile","handleClickFile","getElementById","updateImageFile","shopData2","imgURL","info","themes","ShopProfile_MultipleSelect","ShopMainPage","dashBoard","NotFound","st","_window","w","innerHeight","Item","errorPageImage","react_router_dom","to","App","customerLogged","shopOwnerLogged","customerMenu","shopOwnerMenu","authname","darkTheme","createMuiTheme","check","ex","_this$state$auth","userLoggedIn","shopLogout","registration","shopMainPage","mainPage","exact","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","unregister","catch"],"mappings":"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","file":"static/js/main.b5ddc7fa.chunk.js","sourcesContent":["const token = () => {\n    const jwt = localStorage.getItem(\"token\");\n\n    if (jwt) return jwt;\n    else {\n        alert(\"Please Sign In first\");\n        window.location = \"/signin\";\n        return null;\n    }\n}\n \nexport default token;","// import { Axios } from \"axios\";\nimport token from \"./authService\";\n\nconst Axios = require(\"axios\");\n\nAxios.interceptors.response.use(null, (error) => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n    if (!expectedError) {\n        console.log(\"Logging the error from axios interceptors\", error.response);\n        alert(\"An unexpected error occured\");\n    }\n    console.log(error.response);\n    return Promise.reject(error);\n});\n\nconst protectedGet = (api, params) => {\n    const jwt = token();\n    const response = Axios.get(api, {\n        params,\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst protectedDelete = (api,body) => {\n    const jwt = token();\n    const response = Axios.delete(api, {\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n        },\n        data:body,\n    });\n    return response;\n};\n\nconst protectedPost = (api, body) => {\n    const jwt = token();\n    const response = Axios.post(api, body, {\n        headers: {\n            'Authorization': `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst uploadForm = (api, body) => {\n    const jwt = token();\n    const response = Axios.post(api, body, {\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n            \"Content-Type\": \"multipart/form-data\",\n        },\n    });\n    return response;\n};\n\n// const upload = (api, file) => {\n//     const jwt = token();\n//     const response = Axios.post(api, body, {\n//         headers: {\n//             'Authorization': `Bearer ${jwt}`,\n//         },\n//     });\n//     return response;\n// };\n\n\nconst protectedPut = (api, body) => {\n    const jwt = token();\n    const response = Axios.put(api, body, {\n        headers: {\n            'Authorization': `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst get = (api, params, headers) => {\n    return Axios.get(api, { params, headers });\n}\n\nexport default {\n    get,\n    post: Axios.post,\n    put: Axios.put,\n    delete: Axios.delete,\n    protectedGet,\n    protectedPost,\n    protectedPut,\n    protectedDelete,\n    uploadForm,\n};\n","import http from \"./httpServices\";\nimport api from \"../configApi.json\";\n\nvar Hash = require(\"sha256\");\n\nexport const customerRegister = (data) => {\n    const {\n        firstName,\n        lastName,\n        email,\n        password,\n        confirmPassword,\n        phoneNumber,\n    } = data;\n    const address =\n        data.streetname +\n        \", \" +\n        data.cityName +\n        \", \" +\n        data.stateName +\n        \", \" +\n        data.country;\n    const userData = {\n        firstName,\n        lastName,\n        email,\n        password: Hash(password),\n        confirmPassword: Hash(confirmPassword),\n        phoneNumber,\n        address,\n        gender: \"Male\",\n    };\n    const response = http.post(api.customerSignup, userData);\n\n    return response;\n};\n\nexport const ShopRegister = (data) => {\n    const {\n        firstName,\n        lastName,\n        shopName,\n        email,\n        phoneNumber,\n        password,\n        confirmPassword,\n        openingHour,\n        openingMinute,\n        closingHour,\n        closingMinute,\n        tags,\n        bookingTimeUnit,\n        maxConcurrent,\n        payment_modes,\n        discount,\n        address,\n    } = data;\n    const userData = {\n        shopName,\n        ownerName: firstName + \" \" + lastName,\n        email,\n        password: Hash(password),\n        confirmPassword: Hash(confirmPassword),\n        phoneNumber: parseInt(phoneNumber),\n        address,\n        openingHour,\n        openingMinute,\n        closingHour,\n        closingMinute,\n        tags,\n        bookingTimeUnit,\n        maxConcurrent,\n        payment_modes,\n        discount,\n    };\n    const response = http.post(api.shopSignup, userData);\n\n    return response;\n};\n\nexport const login = (email, password) => {\n    const response = http.post(api.login, {\n        email,\n        password: Hash(password),\n    });\n    return response;\n};\n\nexport const logout = () => {\n    const response = http.protectedGet(api.logout);\n    return response;\n};\n\nexport const bookNewSlot = (data, id) => {\n    const { itemList, period, slot,otp } = data;\n    const slotName = period.toLowerCase();\n    const body = {\n        purchaseItems: itemList.join(),\n        slotName: slotName,\n        isShop: false,\n        shopId: id,\n        otp,\n        slotGroupBegins: slot.start,\n        slotGroupEnds: slot.end,\n        customerName: localStorage.getItem(\"userName\"),\n    };\n    console.log(body);\n    return http.protectedPost(api.bookSlot, body);\n};\n\n// export const updateRadius = (r) => {\n//     const rad = r * 1000;\n//     console.log(\"radius\", r);\n//     return http.post(api.shopList, {\n//         userLocation: localStorage.getItem(\"userAddress\"),\n//         radius: rad,\n//     });\n// };\n\nexport const updateBookings = (data, id) => {\n    return http.protectedPut(api.editBooking + id, {\n        slotName: data.period.toLowerCase(),\n        slotGroupBegins: data.slot.start,\n        slotGroupEnds: data.slot.end,\n        isShop: false,\n    });\n};\n\nexport const updateShopDetails = (data) => {\n    return http.protectedPut(api.updateShop, { isShop: true, ...data });\n}\n\nexport const updateCustomerDetails = (data) => {\n    return http.protectedPut(api.updateCustomer, { isShop: false, ...data });\n}\n\nexport const userDetails = () => {\n    return http.protectedPost(api.userData, { isShop: false });\n}\n\nexport const deleteSlots = (id) => {\n    return http.protectedDelete(api.editBooking + id, { isShop: false });\n};\n\nexport const giveReview = (rating, shopId, text = \"\") => {\n    if (text)\n        return http.protectedPost(api.giveRating, {\n            shopId,\n            rating,\n            review: text,\n            isShop: false,\n        });\n    else\n        return http.protectedPost(api.giveRating, {\n            shopId,\n            rating,\n            isShop: false,\n        });\n};\n\nexport const getShopDetailsAuthorized = () => {\n    return http.protectedPost(api.shopData, {\n        isShop: true,\n    });\n};\n\nexport const uploadPhoto = file => {\n    return http.protectedPost(api.uploadProfilePhoto, file);\n}\n\nexport const uploadShopPhoto = file => {\n    return http.uploadForm(api.uploadShopProfilePhoto, file);\n}\n\nexport const validateSlotByOtp = (bookingId, otp) => {\n    console.log(\"validate\", bookingId + \"@@##$$\" + otp);\n    return http.protectedPost(api.validateSlot, {\n        isShop: true,\n        qrdata: bookingId + \"@@##$$\" + otp,\n    });\n}\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { login } from \"../../services/userService\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Joi = require(\"@hapi/joi\");\n\nconst useStyles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignIn extends Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\",\n    },\n    errors: {},\n    schema: {\n      email: Joi.string().min(3).max(30).required().label(\"Email\"),\n      password: Joi.string().label(\"Password\").required(),\n    },\n    checked: true,\n    isLoading: false,\n  };\n\n  validateProperty = ({ name, value }) => {\n    const Obj = { [name]: value };\n    const rules = { [name]: this.state.schema[name] };\n    // console.log(name,value,rules,Obj);\n    const { error } = Joi.object(rules).validate(Obj);\n\n    return error ? error.details[0].message : null;\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    // const errorMessage = this.validateProperty(input);\n    // if(errorMessage){\n    //     this.setState({errors:{[input.name]:errorMessage}});\n    // }else this.setState({errors:{[input.name]:\"\"}});\n    data[input.name] = input.value;\n    this.setState({ data });\n    //console.log(this.state.errors);\n  };\n\n  handleSwitch = (event) => {\n    // this.setState({checked: })\n  };\n\n  validate = () => {\n    const errors = {};\n    const { data } = this.state;\n    const result = Joi.object(this.state.schema).validate(data, {\n      abortEarly: false,\n    });\n    if (!result.error) return null;\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  handleSubmit = (e) => {\n    this.setState({ isLoading: true });\n    this.forceUpdate();\n    e.preventDefault();\n    console.log(this.state);\n    const errors = this.validate();\n    this.setState({ errors: errors ? errors : {} });\n    console.log(errors);\n    if (errors) {\n      return;\n      this.setState({ isLoading: false });\n    }\n    console.log(\"load\", this.state.isLoading);\n\n    // this.doSubmit();   //Validate user credential from server and then log-in\n\n    //Following are used as dummy due to server down\n    localStorage.setItem(\n      \"token\",\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n    );\n    localStorage.setItem(\n      \"isShop\",\n      this.state.data.email == \"shop@example.com\" ? \"shop\" : \"\"\n    );\n    localStorage.setItem(\"userLogged\", true);\n    this.props.handleAuth(\n      this.state.data.email == \"shop@example.com\"\n        ? \"shopOwnerLogged\"\n        : \"customerLogged\"\n    );\n    this.props.history.push(\n      this.state.data.email == \"shop@example.com\" ? \"/shopowner\" : \"/customer\"\n    );\n  };\n\n  handleSignup = () => {\n    this.props.history.push(\"/signup\");\n    this.props.handleClose();\n  };\n\n  doSubmit = async () => {\n    console.log(\"load\", this.state.isLoading);\n\n    try {\n      const response = await login(\n        this.state.data.email,\n        this.state.data.password\n      );\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"isShop\", response.data.isShop ? \"shop\" : \"\");\n      localStorage.setItem(\"userLogged\", true);\n      console.log(response);\n      this.props.handleAuth(\n        response.data.isShop ? \"shopOwnerLogged\" : \"customerLogged\"\n      );\n      this.props.history.push(\n        response.data.isShop ? \"/shopowner\" : \"/customer\"\n      );\n    } catch (ex) {\n      console.log(ex);\n      if (ex.response.data.general) alert(ex.response.data.general);\n      else {\n        const errors = { ...ex.response.data };\n        console.log(\"error\", ex.response);\n        this.setState({ errors });\n      }\n    }\n    this.setState({ isLoading: false });\n    this.forceUpdate();\n    console.log(\"Submitted\", this.state.data);\n    console.log(\"load\", this.state.isLoading);\n  };\n\n  render() {\n    console.log(\"props\", this.props);\n    const { classes } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        {this.isLoading ? (\n          <CircularProgress />\n        ) : (\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <form className={classes.form} onSubmit={this.handleSubmit}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n                type=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                onChange={this.handleChange}\n                error={errors && errors.email}\n                helperText={errors && errors.email && errors.email}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n                autoComplete=\"current-password\"\n                error={errors && errors.password}\n                helperText={errors && errors.password && errors.password}\n              />\n              {/* <FormControlLabel\n              control={\n                <Switch\n                  checked={true}\n                  onChange={this.handleSwitch}\n                  name=\"checkedB\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Primary\"\n            /> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    onClick={this.handleSignup}\n                    variant=\"body2\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(SignIn));\n","\n\nexport const getUserDetails = () => {\n    const data={\n        name:\"John Doe\",\n        email:\"abcdjohn@yahoo.com\",\n        phoneNumber:\"+91 9452656726\",\n        imageUrl:\"https://picsum.photos/554\",\n        address:\"1600 Amphitheatre Parkway in Mountain View, California, United States\",\n    };\n    return data;\n};\n\nexport const ShopsList = (uid=\"-1\") => {\n    const shopList = [\n        {\n            uid:\"123\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/355\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:4.1,\n            \n        },\n        {\n            uid:\"124\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/340\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.1,\n            \n        },\n        {\n            uid:\"125\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/348\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.6,\n            \n        },\n        {\n            uid:\"126\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/320\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:2.3,\n            \n        },\n        {\n            uid:\"127\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/389\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.7,\n            \n        },\n        {\n            uid:\"128\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/337\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:4.6,\n            \n        },\n        {\n            uid:\"129\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/350\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:1.8,\n            \n        },\n        {\n            uid:\"130\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/350\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:1.8,\n            \n        }\n    ];\n    if(uid===\"-1\") return shopList;\n    else return shopList.filter(item => item.uid===uid)[0];\n}\n\nexport const getItemList = () => {\n    const items = [\n        {\n            label:\"Meat & Fish\",\n            value:[\n                \"Skinless white meat\",\"Lean cuts of red meat\",\"Oily fish\",\n                \"Luncheon meat\"\n            ]\n        },\n        {\n            label:\"Condiments\",\n            value:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ]\n        },\n        {\n            label:\"Grains and Bread\",\n            value:[\n                \"Pasta\",\"Rice\",\"Bread\",\"All-purpose flour\",\n                \"Breakfast cereal\"\n            ]\n        },\n        {\n            label:\"Dairy & Eggs\",\n            value:[\n                \"Milk\",\"Eggs\",\"Cheese\",\"Yogurt\"\n            ]\n        },\n        {\n            label:\"Oil & Fat\",\n            value:[\n                \"Cooking oil\",\"Butter\"\n            ]\n        },\n        {\n            label:\"Tinned & Dried Produce\",\n            value:[\n                \"Red kidney beans\",\"White beans\",\"Green lentils\",\n                \"Chopped tomatoes\",\"Soup\",\"Fruit, nuts, and seeds\"\n            ]\n        },\n        \n    ];\n    return items;\n}\n\nexport const getBookedSlotCustomer = () => {\n    const slots = [\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            active:true,\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n    ];\n\n    return slots;\n}\n\n\n//https://sites.google.com/site/ashishright/collections/Statewise-Cities-In-India#TOC-Andaman-Nicobar-AN-\nexport const getStateName = () => {\n    const states = [         \n        \"Andaman & Nicobar [AN]\",\n        \"Andhra Pradesh [AP]\",\n        \"Arunachal Pradesh [AR]\",\n        \"Assam [AS]\",\n        \"Bihar [BH]\",\n        \"Chandigarh [CH]\",\n        \"Chhattisgarh [CG]\",\n        \"Dadra & Nagar Haveli [DN]\",\n        \"Daman & Diu [DD]\",\n        \"Delhi [DL]\",\n        \"Goa [GO]\",\n        \"Gujarat [GU]\",\n        \"Haryana [HR]\",\n        \"Himachal Pradesh [HP]\",\n        \"Jammu & Kashmir [JK]\",\n        \"Jharkhand [JH]\",\n        \"Karnataka [KR]\",\n        \"Kerala [KL]\",\n        \"Lakshadweep [LD]\",\n        \"Madhya Pradesh [MP]\",\n        \"Maharashtra [MH]\",\n        \"Manipur [MN]\",\n        \"Meghalaya [ML]\",\n        \"Mizoram [MM]\",\n        \"Nagaland [NL]\",\n        \"Orissa [OR]\",\n        \"Pondicherry [PC]\",\n        \"Punjab [PJ]\",\n        \"Rajasthan [RJ]\",\n        \"Sikkim [SK]\",\n        \"Tamil Nadu [TN]\",\n        \"Tripura [TR]\",\n        \"Uttar Pradesh [UP]\",\n        \"Uttaranchal [UT]\",\n        \"West Bengal [WB]\",\n\n    ];\n    return states;\n}\n\n\nexport const getStateWiseCity = sname => {\n    const statelist = [\n        {\n            name:\"Andaman & Nicobar [AN]\",\n            cityList:[\n                \"Alipur\", \"Andaman Island\", \"Anderson Island\", \"Arainj-Laka-Punga\", \"Austinabad\", \"Bamboo Flat\", \"Barren Island\", \"Beadonabad\", \"Betapur\", \"Bindraban\", \"Bonington\", \"Brookesabad\", \"Cadell Point\", \"Calicut\", \"Chetamale\", \"Cinque Islands\", \"Defence Island\", \"Digilpur\", \"Dolyganj\", \"Flat Island\", \"Geinyale\", \"Great Coco Island\", \"Haddo\", \"Havelock Island\", \"Henry Lawrence Island\", \"Herbertabad\", \"Hobdaypur\", \"Ilichar\", \"Ingoie\", \"Inteview Island\", \"Jangli Ghat\", \"Jhon Lawrence Island\", \"Karen\", \"Kartara\", \"KYD Islannd\", \"Landfall Island\", \"Little Andmand\", \"Little Coco Island\", \"Long Island\", \"Maimyo\", \"Malappuram\", \"Manglutan\", \"Manpur\", \"Mitha Khari\", \"Neill Island\", \"Nicobar Island\", \"North Brother Island\", \"North Passage Island\", \"North Sentinel Island\", \"Nothen Reef Island\", \"Outram Island\", \"Pahlagaon\", \"Palalankwe\", \"Passage Island\", \"Phaiapong\", \"Phoenix Island\", \"Port Blair\", \"Preparis Island\", \"Protheroepur\", \"Rangachang\", \"Rongat\", \"Rutland Island\", \"Sabari\", \"Saddle Peak\", \"Shadipur\", \"Smith Island\", \"Sound Island\", \"South Sentinel Island\", \"Spike Island\", \"Tarmugli Island\", \"Taylerabad\", \"Titaije\", \"Toibalawe\", \"Tusonabad\", \"West Island\", \"Wimberleyganj\", \"Yadita\", \n            ]\n        },\n        {\n            name:\"Andhra Pradesh [AP]\",\n            cityList:[\n                \"Achampet\", \"Adilabad\", \"Adoni\", \"Alampur\", \"Allagadda\", \"Alur\", \"Amalapuram\", \"Amangallu\", \"Anakapalle\", \"Anantapur\", \"Andole\", \"Araku\", \"Armoor\", \"Asifabad\", \"Aswaraopet\", \"Atmakur\", \"B. Kothakota\", \"Badvel\", \"Banaganapalle\", \"Bandar\", \"Bangarupalem\", \"Banswada\", \"Bapatla\", \"Bellampalli\", \"Bhadrachalam\", \"Bhainsa\", \"Bheemunipatnam\", \"Bhimadole\", \"Bhimavaram\", \"Bhongir\", \"Bhooragamphad\", \"Boath\", \"Bobbili\", \"Bodhan\", \"Chandoor\", \"Chavitidibbalu\", \"Chejerla\", \"Chepurupalli\", \"Cherial\", \"Chevella\", \"Chinnor\", \"Chintalapudi\", \"Chintapalle\", \"Chirala\", \"Chittoor\", \"Chodavaram\", \"Cuddapah\", \"Cumbum\", \"Darsi\", \"Devarakonda\", \"Dharmavaram\", \"Dichpalli\", \"Divi\", \"Donakonda\", \"Dronachalam\", \"East Godavari\", \"Eluru\", \"Eturnagaram\", \"Gadwal\", \"Gajapathinagaram\", \"Gajwel\", \"Garladinne\", \"Giddalur\", \"Godavari\", \"Gooty\", \"Gudivada\", \"Gudur\", \"Guntur\", \"Hindupur\", \"Hunsabad\", \"Huzurabad\", \"Huzurnagar\", \"Hyderabad\", \"Ibrahimpatnam\", \"Jaggayyapet\", \"Jagtial\", \"Jammalamadugu\", \"Jangaon\", \"Jangareddygudem\", \"Jannaram\", \"Kadiri\", \"Kaikaluru\", \"Kakinada\", \"Kalwakurthy\", \"Kalyandurg\", \"Kamalapuram\", \"Kamareddy\", \"Kambadur\", \"Kanaganapalle\", \"Kandukuru\", \"Kanigiri\", \"Karimnagar\", \"Kavali\", \"Khammam\", \"Khanapur (AP)\", \"Kodangal\", \"Koduru\", \"Koilkuntla\", \"Kollapur\", \"Kothagudem\", \"Kovvur\", \"Krishna\", \"Krosuru\", \"Kuppam\", \"Kurnool\", \"Lakkireddipalli\", \"Madakasira\", \"Madanapalli\", \"Madhira\", \"Madnur\", \"Mahabubabad\", \"Mahabubnagar\", \"Mahadevapur\", \"Makthal\", \"Mancherial\", \"Mandapeta\", \"Mangalagiri\", \"Manthani\", \"Markapur\", \"Marturu\", \"Medachal\", \"Medak\", \"Medarmetla\", \"Metpalli\", \"Mriyalguda\", \"Mulug\", \"Mylavaram\", \"Nagarkurnool\", \"Nalgonda\", \"Nallacheruvu\", \"Nampalle\", \"Nandigama\", \"Nandikotkur\", \"Nandyal\", \"Narasampet\", \"Narasaraopet\", \"Narayanakhed\", \"Narayanpet\", \"Narsapur\", \"Narsipatnam\", \"Nazvidu\", \"Nelloe\", \"Nellore\", \"Nidamanur\", \"Nirmal\", \"Nizamabad\", \"Nuguru\", \"Ongole\", \"Outsarangapalle\", \"Paderu\", \"Pakala\", \"Palakonda\", \"Paland\", \"Palmaneru\", \"Pamuru\", \"Pargi\", \"Parkal\", \"Parvathipuram\", \"Pathapatnam\", \"Pattikonda\", \"Peapalle\", \"Peddapalli\", \"Peddapuram\", \"Penukonda\", \"Piduguralla\", \"Piler\", \"Pithapuram\", \"Podili\", \"Polavaram\", \"Prakasam\", \"Proddatur\", \"Pulivendla\", \"Punganur\", \"Putturu\", \"Rajahmundri\", \"Rajampeta\", \"Ramachandrapuram\", \"Ramannapet\", \"Rampachodavaram\", \"Rangareddy\", \"Rapur\", \"Rayachoti\", \"Rayadurg\", \"Razole\", \"Repalle\", \"Saluru\", \"Sangareddy\", \"Sathupalli\", \"Sattenapalle\", \"Satyavedu\", \"Shadnagar\", \"Siddavattam\", \"Siddipet\", \"Sileru\", \"Sircilla\", \"Sirpur Kagaznagar\", \"Sodam\", \"Sompeta\", \"Srikakulam\", \"Srikalahasthi\", \"Srisailam\", \"Srungavarapukota\", \"Sudhimalla\", \"Sullarpet\", \"Tadepalligudem\", \"Tadipatri\", \"Tanduru\", \"Tanuku\", \"Tekkali\", \"Tenali\", \"Thungaturthy\", \"Tirivuru\", \"Tirupathi\", \"Tuni\", \"Udaygiri\", \"Ulvapadu\", \"Uravakonda\", \"Utnor\", \"V.R. Puram\", \"Vaimpalli\", \"Vayalpad\", \"Venkatgiri\", \"Venkatgirikota\", \"Vijayawada\", \"Vikrabad\", \"Vinjamuru\", \"Vinukonda\", \"Visakhapatnam\", \"Vizayanagaram\", \"Vizianagaram\", \"Vuyyuru\", \"Wanaparthy\", \"Warangal\", \"Wardhannapet\", \"Yelamanchili\", \"Yelavaram\", \"Yeleswaram\", \"Yellandu\", \"Yellanuru\", \"Yellareddy\", \"Yerragondapalem\", \"Zahirabad\", \n            ]\n        },\n        {\n            name:\"Arunachal Pradesh [AR]\",\n            cityList:[\n                \"Along\", \"Anini\", \"Anjaw\", \"Bameng\", \"Basar\", \"Changlang\", \"Chowkhem\", \"Daporizo\", \"Dibang Valley\", \"Dirang\", \"Hayuliang\", \"Huri\", \"Itanagar\", \"Jairampur\", \"Kalaktung\", \"Kameng\", \"Khonsa\", \"Kolaring\", \"Kurung Kumey\", \"Lohit\", \"Lower Dibang Valley\", \"Lower Subansiri\", \"Mariyang\", \"Mechuka\", \"Miao\", \"Nefra\", \"Pakkekesang\", \"Pangin\", \"Papum Pare\", \"Passighat\", \"Roing\", \"Sagalee\", \"Seppa\", \"Siang\", \"Tali\", \"Taliha\", \"Tawang\", \"Tezu\", \"Tirap\", \"Tuting\", \"Upper Siang\", \"Upper Subansiri\", \"Yiang Kiag\",\n            ]\n        },\n        {\n            name:\"Assam [AS]\",\n            cityList:[\n                \"Abhayapuri\", \"Baithalangshu\", \"Barama\", \"Barpeta Road\", \"Bihupuria\", \"Bijni\", \"Bilasipara\", \"Bokajan\", \"Bokakhat\", \"Boko\", \"Bongaigaon\", \"Cachar\", \"Cachar Hills\", \"Darrang\", \"Dhakuakhana\", \"Dhemaji\", \"Dhubri\", \"Dibrugarh\", \"Digboi\", \"Diphu\", \"Goalpara\", \"Gohpur\", \"Golaghat\", \"Guwahati\", \"Hailakandi\", \"Hajo\", \"Halflong\", \"Hojai\", \"Howraghat\", \"Jorhat\", \"Kamrup\", \"Karbi Anglong\", \"Karimganj\", \"Kokarajhar\", \"Kokrajhar\", \"Lakhimpur\", \"Maibong\", \"Majuli\", \"Mangaldoi\", \"Mariani\", \"Marigaon\", \"Moranhat\", \"Morigaon\", \"Nagaon\", \"Nalbari\", \"Rangapara\", \"Sadiya\", \"Sibsagar\", \"Silchar\", \"Sivasagar\", \"Sonitpur\", \"Tarabarihat\", \"Tezpur\", \"Tinsukia\", \"Udalgiri\", \"Udalguri\", \"UdarbondhBarpeta\", \n            ]\n        },\n        {\n            name:\"Bihar [BH]\",\n            cityList:[\n                \"Adhaura\", \"Amarpur\", \"Araria\", \"Areraj\", \"Arrah\", \"Arwal\", \"Aurangabad\", \"Bagaha\", \"Banka\", \"Banmankhi\", \"Barachakia\", \"Barauni\", \"Barh\", \"Barosi\", \"Begusarai\", \"Benipatti\", \"Benipur\", \"Bettiah\", \"Bhabhua\", \"Bhagalpur\", \"Bhojpur\", \"Bidupur\", \"Biharsharif\", \"Bikram\", \"Bikramganj\", \"Birpur\", \"Buxar\", \"Chakai\", \"Champaran\", \"Chapara\", \"Dalsinghsarai\", \"Danapur\", \"Darbhanga\", \"Daudnagar\", \"Dhaka\", \"Dhamdaha\", \"Dumraon\", \"Ekma\", \"Forbesganj\", \"Gaya\", \"Gogri\", \"Gopalganj\", \"H.Kharagpur\", \"Hajipur\", \"Hathua\", \"Hilsa\", \"Imamganj\", \"Jahanabad\", \"Jainagar\", \"Jamshedpur\", \"Jamui\", \"Jehanabad\", \"Jhajha\", \"Jhanjharpur\", \"Kahalgaon\", \"Kaimur (Bhabua)\", \"Katihar\", \"Katoria\", \"Khagaria\", \"Kishanganj\", \"Korha\", \"Lakhisarai\", \"Madhepura\", \"Madhubani\", \"Maharajganj\", \"Mahua\", \"Mairwa\", \"Mallehpur\", \"Masrakh\", \"Mohania\", \"Monghyr\", \"Motihari\", \"Motipur\", \"Munger\", \"Muzaffarpur\", \"Nabinagar\", \"Nalanda\", \"Narkatiaganj\", \"Naugachia\", \"Nawada\", \"Pakribarwan\", \"Pakridayal\", \"Patna\", \"Phulparas\", \"Piro\", \"Pupri\", \"Purena\", \"Purnia\", \"Rafiganj\", \"Rajauli\", \"Ramnagar\", \"Raniganj\", \"Raxaul\", \"Rohtas\", \"Rosera\", \"S.Bakhtiarpur\", \"Saharsa\", \"Samastipur\", \"Saran\", \"Sasaram\", \"Seikhpura\", \"Sheikhpura\", \"Sheohar\", \"Sherghati\", \"Sidhawalia\", \"Singhwara\", \"Sitamarhi\", \"Siwan\", \"Sonepur\", \"Supaul\", \"Thakurganj\", \"Triveniganj\", \"Udakishanganj\", \"Vaishali\", \"Wazirganj\",     \n            ]\n        },\n        {\n            name:\"Chandigarh [CH]\",\n            cityList:[\n                \"Chandigarh\", \"Mani Marja\", \n            ]\n        },\n        {\n            name:\"Chhattisgarh [CG]\",\n            cityList:[\n                \"Ambikapur\", \"Antagarh\", \"Arang\", \"Bacheli\", \"Bagbahera\", \"Bagicha\", \"Baikunthpur\", \"Balod\", \"Balodabazar\", \"Balrampur\", \"Barpalli\", \"Basana\", \"Bastanar\", \"Bastar\", \"Bderajpur\", \"Bemetara\", \"Berla\", \"Bhairongarh\", \"Bhanupratappur\", \"Bharathpur\", \"Bhatapara\", \"Bhilai\", \"Bhilaigarh\", \"Bhopalpatnam\", \"Bijapur\", \"Bilaspur\", \"Bodla\", \"Bokaband\", \"Chandipara\", \"Chhinagarh\", \"Chhuriakala\", \"Chingmut\", \"Chuikhadan\", \"Dabhara\", \"Dallirajhara\", \"Dantewada\", \"Deobhog\", \"Dhamda\", \"Dhamtari\", \"Dharamjaigarh\", \"Dongargarh\", \"Durg\", \"Durgakondal\", \"Fingeshwar\", \"Gariaband\", \"Garpa\", \"Gharghoda\", \"Gogunda\", \"Ilamidi\", \"Jagdalpur\", \"Janjgir\", \"Janjgir-Champa\", \"Jarwa\", \"Jashpur\", \"Jashpurnagar\", \"Kabirdham-Kawardha\", \"Kanker\", \"Kasdol\", \"Kathdol\", \"Kathghora\", \"Kawardha\", \"Keskal\", \"Khairgarh\", \"Kondagaon\", \"Konta\", \"Korba\", \"Korea\", \"Kota\", \"Koyelibeda\", \"Kuakunda\", \"Kunkuri\", \"Kurud\", \"Lohadigundah\", \"Lormi\", \"Luckwada\", \"Mahasamund\", \"Makodi\", \"Manendragarh\", \"Manpur\", \"Marwahi\", \"Mohla\", \"Mungeli\", \"Nagri\", \"Narainpur\", \"Narayanpur\", \"Neora\", \"Netanar\", \"Odgi\", \"Padamkot\", \"Pakhanjur\", \"Pali\", \"Pandaria\", \"Pandishankar\", \"Parasgaon\", \"Pasan\", \"Patan\", \"Pathalgaon\", \"Pendra\", \"Pratappur\", \"Premnagar\", \"Raigarh\", \"Raipur\", \"Rajnandgaon\", \"Rajpur\", \"Ramchandrapur\", \"Saraipali\", \"Saranggarh\", \"Sarona\", \"Semaria\", \"Shakti\", \"Sitapur\", \"Sukma\", \"Surajpur\", \"Surguja\", \"Tapkara\", \"Toynar\", \"Udaipur\", \"Uproda\", \"Wadrainagar\", \n            ]\n        },\n        {\n            name:\"Dadra & Nagar Haveli [DN]\",\n            cityList:[\n                \"Amal\", \"Amli\", \"Bedpa\", \"Chikhli\", \"Dadra & Nagar Haveli\", \"Dahikhed\", \"Dolara\", \"Galonda\", \"Kanadi\", \"Karchond\", \"Khadoli\", \"Kharadpada\", \"Kherabari\", \"Kherdi\", \"Kothar\", \"Luari\", \"Mashat\", \"Rakholi\", \"Rudana\", \"Saili\", \"Sili\", \"Silvassa\", \"Sindavni\", \"Udva\", \"Umbarkoi\", \"Vansda\", \"Vasona\", \"Velugam\", \n            ]\n        },\n        {\n            name:\"Daman & Diu [DD]\",\n            cityList:[\n                \"Brancavare\", \"Dagasi\", \"Daman\", \"Diu\", \"Magarvara\", \"Nagwa\", \"Pariali\", \"Passo Covo\",\n            ]\n        },\n        {\n            name:\"Delhi [DL]\",\n            cityList:[\n                \"Central Delhi\", \"East Delhi\", \"New Delhi\", \"North Delhi\", \"North East Delhi\", \"North West Delhi\", \"South Delhi\", \"South West Delhi\", \"West Delhi\", \n            ]\n        },\n        {\n            name:\"Goa [GO]\",\n            cityList:[\n                \"Canacona\", \"Candolim\", \"Chinchinim\", \"Cortalim\", \"Goa\", \"Jua\", \"Madgaon\", \"Mahem\", \"Mapuca\", \"Marmagao\", \"Panji\", \"Ponda\", \"Sanvordem\", \"Terekhol\", \n            ]\n        },\n        {\n            name:\"Gujarat [GU]\",\n            cityList:[\n                \"Ahmedabad\", \"Ahwa\", \"Amod\", \"Amreli\", \"Anand\", \"Anjar\", \"Ankaleshwar\", \"Babra\", \"Balasinor\", \"Banaskantha\", \"Bansada\", \"Bardoli\", \"Bareja\", \"Baroda\", \"Barwala\", \"Bayad\", \"Bhachav\", \"Bhanvad\", \"Bharuch\", \"Bhavnagar\", \"Bhiloda\", \"Bhuj\", \"Billimora\", \"Borsad\", \"Botad\", \"Chanasma\", \"Chhota Udaipur\", \"Chotila\", \"Dabhoi\", \"Dahod\", \"Damnagar\", \"Dang\", \"Danta\", \"Dasada\", \"Dediapada\", \"Deesa\", \"Dehgam\", \"Deodar\", \"Devgadhbaria\", \"Dhandhuka\", \"Dhanera\", \"Dharampur\", \"Dhari\", \"Dholka\", \"Dhoraji\", \"Dhrangadhra\", \"Dhrol\", \"Dwarka\", \"Fortsongadh\", \"Gadhada\", \"Gandhi Nagar\", \"Gariadhar\", \"Godhra\", \"Gogodar\", \"Gondal\", \"Halol\", \"Halvad\", \"Harij\", \"Himatnagar\", \"Idar\", \"Jambusar\", \"Jamjodhpur\", \"Jamkalyanpur\", \"Jamnagar\", \"Jasdan\", \"Jetpur\", \"Jhagadia\", \"Jhalod\", \"Jodia\", \"Junagadh\", \"Junagarh\", \"Kalawad\", \"Kalol\", \"Kapad Wanj\", \"Keshod\", \"Khambat\", \"Khambhalia\", \"Khavda\", \"Kheda\", \"Khedbrahma\", \"Kheralu\", \"Kodinar\", \"Kotdasanghani\", \"Kunkawav\", \"Kutch\", \"Kutchmandvi\", \"Kutiyana\", \"Lakhpat\", \"Lakhtar\", \"Lalpur\", \"Limbdi\", \"Limkheda\", \"Lunavada\", \"M.M.Mangrol\", \"Mahuva\", \"Malia-Hatina\", \"Maliya\", \"Malpur\", \"Manavadar\", \"Mandvi\", \"Mangrol\", \"Mehmedabad\", \"Mehsana\", \"Miyagam\", \"Modasa\", \"Morvi\", \"Muli\", \"Mundra\", \"Nadiad\", \"Nakhatrana\", \"Nalia\", \"Narmada\", \"Naswadi\", \"Navasari\", \"Nizar\", \"Okha\", \"Paddhari\", \"Padra\", \"Palanpur\", \"Palitana\", \"Panchmahals\", \"Patan\", \"Pavijetpur\", \"Porbandar\", \"Prantij\", \"Radhanpur\", \"Rahpar\", \"Rajaula\", \"Rajkot\", \"Rajpipla\", \"Ranavav\", \"Sabarkantha\", \"Sanand\", \"Sankheda\", \"Santalpur\", \"Santrampur\", \"Savarkundla\", \"Savli\", \"Sayan\", \"Sayla\", \"Shehra\", \"Sidhpur\", \"Sihor\", \"Sojitra\", \"Sumrasar\", \"Surat\", \"Surendranagar\", \"Talaja\", \"Thara\", \"Tharad\", \"Thasra\", \"Una-Diu\", \"Upleta\", \"Vadgam\", \"Vadodara\", \"Valia\", \"Vallabhipur\", \"Valod\", \"Valsad\", \"Vanthali\", \"Vapi\", \"Vav\", \"Veraval\", \"Vijapur\", \"Viramgam\", \"Visavadar\", \"Visnagar\", \"Vyara\", \"Waghodia\", \"Wankaner\", \n            ]\n        },\n        {\n            name:\"Haryana [HR]\",\n            cityList:[\n                \"Adampur Mandi\", \"Ambala\", \"Assandh\", \"Bahadurgarh\", \"Barara\", \"Barwala\", \"Bawal\", \"Bawanikhera\", \"Bhiwani\", \"Charkhidadri\", \"Cheeka\", \"Chhachrauli\", \"Dabwali\", \"Ellenabad\", \"Faridabad\", \"Fatehabad\", \"Ferojpur Jhirka\", \"Gharaunda\", \"Gohana\", \"Gurgaon\", \"Hansi\", \"Hisar\", \"Jagadhari\", \"Jatusana\", \"Jhajjar\", \"Jind\", \"Julana\", \"Kaithal\", \"Kalanaur\", \"Kalanwali\", \"Kalka\", \"Karnal\", \"Kosli\", \"Kurukshetra\", \"Loharu\", \"Mahendragarh\", \"Meham\", \"Mewat\", \"Mohindergarh\", \"Naraingarh\", \"Narnaul\", \"Narwana\", \"Nilokheri\", \"Nuh\", \"Palwal\", \"Panchkula\", \"Panipat\", \"Pehowa\", \"Ratia\", \"Rewari\", \"Rohtak\", \"Safidon\", \"Sirsa\", \"Siwani\", \"Sonipat\", \"Tohana\", \"Tohsam\", \"Yamunanagar\", \n            ]\n        },\n        {\n            name:\"Himachal Pradesh [HP]\",\n            cityList:[\n                \"Amb\", \"Arki\", \"Banjar\", \"Bharmour\", \"Bilaspur\", \"Chamba\", \"Churah\", \"Dalhousie\", \"Dehra Gopipur\", \"Hamirpur\", \"Jogindernagar\", \"Kalpa\", \"Kangra\", \"Kinnaur\", \"Kullu\", \"Lahaul\", \"Mandi\", \"Nahan\", \"Nalagarh\", \"Nirmand\", \"Nurpur\", \"Palampur\", \"Pangi\", \"Paonta\", \"Pooh\", \"Rajgarh\", \"Rampur Bushahar\", \"Rohru\", \"Shimla\", \"Sirmaur\", \"Solan\", \"Spiti\", \"Sundernagar\", \"Theog\", \"Udaipur\", \"Una\", \n            ]\n        },\n        {\n            name:\"Jammu & Kashmir [JK]\",\n            cityList:[\n                \"Akhnoor\", \"Anantnag\", \"Badgam\", \"Bandipur\", \"Baramulla\", \"Basholi\", \"Bedarwah\", \"Budgam\", \"Doda\", \"Gulmarg\", \"Jammu\", \"Kalakot\", \"Kargil\", \"Karnah\", \"Kathua\", \"Kishtwar\", \"Kulgam\", \"Kupwara\", \"Leh\", \"Mahore\", \"Nagrota\", \"Nobra\", \"Nowshera\", \"Nyoma\", \"Padam\", \"Pahalgam\", \"Patnitop\", \"Poonch\", \"Pulwama\", \"Rajouri\", \"Ramban\", \"Ramnagar\", \"Reasi\", \"Samba\", \"Srinagar\", \"Udhampur\", \"Vaishno Devi\", \n            ]\n        },\n        {\n            name:\"Jharkhand [JH]\",\n            cityList:[\n                \"Bagodar\", \"Baharagora\", \"Balumath\", \"Barhi\", \"Barkagaon\", \"Barwadih\", \"Basia\", \"Bermo\", \"Bhandaria\", \"Bhawanathpur\", \"Bishrampur\", \"Bokaro\", \"Bolwa\", \"Bundu\", \"Chaibasa\", \"Chainpur\", \"Chakardharpur\", \"Chandil\", \"Chatra\", \"Chavparan\", \"Daltonganj\", \"Deoghar\", \"Dhanbad\", \"Dumka\", \"Dumri\", \"Garhwa\", \"Garu\", \"Ghaghra\", \"Ghatsila\", \"Giridih\", \"Godda\", \"Gomia\", \"Govindpur\", \"Gumla\", \"Hazaribagh\", \"Hunterganj\", \"Ichak\", \"Itki\", \"Jagarnathpur\", \"Jamshedpur\", \"Jamtara\", \"Japla\", \"Jharmundi\", \"Jhinkpani\", \"Jhumaritalaiya\", \"Kathikund\", \"Kharsawa\", \"Khunti\", \"Koderma\", \"Kolebira\", \"Latehar\", \"Lohardaga\", \"Madhupur\", \"Mahagama\", \"Maheshpur Raj\", \"Mandar\", \"Mandu\", \"Manoharpur\", \"Muri\", \"Nagarutatri\", \"Nala\", \"Noamundi\", \"Pakur\", \"Palamu\", \"Palkot\", \"Patan\", \"Rajdhanwar\", \"Rajmahal\", \"Ramgarh\", \"Ranchi\", \"Sahibganj\", \"Saraikela\", \"Simaria\", \"Simdega\", \"Singhbhum\", \"Tisri\", \"Torpa\", \n            ]\n        },\n        {\n            name:\"Karnataka [KR]\",\n            cityList:[\n                \"Afzalpur\", \"Ainapur\", \"Aland\", \"Alur\", \"Anekal\", \"Ankola\", \"Arsikere\", \"Athani\", \"Aurad\", \"Bableshwar\", \"Badami\", \"Bagalkot\", \"Bagepalli\", \"Bailhongal\", \"Bangalore\", \"Bangalore Rural\", \"Bangarpet\", \"Bantwal\", \"Basavakalyan\", \"Basavanabagewadi\", \"Basavapatna\", \"Belgaum\", \"Bellary\", \"Belthangady\", \"Belur\", \"Bhadravati\", \"Bhalki\", \"Bhatkal\", \"Bidar\", \"Bijapur\", \"Biligi\", \"Chadchan\", \"Challakere\", \"Chamrajnagar\", \"Channagiri\", \"Channapatna\", \"Channarayapatna\", \"Chickmagalur\", \"Chikballapur\", \"Chikkaballapur\", \"Chikkanayakanahalli\", \"Chikkodi\", \"Chikmagalur\", \"Chincholi\", \"Chintamani\", \"Chitradurga\", \"Chittapur\", \"Cowdahalli\", \"Davanagere\", \"Deodurga\", \"Devangere\", \"Devarahippargi\", \"Dharwad\", \"Doddaballapur\", \"Gadag\", \"Gangavathi\", \"Gokak\", \"Gowribdanpur\", \"Gubbi\", \"Gulbarga\", \"Gundlupet\", \"H.B.Halli\", \"H.D. Kote\", \"Haliyal\", \"Hampi\", \"Hangal\", \"Harapanahalli\", \"Hassan\", \"Haveri\", \"Hebri\", \"Hirekerur\", \"Hiriyur\", \"Holalkere\", \"Holenarsipur\", \"Honnali\", \"Honnavar\", \"Hosadurga\", \"Hosakote\", \"Hosanagara\", \"Hospet\", \"Hubli\", \"Hukkeri\", \"Humnabad\", \"Hungund\", \"Hunsagi\", \"Hunsur\", \"Huvinahadagali\", \"Indi\", \"Jagalur\", \"Jamkhandi\", \"Jewargi\", \"Joida\", \"K.R. Nagar\", \"Kadur\", \"Kalghatagi\", \"Kamalapur\", \"Kanakapura\", \"Kannada\", \"Kargal\", \"Karkala\", \"Karwar\", \"Khanapur\", \"Kodagu\", \"Kolar\", \"Kollegal\", \"Koppa\", \"Koppal\", \"Koratageri\", \"Krishnarajapet\", \"Kudligi\", \"Kumta\", \"Kundapur\", \"Kundgol\", \"Kunigal\", \"Kurugodu\", \"Kustagi\", \"Lingsugur\", \"Madikeri\", \"Madugiri\", \"Malavalli\", \"Malur\", \"Mandya\", \"Mangalore\", \"Manipal\", \"Manvi\", \"Mashal\", \"Molkalmuru\", \"Mudalgi\", \"Muddebihal\", \"Mudhol\", \"Mudigere\", \"Mulbagal\", \"Mundagod\", \"Mundargi\", \"Murugod\", \"Mysore\", \"Nagamangala\", \"Nanjangud\", \"Nargund\", \"Narsimrajapur\", \"Navalgund\", \"Nelamangala\", \"Nimburga\", \"Pandavapura\", \"Pavagada\", \"Puttur\", \"Raibag\", \"Raichur\", \"Ramdurg\", \"Ranebennur\", \"Ron\", \"Sagar\", \"Sakleshpur\", \"Salkani\", \"Sandur\", \"Saundatti\", \"Savanur\", \"Sedam\", \"Shahapur\", \"Shankarnarayana\", \"Shikaripura\", \"Shimoga\", \"Shirahatti\", \"Shorapur\", \"Siddapur\", \"Sidlaghatta\", \"Sindagi\", \"Sindhanur\", \"Sira\", \"Sirsi\", \"Siruguppa\", \"Somwarpet\", \"Sorab\", \"Sringeri\", \"Sriniwaspur\", \"Srirangapatna\", \"Sullia\", \"T. Narsipur\", \"Tallak\", \"Tarikere\", \"Telgi\", \"Thirthahalli\", \"Tiptur\", \"Tumkur\", \"Turuvekere\", \"Udupi\", \"Virajpet\", \"Wadi\", \"Yadgiri\", \"Yelburga\", \"Yellapur\", \n            ]\n        },\n        {\n            name:\"Kerala [KL]\",\n            cityList:[\n                \"Adimaly\", \"Adoor\", \"Agathy\", \"Alappuzha\", \"Alathur\", \"Alleppey\", \"Alwaye\", \"Amini\", \"Androth\", \"Attingal\", \"Badagara\", \"Bitra\", \"Calicut\", \"Cannanore\", \"Chetlet\", \"Ernakulam\", \"Idukki\", \"Irinjalakuda\", \"Kadamath\", \"Kalpeni\", \"Kalpetta\", \"Kanhangad\", \"Kanjirapally\", \"Kannur\", \"Karungapally\", \"Kasargode\", \"Kavarathy\", \"Kiltan\", \"Kochi\", \"Koduvayur\", \"Kollam\", \"Kottayam\", \"Kovalam\", \"Kozhikode\", \"Kunnamkulam\", \"Malappuram\", \"Mananthodi\", \"Manjeri\", \"Mannarghat\", \"Mavelikkara\", \"Minicoy\", \"Munnar\", \"Muvattupuzha\", \"Nedumandad\", \"Nedumgandam\", \"Nilambur\", \"Palai\", \"Palakkad\", \"Palghat\", \"Pathaanamthitta\", \"Pathanamthitta\", \"Payyanur\", \"Peermedu\", \"Perinthalmanna\", \"Perumbavoor\", \"Punalur\", \"Quilon\", \"Ranni\", \"Shertallai\", \"Shoranur\", \"Taliparamba\", \"Tellicherry\", \"Thiruvananthapuram\", \"Thodupuzha\", \"Thrissur\", \"Tirur\", \"Tiruvalla\", \"Trichur\", \"Trivandrum\", \"Uppala\", \"Vadakkanchery\", \"Vikom\", \"Wayanad\", \n            ]\n        },\n        {\n            name:\"Lakshadweep [LD]\",\n            cityList:[\n                \"Agatti Island\", \"Bingaram Island\", \"Bitra Island\", \"Chetlat Island\", \"Kadmat Island\", \"Kalpeni Island\", \"Kavaratti Island\", \"Kiltan Island\", \"Lakshadweep Sea\", \"Minicoy Island\", \"North Island\", \"South Island\", \n            ]\n        },\n        {\n            name:\"Madhya Pradesh [MP]\",\n            cityList:[\n                \"Agar\", \"Ajaigarh\", \"Alirajpur\", \"Amarpatan\", \"Amarwada\", \"Ambah\", \"Anuppur\", \"Arone\", \"Ashoknagar\", \"Ashta\", \"Atner\", \"Babaichichli\", \"Badamalhera\", \"Badarwsas\", \"Badnagar\", \"Badnawar\", \"Badwani\", \"Bagli\", \"Baihar\", \"Balaghat\", \"Baldeogarh\", \"Baldi\", \"Bamori\", \"Banda\", \"Bandhavgarh\", \"Bareli\", \"Baroda\", \"Barwaha\", \"Barwani\", \"Batkakhapa\", \"Begamganj\", \"Beohari\", \"Berasia\", \"Berchha\", \"Betul\", \"Bhainsdehi\", \"Bhander\", \"Bhanpura\", \"Bhikangaon\", \"Bhimpur\", \"Bhind\", \"Bhitarwar\", \"Bhopal\", \"Biaora\", \"Bijadandi\", \"Bijawar\", \"Bijaypur\", \"Bina\", \"Birsa\", \"Birsinghpur\", \"Budhni\", \"Burhanpur\", \"Buxwaha\", \"Chachaura\", \"Chanderi\", \"Chaurai\", \"Chhapara\", \"Chhatarpur\", \"Chhindwara\", \"Chicholi\", \"Chitrangi\", \"Churhat\", \"Dabra\", \"Damoh\", \"Datia\", \"Deori\", \"Deosar\", \"Depalpur\", \"Dewas\", \"Dhar\", \"Dharampuri\", \"Dindori\", \"Gadarwara\", \"Gairatganj\", \"Ganjbasoda\", \"Garoth\", \"Ghansour\", \"Ghatia\", \"Ghatigaon\", \"Ghorandogri\", \"Ghughari\", \"Gogaon\", \"Gohad\", \"Goharganj\", \"Gopalganj\", \"Gotegaon\", \"Gourihar\", \"Guna\", \"Gunnore\", \"Gwalior\", \"Gyraspur\", \"Hanumana\", \"Harda\", \"Harrai\", \"Harsud\", \"Hatta\", \"Hoshangabad\", \"Ichhawar\", \"Indore\", \"Isagarh\", \"Itarsi\", \"Jabalpur\", \"Jabera\", \"Jagdalpur\", \"Jaisinghnagar\", \"Jaithari\", \"Jaitpur\", \"Jaitwara\", \"Jamai\", \"Jaora\", \"Jatara\", \"Jawad\", \"Jhabua\", \"Jobat\", \"Jora\", \"Kakaiya\", \"Kannod\", \"Kannodi\", \"Karanjia\", \"Kareli\", \"Karera\", \"Karhal\", \"Karpa\", \"Kasrawad\", \"Katangi\", \"Katni\", \"Keolari\", \"Khachrod\", \"Khajuraho\", \"Khakner\", \"Khalwa\", \"Khandwa\", \"Khaniadhana\", \"Khargone\", \"Khategaon\", \"Khetia\", \"Khilchipur\", \"Khirkiya\", \"Khurai\", \"Kolaras\", \"Kotma\", \"Kukshi\", \"Kundam\", \"Kurwai\", \"Kusmi\", \"Laher\", \"Lakhnadon\", \"Lamta\", \"Lanji\", \"Lateri\", \"Laundi\", \"Maheshwar\", \"Mahidpurcity\", \"Maihar\", \"Majhagwan\", \"Majholi\", \"Malhargarh\", \"Manasa\", \"Manawar\", \"Mandla\", \"Mandsaur\", \"Manpur\", \"Mauganj\", \"Mawai\", \"Mehgaon\", \"Mhow\", \"Morena\", \"Multai\", \"Mungaoli\", \"Nagod\", \"Nainpur\", \"Narsingarh\", \"Narsinghpur\", \"Narwar\", \"Nasrullaganj\", \"Nateran\", \"Neemuch\", \"Niwari\", \"Niwas\", \"Nowgaon\", \"Pachmarhi\", \"Pandhana\", \"Pandhurna\", \"Panna\", \"Parasia\", \"Patan\", \"Patera\", \"Patharia\", \"Pawai\", \"Petlawad\", \"Pichhore\", \"Piparia\", \"Pohari\", \"Prabhapattan\", \"Punasa\", \"Pushprajgarh\", \"Raghogarh\", \"Raghunathpur\", \"Rahatgarh\", \"Raisen\", \"Rajgarh\", \"Rajpur\", \"Ratlam\", \"Rehli\", \"Rewa\", \"Sabalgarh\", \"Sagar\", \"Sailana\", \"Sanwer\", \"Sarangpur\", \"Sardarpur\", \"Satna\", \"Saunsar\", \"Sehore\", \"Sendhwa\", \"Seondha\", \"Seoni\", \"Seonimalwa\", \"Shahdol\", \"Shahnagar\", \"Shahpur\", \"Shajapur\", \"Sheopur\", \"Sheopurkalan\", \"Shivpuri\", \"Shujalpur\", \"Sidhi\", \"Sihora\", \"Silwani\", \"Singrauli\", \"Sirmour\", \"Sironj\", \"Sitamau\", \"Sohagpur\", \"Sondhwa\", \"Sonkatch\", \"Susner\", \"Tamia\", \"Tarana\", \"Tendukheda\", \"Teonthar\", \"Thandla\", \"Tikamgarh\", \"Timarani\", \"Udaipura\", \"Ujjain\", \"Umaria\", \"Umariapan\", \"Vidisha\", \"Vijayraghogarh\", \"Waraseoni\", \"Zhirnia\", \n            ]\n        },\n        {\n            name:\"Maharashtra [MH]\",\n            cityList:[\n                \"Achalpur\", \"Aheri\", \"Ahmednagar\", \"Ahmedpur\", \"Ajara\", \"Akkalkot\", \"Akola\", \"Akole\", \"Akot\", \"Alibagh\", \"Amagaon\", \"Amalner\", \"Ambad\", \"Ambejogai\", \"Amravati\", \"Arjuni Merogaon\", \"Arvi\", \"Ashti\", \"Atpadi\", \"Aurangabad\", \"Ausa\", \"Babhulgaon\", \"Balapur\", \"Baramati\", \"Barshi Takli\", \"Barsi\", \"Basmatnagar\", \"Bassein\", \"Beed\", \"Bhadrawati\", \"Bhamregadh\", \"Bhandara\", \"Bhir\", \"Bhiwandi\", \"Bhiwapur\", \"Bhokar\", \"Bhokardan\", \"Bhoom\", \"Bhor\", \"Bhudargad\", \"Bhusawal\", \"Billoli\", \"Brahmapuri\", \"Buldhana\", \"Butibori\", \"Chalisgaon\", \"Chamorshi\", \"Chandgad\", \"Chandrapur\", \"Chandur\", \"Chanwad\", \"Chhikaldara\", \"Chikhali\", \"Chinchwad\", \"Chiplun\", \"Chopda\", \"Chumur\", \"Dahanu\", \"Dapoli\", \"Darwaha\", \"Daryapur\", \"Daund\", \"Degloor\", \"Delhi Tanda\", \"Deogad\", \"Deolgaonraja\", \"Deori\", \"Desaiganj\", \"Dhadgaon\", \"Dhanora\", \"Dharani\", \"Dhiwadi\", \"Dhule\", \"Dhulia\", \"Digras\", \"Dindori\", \"Edalabad\", \"Erandul\", \"Etapalli\", \"Gadhchiroli\", \"Gadhinglaj\", \"Gaganbavada\", \"Gangakhed\", \"Gangapur\", \"Gevrai\", \"Ghatanji\", \"Golegaon\", \"Gondia\", \"Gondpipri\", \"Goregaon\", \"Guhagar\", \"Hadgaon\", \"Hatkangale\", \"Hinganghat\", \"Hingoli\", \"Hingua\", \"Igatpuri\", \"Indapur\", \"Islampur\", \"Jalgaon\", \"Jalna\", \"Jamkhed\", \"Jamner\", \"Jath\", \"Jawahar\", \"Jintdor\", \"Junnar\", \"Kagal\", \"Kaij\", \"Kalamb\", \"Kalamnuri\", \"Kallam\", \"Kalmeshwar\", \"Kalwan\", \"Kalyan\", \"Kamptee\", \"Kandhar\", \"Kankavali\", \"Kannad\", \"Karad\", \"Karjat\", \"Karmala\", \"Katol\", \"Kavathemankal\", \"Kedgaon\", \"Khadakwasala\", \"Khamgaon\", \"Khed\", \"Khopoli\", \"Khultabad\", \"Kinwat\", \"Kolhapur\", \"Kopargaon\", \"Koregaon\", \"Kudal\", \"Kuhi\", \"Kurkheda\", \"Kusumba\", \"Lakhandur\", \"Langa\", \"Latur\", \"Lonar\", \"Lonavala\", \"Madangad\", \"Madha\", \"Mahabaleshwar\", \"Mahad\", \"Mahagaon\", \"Mahasala\", \"Mahaswad\", \"Malegaon\", \"Malgaon\", \"Malgund\", \"Malkapur\", \"Malsuras\", \"Malwan\", \"Mancher\", \"Mangalwedha\", \"Mangaon\", \"Mangrulpur\", \"Manjalegaon\", \"Manmad\", \"Maregaon\", \"Mehda\", \"Mekhar\", \"Mohadi\", \"Mohol\", \"Mokhada\", \"Morshi\", \"Mouda\", \"Mukhed\", \"Mul\", \"Mumbai\", \"Murbad\", \"Murtizapur\", \"Murud\", \"Nagbhir\", \"Nagpur\", \"Nahavara\", \"Nanded\", \"Nandgaon\", \"Nandnva\", \"Nandurbar\", \"Narkhed\", \"Nashik\", \"Navapur\", \"Ner\", \"Newasa\", \"Nilanga\", \"Niphad\", \"Omerga\", \"Osmanabad\", \"Pachora\", \"Paithan\", \"Palghar\", \"Pali\", \"Pandharkawada\", \"Pandharpur\", \"Panhala\", \"Paranda\", \"Parbhani\", \"Parner\", \"Parola\", \"Parseoni\", \"Partur\", \"Patan\", \"Pathardi\", \"Pathari\", \"Patoda\", \"Pauni\", \"Peint\", \"Pen\", \"Phaltan\", \"Pimpalner\", \"Pirangut\", \"Poladpur\", \"Pune\", \"Pusad\", \"Pusegaon\", \"Radhanagar\", \"Rahuri\", \"Raigad\", \"Rajapur\", \"Rajgurunagar\", \"Rajura\", \"Ralegaon\", \"Ramtek\", \"Ratnagiri\", \"Raver\", \"Risod\", \"Roha\", \"Sakarwadi\", \"Sakoli\", \"Sakri\", \"Salekasa\", \"Samudrapur\", \"Sangamner\", \"Sanganeshwar\", \"Sangli\", \"Sangola\", \"Sanguem\", \"Saoner\", \"Saswad\", \"Satana\", \"Satara\", \"Sawantwadi\", \"Seloo\", \"Shahada\", \"Shahapur\", \"Shahuwadi\", \"Shevgaon\", \"Shirala\", \"Shirol\", \"Shirpur\", \"Shirur\", \"Shirwal\", \"Sholapur\", \"Shri Rampur\", \"Shrigonda\", \"Shrivardhan\", \"Sillod\", \"Sinderwahi\", \"Sindhudurg\", \"Sindkheda\", \"Sindkhedaraja\", \"Sinnar\", \"Sironcha\", \"Soyegaon\", \"Surgena\", \"Talasari\", \"Talegaon S.Ji Pant\", \"Taloda\", \"Tasgaon\", \"Thane\", \"Tirora\", \"Tiwasa\", \"Trimbak\", \"Tuljapur\", \"Tumsar\", \"Udgir\", \"Umarkhed\", \"Umrane\", \"Umrer\", \"Urlikanchan\", \"Vaduj\", \"Velhe\", \"Vengurla\", \"Vijapur\", \"Vita\", \"Wada\", \"Wai\", \"Walchandnagar\", \"Wani\", \"Wardha\", \"Warlydwarud\", \"Warora\", \"Washim\", \"Wathar\", \"Yavatmal\", \"Yawal\", \"Yeola\", \"Yeotmal\", \n            ]\n        },\n        {\n            name:\"Manipur [MN]\",\n            cityList:[\n                \"Bishnupur\", \"Chakpikarong\", \"Chandel\", \"Chattrik\", \"Churachandpur\", \"Imphal\", \"Jiribam\", \"Kakching\", \"Kalapahar\", \"Mao\", \"Mulam\", \"Parbung\", \"Sadarhills\", \"Saibom\", \"Sempang\", \"Senapati\", \"Sochumer\", \"Taloulong\", \"Tamenglong\", \"Thinghat\", \"Thoubal\", \"Ukhrul\", \n            ]\n        },\n        {\n            name:\"Meghalaya [ML]\",\n            cityList:[\n                \"Amlaren\", \"Baghmara\", \"Cherrapunjee\", \"Dadengiri\", \"Garo Hills\", \"Jaintia Hills\", \"Jowai\", \"Khasi Hills\", \"Khliehriat\", \"Mariang\", \"Mawkyrwat\", \"Nongpoh\", \"Nongstoin\", \"Resubelpara\", \"Ri Bhoi\", \"Shillong\", \"Tura\", \"Williamnagar\", \n            ]\n        },\n        {\n            name:\"Mizoram [MM]\",\n            cityList:[\n                \"Aizawl\", \"Champhai\", \"Demagiri\", \"Kolasib\", \"Lawngtlai\", \"Lunglei\", \"Mamit\", \"Saiha\", \"Serchhip\",\n            ]\n        },\n        {\n            name:\"Nagaland [NL]\",\n            cityList:[\n                \"Dimapur\", \"Jalukie\", \"Kiphire\", \"Kohima\", \"Mokokchung\", \"Mon\", \"Phek\", \"Tuensang\", \"Wokha\", \"Zunheboto\",\n            ]\n        },\n        {\n            name:\"Orissa [OR]\",\n            cityList:[\n                \"Anandapur\", \"Angul\", \"Anugul\", \"Aska\", \"Athgarh\", \"Athmallik\", \"Attabira\", \"Bagdihi\", \"Balangir\", \"Balasore\", \"Baleswar\", \"Baliguda\", \"Balugaon\", \"Banaigarh\", \"Bangiriposi\", \"Barbil\", \"Bargarh\", \"Baripada\", \"Barkot\", \"Basta\", \"Berhampur\", \"Betanati\", \"Bhadrak\", \"Bhanjanagar\", \"Bhawanipatna\", \"Bhubaneswar\", \"Birmaharajpur\", \"Bisam Cuttack\", \"Boriguma\", \"Boudh\", \"Buguda\", \"Chandbali\", \"Chhatrapur\", \"Chhendipada\", \"Cuttack\", \"Daringbadi\", \"Daspalla\", \"Deodgarh\", \"Deogarh\", \"Dhanmandal\", \"Dharamgarh\", \"Dhenkanal\", \"Digapahandi\", \"Dunguripali\", \"G. Udayagiri\", \"Gajapati\", \"Ganjam\", \"Ghatgaon\", \"Gudari\", \"Gunupur\", \"Hemgiri\", \"Hindol\", \"Jagatsinghapur\", \"Jajpur\", \"Jamankira\", \"Jashipur\", \"Jayapatna\", \"Jeypur\", \"Jharigan\", \"Jharsuguda\", \"Jujumura\", \"Kalahandi\", \"Kalimela\", \"Kamakhyanagar\", \"Kandhamal\", \"Kantabhanji\", \"Kantamal\", \"Karanjia\", \"Kashipur\", \"Kendrapara\", \"Kendujhar\", \"Keonjhar\", \"Khalikote\", \"Khordha\", \"Khurda\", \"Komana\", \"Koraput\", \"Kotagarh\", \"Kuchinda\", \"Lahunipara\", \"Laxmipur\", \"M. Rampur\", \"Malkangiri\", \"Mathili\", \"Mayurbhanj\", \"Mohana\", \"Motu\", \"Nabarangapur\", \"Naktideul\", \"Nandapur\", \"Narlaroad\", \"Narsinghpur\", \"Nayagarh\", \"Nimapara\", \"Nowparatan\", \"Nowrangapur\", \"Nuapada\", \"Padampur\", \"Paikamal\", \"Palla Hara\", \"Papadhandi\", \"Parajang\", \"Pardip\", \"Parlakhemundi\", \"Patnagarh\", \"Pattamundai\", \"Phiringia\", \"Phulbani\", \"Puri\", \"Puruna Katak\", \"R. Udayigiri\", \"Rairakhol\", \"Rairangpur\", \"Rajgangpur\", \"Rajkhariar\", \"Rayagada\", \"Rourkela\", \"Sambalpur\", \"Sohela\", \"Sonapur\", \"Soro\", \"Subarnapur\", \"Sunabeda\", \"Sundergarh\", \"Surada\", \"T. Rampur\", \"Talcher\", \"Telkoi\", \"Titlagarh\", \"Tumudibandha\", \"Udala\", \"Umerkote\",\n            ]\n        },\n        {\n            name:\"Pondicherry [PC]\",\n            cityList:[\n                \"Bahur\", \"Karaikal\", \"Mahe\", \"Pondicherry\", \"Purnankuppam\", \"Valudavur\", \"Villianur\", \"Yanam\", \n            ]\n        },\n        {\n            name:\"Punjab [PJ]\",\n            cityList:[\n                \"Abohar\", \"Ajnala\", \"Amritsar\", \"Balachaur\", \"Barnala\", \"Batala\", \"Bathinda\", \"Chandigarh\", \"Dasua\", \"Dinanagar\", \"Faridkot\", \"Fatehgarh Sahib\", \"Fazilka\", \"Ferozepur\", \"Garhashanker\", \"Goindwal\", \"Gurdaspur\", \"Guruharsahai\", \"Hoshiarpur\", \"Jagraon\", \"Jalandhar\", \"Jugial\", \"Kapurthala\", \"Kharar\", \"Kotkapura\", \"Ludhiana\", \"Malaut\", \"Malerkotla\", \"Mansa\", \"Moga\", \"Muktasar\", \"Nabha\", \"Nakodar\", \"Nangal\", \"Nawanshahar\", \"Nawanshahr\", \"Pathankot\", \"Patiala\", \"Patti\", \"Phagwara\", \"Phillaur\", \"Phulmandi\", \"Quadian\", \"Rajpura\", \"Raman\", \"Rayya\", \"Ropar\", \"Rupnagar\", \"Samana\", \"Samrala\", \"Sangrur\", \"Sardulgarh\", \"Sarhind\", \"SAS Nagar\", \"Sultanpur Lodhi\", \"Sunam\", \"Tanda Urmar\", \"Taran Taran\", \"Zira\", \n            ]\n        },\n        {\n            name:\"Rajasthan [RJ]\",\n            cityList:[\n                \"Abu Road\", \"Ahore\", \"Ajmer\", \"Aklera\", \"Alwar\", \"Amber\", \"Amet\", \"Anupgarh\", \"Asind\", \"Aspur\", \"Atru\", \"Bagidora\", \"Bali\", \"Bamanwas\", \"Banera\", \"Bansur\", \"Banswara\", \"Baran\", \"Bari\", \"Barisadri\", \"Barmer\", \"Baseri\", \"Bassi\", \"Baswa\", \"Bayana\", \"Beawar\", \"Begun\", \"Behror\", \"Bhadra\", \"Bharatpur\", \"Bhilwara\", \"Bhim\", \"Bhinmal\", \"Bikaner\", \"Bilara\", \"Bundi\", \"Chhabra\", \"Chhipaborad\", \"Chirawa\", \"Chittorgarh\", \"Chohtan\", \"Churu\", \"Dantaramgarh\", \"Dausa\", \"Deedwana\", \"Deeg\", \"Degana\", \"Deogarh\", \"Deoli\", \"Desuri\", \"Dhariawad\", \"Dholpur\", \"Digod\", \"Dudu\", \"Dungarpur\", \"Dungla\", \"Fatehpur\", \"Gangapur\", \"Gangdhar\", \"Gerhi\", \"Ghatol\", \"Girwa\", \"Gogunda\", \"Hanumangarh\", \"Hindaun\", \"Hindoli\", \"Hurda\", \"Jahazpur\", \"Jaipur\", \"Jaisalmer\", \"Jalore\", \"Jhalawar\", \"Jhunjhunu\", \"Jodhpur\", \"Kaman\", \"Kapasan\", \"Karauli\", \"Kekri\", \"Keshoraipatan\", \"Khandar\", \"Kherwara\", \"Khetri\", \"Kishanganj\", \"Kishangarh\", \"Kishangarhbas\", \"Kolayat\", \"Kota\", \"Kotputli\", \"Kotra\", \"Kotri\", \"Kumbalgarh\", \"Kushalgarh\", \"Ladnun\", \"Ladpura\", \"Lalsot\", \"Laxmangarh\", \"Lunkaransar\", \"Mahuwa\", \"Malpura\", \"Malvi\", \"Mandal\", \"Mandalgarh\", \"Mandawar\", \"Mangrol\", \"Marwar-Jn\", \"Merta\", \"Nadbai\", \"Nagaur\", \"Nainwa\", \"Nasirabad\", \"Nathdwara\", \"Nawa\", \"Neem Ka Thana\", \"Newai\", \"Nimbahera\", \"Nohar\", \"Nokha\", \"Onli\", \"Osian\", \"Pachpadara\", \"Pachpahar\", \"Padampur\", \"Pali\", \"Parbatsar\", \"Phagi\", \"Phalodi\", \"Pilani\", \"Pindwara\", \"Pipalda\", \"Pirawa\", \"Pokaran\", \"Pratapgarh\", \"Raipur\", \"Raisinghnagar\", \"Rajgarh\", \"Rajsamand\", \"Ramganj Mandi\", \"Ramgarh\", \"Rashmi\", \"Ratangarh\", \"Reodar\", \"Rupbas\", \"Sadulshahar\", \"Sagwara\", \"Sahabad\", \"Salumber\", \"Sanchore\", \"Sangaria\", \"Sangod\", \"Sapotra\", \"Sarada\", \"Sardarshahar\", \"Sarwar\", \"Sawai Madhopur\", \"Shahapura\", \"Sheo\", \"Sheoganj\", \"Shergarh\", \"Sikar\", \"Sirohi\", \"Siwana\", \"Sojat\", \"Sri Dungargarh\", \"Sri Ganganagar\", \"Sri Karanpur\", \"Sri Madhopur\", \"Sujangarh\", \"Taranagar\", \"Thanaghazi\", \"Tibbi\", \"Tijara\", \"Todaraisingh\", \"Tonk\", \"Udaipur\", \"Udaipurwati\", \"Uniayara\", \"Vallabhnagar\", \"Viratnagar\", \n            ]\n        },\n        {\n            name:\"Sikkim [SK]\",\n            cityList:[\n                \"Barmiak\", \"Be\", \"Bhurtuk\", \"Chhubakha\", \"Chidam\", \"Chubha\", \"Chumikteng\", \"Dentam\", \"Dikchu\", \"Dzongri\", \"Gangtok\", \"Gauzing\", \"Gyalshing\", \"Hema\", \"Kerung\", \"Lachen\", \"Lachung\", \"Lema\", \"Lingtam\", \"Lungthu\", \"Mangan\", \"Namchi\", \"Namthang\", \"Nanga\", \"Nantang\", \"Naya Bazar\", \"Padamachen\", \"Pakhyong\", \"Pemayangtse\", \"Phensang\", \"Rangli\", \"Rinchingpong\", \"Sakyong\", \"Samdong\", \"Singtam\", \"Siniolchu\", \"Sombari\", \"Soreng\", \"Sosing\", \"Tekhug\", \"Temi\", \"Tsetang\", \"Tsomgo\", \"Tumlong\", \"Yangang\", \"Yumtang\", \n            ]\n        },\n        {\n            name:\"Tamil Nadu [TN]\",\n            cityList:[\n                \"Ambasamudram\", \"Anamali\", \"Arakandanallur\", \"Arantangi\", \"Aravakurichi\", \"Ariyalur\", \"Arkonam\", \"Arni\", \"Aruppukottai\", \"Attur\", \"Avanashi\", \"Batlagundu\", \"Bhavani\", \"Chengalpattu\", \"Chengam\", \"Chennai\", \"Chidambaram\", \"Chingleput\", \"Coimbatore\", \"Courtallam\", \"Cuddalore\", \"Cumbum\", \"Denkanikoitah\", \"Devakottai\", \"Dharampuram\", \"Dharmapuri\", \"Dindigul\", \"Erode\", \"Gingee\", \"Gobichettipalayam\", \"Gudalur\", \"Gudiyatham\", \"Harur\", \"Hosur\", \"Jayamkondan\", \"Kallkurichi\", \"Kanchipuram\", \"Kangayam\", \"Kanyakumari\", \"Karaikal\", \"Karaikudi\", \"Karur\", \"Keeranur\", \"Kodaikanal\", \"Kodumudi\", \"Kotagiri\", \"Kovilpatti\", \"Krishnagiri\", \"Kulithalai\", \"Kumbakonam\", \"Kuzhithurai\", \"Madurai\", \"Madurantgam\", \"Manamadurai\", \"Manaparai\", \"Mannargudi\", \"Mayiladuthurai\", \"Mayiladutjurai\", \"Mettupalayam\", \"Metturdam\", \"Mudukulathur\", \"Mulanur\", \"Musiri\", \"Nagapattinam\", \"Nagarcoil\", \"Namakkal\", \"Nanguneri\", \"Natham\", \"Neyveli\", \"Nilgiris\", \"Oddanchatram\", \"Omalpur\", \"Ootacamund\", \"Ooty\", \"Orathanad\", \"Palacode\", \"Palani\", \"Palladum\", \"Papanasam\", \"Paramakudi\", \"Pattukottai\", \"Perambalur\", \"Perundurai\", \"Pollachi\", \"Polur\", \"Pondicherry\", \"Ponnamaravathi\", \"Ponneri\", \"Pudukkottai\", \"Rajapalayam\", \"Ramanathapuram\", \"Rameshwaram\", \"Ranipet\", \"Rasipuram\", \"Salem\", \"Sankagiri\", \"Sankaran\", \"Sathiyamangalam\", \"Sivaganga\", \"Sivakasi\", \"Sriperumpudur\", \"Srivaikundam\", \"Tenkasi\", \"Thanjavur\", \"Theni\", \"Thirumanglam\", \"Thiruraipoondi\", \"Thoothukudi\", \"Thuraiyure\", \"Tindivanam\", \"Tiruchendur\", \"Tiruchengode\", \"Tiruchirappalli\", \"Tirunelvelli\", \"Tirupathur\", \"Tirupur\", \"Tiruttani\", \"Tiruvallur\", \"Tiruvannamalai\", \"Tiruvarur\", \"Tiruvellore\", \"Tiruvettipuram\", \"Trichy\", \"Tuticorin\", \"Udumalpet\", \"Ulundurpet\", \"Usiliampatti\", \"Uthangarai\", \"Valapady\", \"Valliyoor\", \"Vaniyambadi\", \"Vedasandur\", \"Vellore\", \"Velur\", \"Vilathikulam\", \"Villupuram\", \"Virudhachalam\", \"Virudhunagar\", \"Wandiwash\", \"Yercaud\", \n            ]\n        },\n        {\n            name:\"Tripura [TR]\",\n            cityList:[\n                \"Agartala\", \"Ambasa\", \"Bampurbari\", \"Belonia\", \"Dhalai\", \"Dharam Nagar\", \"Kailashahar\", \"Kamal Krishnabari\", \"Khopaiyapara\", \"Khowai\", \"Phuldungsei\", \"Radha Kishore Pur\", \"Tripura\", \n            ]\n        },\n        {\n            name:\"Uttar Pradesh [UP]\",\n            cityList:[\n                \"Achhnera\", \"Agra\", \"Akbarpur\", \"Aliganj\", \"Aligarh\", \"Allahabad\", \"Ambedkar Nagar\", \"Amethi\", \"Amiliya\", \"Amroha\", \"Anola\", \"Atrauli\", \"Auraiya\", \"Azamgarh\", \"Baberu\", \"Badaun\", \"Baghpat\", \"Bagpat\", \"Baheri\", \"Bahraich\", \"Ballia\", \"Balrampur\", \"Banda\", \"Bansdeeh\", \"Bansgaon\", \"Bansi\", \"Barabanki\", \"Bareilly\", \"Basti\", \"Bhadohi\", \"Bharthana\", \"Bharwari\", \"Bhogaon\", \"Bhognipur\", \"Bidhuna\", \"Bijnore\", \"Bikapur\", \"Bilari\", \"Bilgram\", \"Bilhaur\", \"Bindki\", \"Bisalpur\", \"Bisauli\", \"Biswan\", \"Budaun\", \"Budhana\", \"Bulandshahar\", \"Bulandshahr\", \"Capianganj\", \"Chakia\", \"Chandauli\", \"Charkhari\", \"Chhata\", \"Chhibramau\", \"Chirgaon\", \"Chitrakoot\", \"Chunur\", \"Dadri\", \"Dalmau\", \"Dataganj\", \"Debai\", \"Deoband\", \"Deoria\", \"Derapur\", \"Dhampur\", \"Domariyaganj\", \"Dudhi\", \"Etah\", \"Etawah\", \"Faizabad\", \"Farrukhabad\", \"Fatehpur\", \"Firozabad\", \"Garauth\", \"Garhmukteshwar\", \"Gautam Buddha Nagar\", \"Ghatampur\", \"Ghaziabad\", \"Ghazipur\", \"Ghosi\", \"Gonda\", \"Gorakhpur\", \"Gunnaur\", \"Haidergarh\", \"Hamirpur\", \"Hapur\", \"Hardoi\", \"Harraiya\", \"Hasanganj\", \"Hasanpur\", \"Hathras\", \"Jalalabad\", \"Jalaun\", \"Jalesar\", \"Jansath\", \"Jarar\", \"Jasrana\", \"Jaunpur\", \"Jhansi\", \"Jyotiba Phule Nagar\", \"Kadipur\", \"Kaimganj\", \"Kairana\", \"Kaisarganj\", \"Kalpi\", \"Kannauj\", \"Kanpur\", \"Karchhana\", \"Karhal\", \"Karvi\", \"Kasganj\", \"Kaushambi\", \"Kerakat\", \"Khaga\", \"Khair\", \"Khalilabad\", \"Kheri\", \"Konch\", \"Kumaon\", \"Kunda\", \"Kushinagar\", \"Lalganj\", \"Lalitpur\", \"Lucknow\", \"Machlishahar\", \"Maharajganj\", \"Mahoba\", \"Mainpuri\", \"Malihabad\", \"Mariyahu\", \"Math\", \"Mathura\", \"Mau\", \"Maudaha\", \"Maunathbhanjan\", \"Mauranipur\", \"Mawana\", \"Meerut\", \"Mehraun\", \"Meja\", \"Mirzapur\", \"Misrikh\", \"Modinagar\", \"Mohamdabad\", \"Mohamdi\", \"Moradabad\", \"Musafirkhana\", \"Muzaffarnagar\", \"Nagina\", \"Najibabad\", \"Nakur\", \"Nanpara\", \"Naraini\", \"Naugarh\", \"Nawabganj\", \"Nighasan\", \"Noida\", \"Orai\", \"Padrauna\", \"Pahasu\", \"Patti\", \"Pharenda\", \"Phoolpur\", \"Phulpur\", \"Pilibhit\", \"Pitamberpur\", \"Powayan\", \"Pratapgarh\", \"Puranpur\", \"Purwa\", \"Raibareli\", \"Rampur\", \"Ramsanehi Ghat\", \"Rasara\", \"Rath\", \"Robertsganj\", \"Sadabad\", \"Safipur\", \"Sagri\", \"Saharanpur\", \"Sahaswan\", \"Sahjahanpur\", \"Saidpur\", \"Salempur\", \"Salon\", \"Sambhal\", \"Sandila\", \"Sant Kabir Nagar\", \"Sant Ravidas Nagar\", \"Sardhana\", \"Shahabad\", \"Shahganj\", \"Shahjahanpur\", \"Shikohabad\", \"Shravasti\", \"Siddharthnagar\", \"Sidhauli\", \"Sikandra Rao\", \"Sikandrabad\", \"Sitapur\", \"Siyana\", \"Sonbhadra\", \"Soraon\", \"Sultanpur\", \"Tanda\", \"Tarabganj\", \"Tilhar\", \"Unnao\", \"Utraula\", \"Varanasi\", \"Zamania\", \n            ]\n        },\n        {\n            name:\"Uttaranchal [UT]\",\n            cityList:[\n                \"Almora\", \"Bageshwar\", \"Bhatwari\", \"Chakrata\", \"Chamoli\", \"Champawat\", \"Dehradun\", \"Deoprayag\", \"Dharchula\", \"Dunda\", \"Haldwani\", \"Haridwar\", \"Joshimath\", \"Karan Prayag\", \"Kashipur\", \"Khatima\", \"Kichha\", \"Lansdown\", \"Munsiari\", \"Mussoorie\", \"Nainital\", \"Pantnagar\", \"Partapnagar\", \"Pauri Garhwal\", \"Pithoragarh\", \"Purola\", \"Rajgarh\", \"Ranikhet\", \"Roorkee\", \"Rudraprayag\", \"Tehri Garhwal\", \"Udham Singh Nagar\", \"Ukhimath\", \"Uttarkashi\", \n            ]\n        },\n        {\n            name:\"West Bengal [WB]\",\n            cityList:[\n                \"Adra\", \"Alipurduar\", \"Amlagora\", \"Arambagh\", \"Asansol\", \"Balurghat\", \"Bankura\", \"Bardhaman\", \"Basirhat\", \"Berhampur\", \"Bethuadahari\", \"Birbhum\", \"Birpara\", \"Bishanpur\", \"Bolpur\", \"Bongoan\", \"Bulbulchandi\", \"Burdwan\", \"Calcutta\", \"Canning\", \"Champadanga\", \"Contai\", \"Cooch Behar\", \"Daimond Harbour\", \"Dalkhola\", \"Dantan\", \"Darjeeling\", \"Dhaniakhali\", \"Dhuliyan\", \"Dinajpur\", \"Dinhata\", \"Durgapur\", \"Gangajalghati\", \"Gangarampur\", \"Ghatal\", \"Guskara\", \"Habra\", \"Haldia\", \"Harirampur\", \"Harishchandrapur\", \"Hooghly\", \"Howrah\", \"Islampur\", \"Jagatballavpur\", \"Jalpaiguri\", \"Jhalda\", \"Jhargram\", \"Kakdwip\", \"Kalchini\", \"Kalimpong\", \"Kalna\", \"Kandi\", \"Karimpur\", \"Katwa\", \"Kharagpur\", \"Khatra\", \"Krishnanagar\", \"Mal Bazar\", \"Malda\", \"Manbazar\", \"Mathabhanga\", \"Medinipur\", \"Mekhliganj\", \"Mirzapur\", \"Murshidabad\", \"Nadia\", \"Nagarakata\", \"Nalhati\", \"Nayagarh\", \"Parganas\", \"Purulia\", \"Raiganj\", \"Rampur Hat\", \"Ranaghat\", \"Seharabazar\", \"Siliguri\", \"Suri\", \"Takipur\", \"Tamluk\", \n            ]\n        },\n        // {\n        //     name:\"\",\n        //     cityList:[\n\n        //     ]\n        // },\n        \n    ];\n    if(!sname) return [];\n    console.log(sname);\n    //return statelist[0].cityList;\n    return statelist.filter(c => !c.name.localeCompare(sname))[0].cityList;\n}\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { getStateName, getStateWiseCity } from \"../../utils/auth\";\nimport { customerRegister } from \"../../services/userService\";\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass CustomerRegistration extends Component {\n    state = {\n        data: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            streetName: \"\",\n            cityName: \"\",\n            zipCode: \"\",\n            country: \"India\",\n            stateName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n        error: {},\n    };\n\n    formData = {\n        states: getStateName(),\n        cityList: getStateWiseCity(this.state.stateName),\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleState = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        data.cityName = \"\";\n        this.setState({ data });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n\n        // this.props.auth(\"customerLogged\");\n        // this.props.onSuccess(\"/customer\");\n\n        try {\n            const response = await customerRegister(this.state.data);\n            console.log(response);\n            alert(\n                \"SignedUp Successfully. Check your email to verify and Signin .\"\n            );\n            window.location = \"/\";\n        } catch (ex) {\n            if (ex.response) {\n                const error = { ...ex.response.data };\n                console.log(\"error\", ex.response);\n                this.setState({ error });\n            }\n        }\n    };\n\n    handleHidden = () => {\n        return this.props.tabValue !== this.props.index;\n    };\n\n    handleSignin = () => {\n        this.props.onSuccess();\n    };\n\n    render() {\n        console.log(this.state.data);\n        const { classes } = this.props;\n        const { states: statesList, cityList } = this.formData;\n        const { error } = this.state;\n        return (\n            <form\n                className={classes.form}\n                noValidate\n                onSubmit={this.handleSubmit}\n                hidden={this.props.tabValue !== this.props.index}\n            >\n                <Grid container spacing={2}>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Name and Contact Details\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"firstName\"\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    error={error && error.firstName}\n                                    helperText={error && error.firstName}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    onChange={this.handleChange}\n                                    error={error && error.lastName}\n                                    helperText={error && error.lastName}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"email\"\n                                    variant=\"filled\"\n                                    type=\"email\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Complete Email Address\"\n                                    onChange={this.handleChange}\n                                    error={error && error.email}\n                                    helperText={error && error.email}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"phoneNumber\"\n                                    label=\"Contact Number\"\n                                    name=\"phoneNumber\"\n                                    onChange={this.handleChange}\n                                    error={error && error.phoneNumber}\n                                    helperText={error && error.phoneNumber}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Address\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={4}>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"demo-simple-select-filled-label\">\n                                        State\n                                    </InputLabel>\n                                    <Select\n                                        name=\"stateName\"\n                                        labelId=\"demo-simple-select-filled-label\"\n                                        id=\"demo-simple-select-filled\"\n                                        value={this.state.data.stateName}\n                                        onChange={this.handleState}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>Choose...</em>\n                                        </MenuItem>\n                                        {statesList.map((state, i) => (\n                                            <MenuItem key={i} value={state}>\n                                                {state}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"demo-simple-select-filled-label\">\n                                        City\n                                    </InputLabel>\n                                    <Select\n                                        name=\"cityName\"\n                                        labelId=\"demo-simple-select-filled-label\"\n                                        id=\"demo-simple-select-filled\"\n                                        value={this.state.data.cityName}\n                                        onChange={this.handleSelect}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>Choose...</em>\n                                        </MenuItem>\n                                        {getStateWiseCity(\n                                            this.state.data.stateName\n                                        ).map((city, i) => (\n                                            <MenuItem key={i} value={city}>\n                                                {city}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"country\"\n                                    label=\"Country\"\n                                    name=\"country\"\n                                    defaultValue=\"India\"\n                                    //onChange={this.handleChange}\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"zipCode\"\n                                    label=\"Zip Code\"\n                                    name=\"zipCode\"\n                                    onChange={this.handleChange}\n                                    error={error && error.address}\n                                    helperText={error && error.address}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"streetName\"\n                                    label=\"Street Name\"\n                                    name=\"streetName\"\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Password\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.password}\n                                    helperText={error && error.password}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.confirmPassword}\n                                    helperText={error && error.confirmPassword}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    value=\"allowExtraEmails\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                    <Grid item onClick={this.handleSignin}>\n                        <Link style={{ cursor: \"pointer\" }} variant=\"body2\">\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CustomerRegistration);\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { getStateName, getStateWiseCity } from \"../../utils/auth\";\nimport { ShopRegister } from \"../../services/userService\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n    root: {\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n});\n\nclass ShopOwnerRegistration extends Component {\n    state = {\n        data: {\n            firstName: \"\",\n            lastName: \"\",\n            shopName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            address:\"\",\n            password: \"\",\n            confirmPassword: \"\",\n            openingHour: 0,\n            openingMinute: 0,\n            closingHour: 0,\n            closingMinute: 0,\n            tags: [],\n            bookingTimeUnit: \"\",\n            maxConcurrent: 0,\n            payment_modes: [],\n            discount: 0,\n        },\n        error: {},\n    };\n\n    formData = {\n        states: getStateName(),\n        cityList: getStateWiseCity(this.state.stateName),\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleNumberChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = parseInt(input.value);\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    updateLocation = (addr) => {\n        let data = { ...this.state.data };\n        data[\"address\"] = addr.description;\n        this.setState({ data });\n        localStorage.setItem(\"userAddress\", addr.description);\n    };\n\n    handleMultipleSelect = (event) => {};\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n\n        try {\n            const response = await ShopRegister(this.state.data);\n            console.log(response);\n            alert(\n                \"SignedUp Successfully. Check your email to verify and Signin .\"\n            );\n            window.location = \"/\";\n        } catch (ex) {\n            if (ex.response) {\n                if (ex.response.status == 500) {\n                    alert(ex.response.data);\n                } else {\n                    const error = { ...ex.response.data };\n                    this.setState({ error });\n                }\n                console.log(\"error\", ex.response);\n            }\n        }\n    };\n\n    // handleSubmit = (e) => {\n    //   e.preventDefault();\n    //   console.log(\"Registered\", this.state);\n    //   this.props.onSuccess(\"/shopowner\");\n    //   this.props.auth(\"shopOwnerLogged\");\n    // };\n\n    handleHidden = () => {\n        return this.props.tabValue !== this.props.index;\n    };\n\n    handleSignin = () => {\n        this.props.onSuccess();\n    };\n\n    render() {\n        console.log(this.state.data);\n\n        const { classes } = this.props;\n        const { error } = this.state;\n        return (\n            <form\n                className={classes.form}\n                noValidate\n                onSubmit={this.handleSubmit}\n                hidden={this.props.tabValue !== this.props.index}\n            >\n                <Grid container spacing={2}>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <TextField\n                            name=\"shopName\"\n                            variant=\"filled\"\n                            required\n                            fullWidth\n                            id=\"shopName\"\n                            label=\"Shop Name\"\n                            autoFocus\n                            error={error && error.shopName}\n                            helperText={error && error.shopName}\n                            onChange={this.handleChange}\n                        />\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Name and Contact Details\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"firstName\"\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    error={error && error.ownerName}\n                                    helperText={error && error.ownerName}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    onChange={this.handleChange}\n                                    error={error && error.ownerName}\n                                    helperText={error && error.ownerName}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"email\"\n                                    variant=\"filled\"\n                                    type=\"email\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Complete Email Address\"\n                                    onChange={this.handleChange}\n                                    error={error && error.email}\n                                    helperText={error && error.email}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"phoneNumber\"\n                                    label=\"Contact Number\"\n                                    name=\"phoneNumber\"\n                                    onChange={this.handleChange}\n                                    error={error && error.phoneNumber}\n                                    helperText={error && error.phoneNumber}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Address\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Paper\n                                    component=\"form\"\n                                    className={classes.root}\n                                >\n                                    <IconButton\n                                        type=\"submit\"\n                                        className={classes.iconButton}\n                                        aria-label=\"search\"\n                                    >\n                                        <SearchIcon />\n                                    </IconButton>\n                                    <GooglePlacesAutocomplete\n                                        onSelect={this.updateLocation}\n                                    />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Opening Time And Closing Time(Please use 24Hr\n                            format)\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"openingHour\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 24,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"openingHour\"\n                                    label=\"Opening Hour\"\n                                    error={error && error.openingHour}\n                                    helperText={error && error.openingHour}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"openingMinute\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 60,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"openingMinute\"\n                                    label=\"Opening Minute\"\n                                    error={error && error.openingMinute}\n                                    helperText={error && error.openingMinute}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"closingHour\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 24,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"closingHour\"\n                                    label=\"Closing Hour\"\n                                    error={error && error.closingHour}\n                                    helperText={error && error.closingHour}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"closingMinute\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 60,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"closingMinute\"\n                                    label=\"Cloosing Minute\"\n                                    error={error && error.closingMinute}\n                                    helperText={error && error.closingMinute}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Discount And Times given to Customer per each Item\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"bookingTimeUnit\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"bookingTimeUnit\"\n                                    label=\"Average Times given for Five items(In Minutes)\"\n                                    error={error && error.bookingTimeUnit}\n                                    helperText={error && error.bookingTimeUnit}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"discount\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"discount\"\n                                    label=\"Discount\"\n                                    error={error && error.discount}\n                                    helperText={error && error.discount}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name=\"maxConcurrent\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"maxConcurrent\"\n                                    label=\"Max Customer Accomodetion\"\n                                    error={error && error.maxConcurrent}\n                                    helperText={error && error.maxConcurrent}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Items Type And Payments Method Avaialable\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <MultipleSelect\n                                    selectedItems={\n                                        this.state.data.payment_modes\n                                    }\n                                    handleChange={this.handleSelect}\n                                    classes={classes}\n                                    name=\"payment_modes\"\n                                    label=\"Accepted Payment Modes\"\n                                    theme={this.props.theme}\n                                    items={[\n                                        \"Cards\",\n                                        \"Cash\",\n                                        \"Gpay\",\n                                        \"Digital Wallets\",\n                                        \"UPI\",\n                                        \"Other Methods\",\n                                    ]}\n                                />\n                                <Typography\n                                    variant=\"caption\"\n                                    display=\"block\"\n                                    style={{ color: \"red\" }}\n                                >\n                                    {error && error.payment_modes}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <MultipleSelect\n                                    selectedItems={this.state.data.tags}\n                                    handleChange={this.handleSelect}\n                                    classes={classes}\n                                    name=\"tags\"\n                                    label=\"Type of Items Available\"\n                                    theme={this.props.theme}\n                                    items={[\n                                        \"Meat & Fish\",\n                                        \"Grocery\",\n                                        \"Condiments(Spices)\",\n                                        \"Grains and Bread\",\n                                        \"Dairy & Eggs\",\n                                        \"Oil & Fat\",\n                                        \"Tinned & Dried Produce\",\n                                        \"Electronics\",\n                                    ]}\n                                />\n                                <Typography\n                                    variant=\"caption\"\n                                    display=\"block\"\n                                    style={{ color: \"red\" }}\n                                >\n                                    {error && error.tags}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Password\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.password}\n                                    helperText={error && error.password}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.confirmPassword}\n                                    helperText={error && error.confirmPassword}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    value=\"allowExtraEmails\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                    <Grid item onClick={this.handleSignin}>\n                        <Link style={{ cursor: \"pointer\" }} variant=\"body2\">\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(\n    ShopOwnerRegistration\n);\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport CustomerRegistration from \"./CustomerRegistration\";\nimport ShopOwnerRegistration from \"./ShopOwnerRegistration\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withRouter } from \"react-router-dom\";\nimport SignIn from './signin';\n\n\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n});\n\nclass SignUp extends Component {\n    state = {\n        value: 0,\n        open:false,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n        console.log(\"value\", this.state.value);\n    };\n\n    handleSignin = () => {\n        this.setState({ open: true });\n    };\n\n    handleAuth = (auth) => {\n        this.props.handleAuth(auth);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n        return (\n            <Container component=\"main\" maxWidth=\"md\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Paper square>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                        >\n                            <Tab label=\"Customer\" />\n                            <Tab label=\"Shop Owner\" />\n                        </Tabs>\n                    </Paper>\n                    <CustomerRegistration\n                        tabValue={value}\n                        onSuccess={this.handleSignin}\n                        auth={this.handleAuth}\n                        index={0}\n                    />\n                    <ShopOwnerRegistration\n                        tabValue={value}\n                        onSuccess={this.handleSignin}\n                        auth={this.handleAuth}\n                        index={1}\n                    />\n                    <Dialog\n                        onClose={this.handleClose}\n                        aria-labelledby=\"simple-dialog-title\"\n                        open={this.state.open}\n                    >\n                        <SignIn\n                            handleAuth={this.props.handleAuth}\n                            handleClose={this.handleClose}\n                        />\n                    </Dialog>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles)(SignUp));\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport PaymentIcon from \"@material-ui/icons/Payment\";\nimport DirectionsBikeIcon from \"@material-ui/icons/DirectionsBike\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarRateOutlinedIcon from \"@material-ui/icons/StarRateOutlined\";\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"#ffffff\",\n        width: \"100%\",\n        //width: window.innerWidth<500 ? (window.innerWidth*0.96) : 600,\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        //padding: 10,\n        marginLeft: 8,\n        marginTop: 10,\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    cover: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        // marginBottom:20,\n    },\n    controls: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    bim: {\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n    },\n});\n\nclass Shop extends Component {\n    state = {\n        imWidth: \"90%\",\n    };\n\n    handleClick = () => {\n        //this.props.history.push(`/customer/shop/`);\n        this.props.history.push(`/customer/shop/${this.props.data.shopId}`);\n        console.log(\"Loved\");\n    };\n\n    openedNow = () => {\n        let d = new Date();\n        let currentOffset = d.getTimezoneOffset();\n        let ISTOffset = 330;\n        let ISTTime = new Date(\n            d.getTime() + (ISTOffset + currentOffset) * 60000\n        );\n        const openingTime = new Date();\n        const closingTime = new Date();\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        openingTime.setHours(openingHour);\n        openingTime.setMinutes(openingMinute);\n        closingTime.setHours(closingHour);\n        closingTime.setMinutes(closingTime);\n\n        const currentTime =\n            ISTTime.getHours() * 3600 + ISTTime.getMinutes() * 60;\n\n        return (\n            currentTime >= openingHour * 3600 + openingMinute * 60 &&\n            currentTime <= closingHour * 3600 + closingMinute * 60\n        );\n    };\n\n    time = (t) => {\n        let d = new Date();\n        d.setHours(t.hour);\n        d.setMinutes(t.minute);\n        d.setSeconds(0);\n        return d.toLocaleTimeString();\n    };\n\n    render() {\n        this.state.imWidth = window.innerWidth < 800 ? \"90%\" : \"100%\";\n        const { classes, theme } = this.props;\n        const {\n            shopName: name,\n            address,\n            imageUrl,\n            discount,\n            distancemetric,\n            openingTimeIST,\n            closingTimeIST,\n            tags: itemsAvailable,\n            shopRating: ratings,\n            payment_modes,\n            travelDuration,\n        } = this.props.data;\n        const distance = distancemetric || -1;\n        \n        return (\n            <Grid item>\n                <Box\n                    className={classes.root}\n                    boxShadow={8}\n                    style={{ width: \"95%\" }}\n                    borderRadius=\"borderRadius\"\n                    borderRadius={15}\n                    borderColor=\"primary.main\"\n                    m={2}\n                >\n                    <Box className={classes.cover}>\n                        <Grid item container xs={12} direction=\"column\">\n                            <Grid\n                                container\n                                spacing={2}\n                                xs={12}\n                                justify=\"center\"\n                            >\n                                <Grid item xs={12} sm={5} justify=\"center\">\n                                    <Box\n                                        className={classes.bim}\n                                        boxShadow={5}\n                                        style={{\n                                            backg: 0.5,\n                                            height: \"200px\",\n                                            width: `${this.state.imWidth}`,\n                                            borderRadius: 15,\n                                            padding: 10,\n                                            marginTop: 10,\n                                            marginLeft: 10,\n                                            marginBottom: 10,\n                                            backgroundImage: `url(${imageUrl})`,\n                                        }}\n                                    >\n                                        <Chip\n                                            label={\n                                                this.openedNow()\n                                                    ? \"Open\"\n                                                    : \"Closed\"\n                                            }\n                                            style={{\n                                                background: this.openedNow()\n                                                    ? \"#00b476\"\n                                                    : \"#ef0052\",\n                                                fontSize: 17,\n                                                fontWeight: \"bold\",\n                                                color: \"white\",\n                                            }}\n                                        ></Chip>\n                                    </Box>\n                                    <Typography\n                                        variant=\"body1\"\n                                        align=\"center\"\n                                        gutterBottom\n                                        style={{\n                                            paddingLeft: 10,\n                                            margin: \"auto\",\n                                        }}\n                                    >\n                                        <FiberManualRecordIcon\n                                            style={{\n                                                color: \"green\",\n                                                fontSize: 13,\n                                                marginRight: 5,\n                                            }}\n                                        />\n                                        {openingTimeIST}\n                                        <FiberManualRecordIcon\n                                            style={{\n                                                color: \"red\",\n                                                fontSize: 13,\n                                                marginLeft: 10,\n                                            }}\n                                        />\n                                        {closingTimeIST}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} sm={7}>\n                                    <Box className={classes.details}>\n                                        <Typography\n                                            component=\"h4\"\n                                            variant=\"h4\"\n                                            style={{ color: \"indigo\" }}\n                                        >\n                                            <b>{name}</b>\n                                        </Typography>\n                                        {this.openedNow() || (\n                                            <Typography\n                                                variant=\"body1\"\n                                                gutterBottom\n                                            >\n                                                Opens next at {openingTimeIST}\n                                            </Typography>\n                                        )}\n                                        <br />\n                                        <Box\n                                            style={{\n                                                display: \"flex\",\n                                                flexDirection: \"row\",\n                                            }}\n                                        >\n                                            <Chip\n                                                icon={\n                                                    <StarRateOutlinedIcon\n                                                        style={{\n                                                            color: \"#ffffff\",\n                                                        }}\n                                                    />\n                                                }\n                                                label={ratings[0]}\n                                                variant=\"contained\"\n                                                style={{\n                                                    backgroundColor: \"#58AC00\",\n                                                    margin: 2,\n                                                    fontSize: 18,\n                                                    color: \"white\",\n                                                }}\n                                            />\n                                        </Box>\n                                        <br />\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            <Box\n                                                style={{\n                                                    display: \"flex\",\n                                                    flexDirection: \"row\",\n                                                }}\n                                            >\n                                                <LocationOnIcon />\n                                                <Typography\n                                                    variant=\"body1\"\n                                                    style={{\n                                                        paddingBottom: 3,\n                                                        marginLeft: 5,\n                                                        marginRight: 5,\n                                                    }}\n                                                >\n                                                    {`${distance} km`}\n                                                </Typography>\n                                                <DirectionsBikeIcon />\n                                                <Typography\n                                                    variant=\"body1\"\n                                                    style={{\n                                                        paddingBottom: 3,\n                                                        marginLeft: 5,\n                                                    }}\n                                                >\n                                                    {travelDuration <= 3600\n                                                        ? `${Math.round(\n                                                              travelDuration /\n                                                                  60\n                                                          )} Min`\n                                                        : `${\n                                                              travelDuration /\n                                                              3600\n                                                          } Hour`}\n                                                </Typography>\n                                            </Box>\n                                            {true && (\n                                                <Box\n                                                    style={{\n                                                        display: \"flex\",\n                                                        flexDirection: \"row\",\n                                                    }}\n                                                >\n                                                    <PaymentIcon\n                                                        style={{\n                                                            color: \"#00b300\",\n                                                        }}\n                                                    />\n                                                    <Typography\n                                                        variant=\"body1\"\n                                                        style={{\n                                                            paddingBottom: 3,\n                                                            marginLeft: 5,\n                                                        }}\n                                                    >\n                                                        Accepts{\" \"}\n                                                        {payment_modes.join()}\n                                                    </Typography>\n                                                </Box>\n                                            )}\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                            <br />\n                            <Divider />\n                            <Grid item container xs={12} direction=\"row\">\n                                <Grid\n                                    item\n                                    container\n                                    direction=\"row\"\n                                    xs={7}\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                >\n                                    <Box\n                                        style={{\n                                            display: \"flex\",\n                                            flexDirection: \"row\",\n                                        }}\n                                    >\n                                        <LocalOfferIcon\n                                            style={{ color: \"#f445a6\" }}\n                                        />\n                                        <Typography\n                                            variant=\"body1\"\n                                            style={{\n                                                paddingBottom: 3,\n                                                color: \"#f445a6\",\n                                                marginLeft: 5,\n                                            }}\n                                        >\n                                            {discount}% off on all On-Time\n                                            orders\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                                <Grid\n                                    item\n                                    container\n                                    xs={5}\n                                    direction=\"row\"\n                                    justify=\"flex-end\"\n                                >\n                                    <IconButton\n                                        style={{ color: \"red\", margin: 2 }}\n                                    >\n                                        <FavoriteIcon />\n                                    </IconButton>\n                                    <Button\n                                        variant=\"contained\"\n                                        onClick={this.handleClick}\n                                        style={{\n                                            backgroundColor: \"green\",\n                                            color: \"white\",\n                                            margin: 2,\n                                            fontSize: 17,\n                                        }}\n                                        endIcon={\n                                            <ArrowForwardIosIcon\n                                                style={{ paddingBottom: 1 }}\n                                            />\n                                        }\n                                    >\n                                        <b>Book Slot</b>\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles, { withTheme: true })(Shop));\n","import http from \"./httpServices\";\nimport api from \"../configApi.json\";\n\nexport const getShopList = (r=3) => {\n    const rad = r * 1000;\n    const response = http.post(api.shopList, {\n        userLocation:localStorage.getItem(\"userAddress\"),\n        radius: rad,\n    });\n    return response;\n};\n\nexport const getShopDetails = (id) => {\n    const response = http.get(\n        api.shopData + `/${id}`,\n        {params: {\n            isShop: false,\n            \n        }}\n    );\n    return response;\n};\n\nexport const getReviews = id => {\n    return http.post(api.reviews, {\n        \"shopId\": id\n    });\n}\n\nexport const getMyBookings = () => {\n    return http.protectedPost(api.myBookings, { isShop: false });\n}\n\nexport const getShopBookings = () => {\n    return http.protectedPost(api.myBookings, { isShop: true });\n}","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Grid, Button } from \"@material-ui/core\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport \"react-google-places-autocomplete/dist/index.min.css\";\nimport http from \"../../../../services/httpServices\";\n\nconst useStyles = (theme) => ({\n    root: {\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n});\n\nclass CurrentLocation extends Component {\n    state = {\n        location: \"\",\n        coordinate: {},\n        openDialogue: false,\n    };\n\n    componentDidMount() {\n        //navigator.geolocation.getCurrentPosition(this.showPosition);\n        if (!localStorage.getItem(\"userAddress\"))\n            this.setState({\n                openDialogue: true,\n            });\n        else this.setState({ location: localStorage.getItem(\"userAddress\") });\n    }\n\n    // showPosition = (position) => {\n    //     const location =\n    //         \"Latitude: \" +\n    //         position.coords.latitude +\n    //         \" Longitude: \" +\n    //         position.coords.longitude;\n    //     const coordinate = {};\n    //     coordinate.latitude = position.coords.latitude;\n    //     coordinate.longitude = position.coords.longitude;\n    //     this.setState({ location, coordinate });\n    //     console.log(\"coordinate set\");\n    // };\n\n    handleClick = () => {\n        this.setState({ openDialogue: true });\n        // try {\n        //     const response = await http.get(\n        //         `https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.coordinate.latitude},${this.state.coordinate.longitude}&key=AIzaSyBixtvcF5A38Z2dVP9fFkcvLf5P59RmnEA`,\n        //     );\n        //     console.log(response);\n        // } catch (ex) {\n        //     console.log(ex.response);\n        // }\n    };\n\n    updateLocation = (addr) => {\n        console.log(addr.description);\n        this.setState({ location: addr.description, openDialogue: false });\n        localStorage.setItem(\"userAddress\", addr.description);\n        this.props.handleAddress();\n    };\n\n    handleClose = () => {\n        this.setState({ openDialogue: false });\n    };\n\n    render() {\n        const { openDialogue } = this.state;\n        const { handleClose, handleClick } = this;\n        const { classes } = this.props;\n        return (\n            <Box\n                borderRadius={10}\n                style={{\n                    width: \"100%\",\n                    backgroundColor: \"#00583a\",\n                    color: \"white\",\n                }}\n                m={1}\n                p={1}\n                onClick={this.getLocation}\n            >\n                <Grid container direction=\"row\" xs xl lg>\n                    <Grid item xs={8}>\n                        <Typography variant=\"body1\">\n                            <LocationOnIcon />\n                            Near <b>{this.state.location}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} container justify=\"flex-end\">\n                        <Button\n                            variant=\"outlined\"\n                            style={{backgroundColor:'white'}}\n                            onClick={handleClick}\n                        >\n                            Change\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Dialog open={openDialogue} onClose={handleClose}>\n                    <DialogContent\n                        style={{\n                            backgroundColor: \"#ffe7ef\",\n                            height: \"300px\",\n                            width: window.innerWidth < 600 ? \"340px\" : \"600px\",\n                        }}\n                    >\n                        <Paper component=\"form\" className={classes.root}>\n                            <IconButton\n                                type=\"submit\"\n                                className={classes.iconButton}\n                                aria-label=\"search\"\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                            <GooglePlacesAutocomplete\n                                onSelect={this.updateLocation}\n                            />\n                            <Divider\n                                className={classes.divider}\n                                orientation=\"vertical\"\n                            />\n                            <IconButton\n                                color=\"primary\"\n                                className={classes.iconButton}\n                                aria-label=\"directions\"\n                            >\n                                <DirectionsIcon />\n                            </IconButton>\n                        </Paper>\n                    </DialogContent>\n                </Dialog>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CurrentLocation);\n","import React, { Component } from \"react\";\nimport { Box, Divider, GridListTile } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Slider from \"@material-ui/core/Slider\";\n\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\n\nclass FilterCard extends Component {\n    state = {\n        filter: {\n            openClose: { showAll: true, isOpen: false },\n            items: [],\n            slotTypes: { Morning: true, Afternoon: true, Evening: true },\n            customerRatings: { \"4\": false, \"3\": false },\n            distance:3,\n        },\n    };\n\n    formData = {\n        itemList: [\"gas\", \"gasf\", \"gsaf\", \"gafdsag\", \"sgasdf\"],\n        slotType: [\"Morning\", \"Afternoon\", \"Evening\"],\n        customerRating:[\"4\",\"3\"],\n\n    };\n\n    handleCheck = (event) => {\n        let filter = { ...this.state.filter };\n        filter.openClose[event.target.name] = event.target.checked;\n        this.setState({ filter });\n        console.log(event.target.checked, this.state.filter);\n        this.props.updateFilter(this.state.filter);\n    };\n\n\n    handleSelect = ({ target: { name, value } }) => {\n        let filter = { ...this.state.filter };\n        filter[name] = value;\n        this.setState({ filter });\n        this.props.updateFilter(filter);\n    };\n\n    handleSlot = event => {\n        let filter = { ...this.state.filter };\n        filter.slotTypes[event.target.name] = event.target.checked;\n        this.setState({ filter });\n        this.props.updateFilter(this.state.filter);\n    }\n    \n    handleRating = event => {\n        let filter = { ...this.state.filter };\n        filter.customerRatings[event.target.name] = event.target.checked;\n        this.setState({ filter });\n        this.props.updateFilter(this.state.filter);\n    }\n\n    handleChange = (event, distance) => {\n        let filter = { ...this.state.filter };\n        filter.distance = distance;\n        this.setState({ filter });\n        this.props.updateFilter(filter);\n    };\n\n    render() {\n        const {\n            openClose,\n            distance,\n            slotTypes,\n            customerRatings,\n        } = this.state.filter;\n        const { handleCheck,  handleSlot, handleRating } = this;\n        const { items, slotType, customerRating } = this.formData;\n        const { classes, theme } = this.props;\n        return (\n            <Box\n                boxShadow={5}\n                style={{\n                    backgroundColor: \"white\",\n                    width: \"100%\",\n                    marginTop: 5,\n                }}\n                borderRadius={5}\n            >\n                <Grid\n                    item\n                    container\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                    style={{\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Grid item style={{ width: \"100%\" }}>\n                        <Box\n                            boxShadow={0}\n                            style={{\n                                backgroundColor: \"white\",\n                                width: \"100%\",\n                                marginTop: 23,\n                            }}\n                            p={3}\n                            borderRadius={5}\n                        >\n                            <Typography variant=\"body1\">\n                                Choose Your Radius(in Km)..\n                            </Typography>\n                            <Slider\n                                value={distance}\n                                aria-labelledby=\"discrete-slider-always\"\n                                step={0.05}\n                                onChange={this.handleChange}\n                                min={1}\n                                max={5}\n                                marks={[\n                                    { value: 1, label: \"1 km\" },\n                                    { value: 2 },\n                                    { value: 3 },\n                                    { value: 4 },\n                                    { value: 5, label: \"5 km\" },\n                                ]}\n                                valueLabelDisplay=\"on\"\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        xs={12}\n                    >\n                        <Typography variant=\"h5\">\n                            <b>Filters</b>\n                        </Typography>\n                    </Grid>\n                    <Box p={1} style={{ width: \"100%\", paddingLeft: 15 }}>\n                        <Grid item container xs={12}>\n                            <Grid\n                                item\n                                container\n                                xs={12}\n                                md={12}\n                                direction=\"column\"\n                                justify=\"center\"\n                            >\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={openClose.showAll}\n                                            onChange={handleCheck}\n                                            name=\"showAll\"\n                                        />\n                                    }\n                                    label=\"Show All\"\n                                />\n                                <Typography variant=\"body2\">\n                                    Check this box to show closed shops too\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Items Available</Typography>\n                        <MultipleSelect\n                            selectedItems={this.state.filter.items}\n                            handleChange={this.handleSelect}\n                            classes={classes}\n                            name=\"items\"\n                            label=\"Type of Items Available\"\n                            theme={theme}\n                            items={this.props.itemList}\n                        />\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Slot Type</Typography>\n                        <Grid item container direction=\"column\">\n                            {slotType.map((label) => (\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={slotTypes[label]}\n                                                onChange={handleSlot}\n                                                name={label}\n                                            />\n                                        }\n                                        label={label}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Customer Rating</Typography>\n                        <Grid item container direction=\"column\">\n                            {customerRating.map((label) => (\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={customerRatings[label]}\n                                                onChange={handleRating}\n                                                name={label}\n                                            />\n                                        }\n                                        label={`${label} ★ & above`}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(FilterCard);\n\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Shop from \"./components/shop\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getShopList } from \"../../../services/dataServices\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { updateRadius } from \"../../../services/userService\";\nimport CurrentLocation from \"./shopPage/getLocation\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport FilterCard from \"./components/filter\";\nimport filter from \"./components/filter\";\n\nconst useStyles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n});\n\nclass Shops extends Component {\n    state = {\n        shopData: [],\n        distance: 5,\n        isLoading: false,\n        message: \"An Error Occured\",\n        filter: {\n            openClose: { showAll: true, isOpen: false },\n            items: [],\n            slotTypes: { Morning: true, Afternoon: true, Evening: true },\n            customerRatings: { \"4\": false, \"3\": false },\n            distance:3,\n        },\n    };\n\n    formData = {\n        distance: [\n            { value: 1, label: \"1 km\" },\n            { value: 2, label: \"2 km\" },\n            { value: 5, label: \"5 km\" },\n            { value: 10, label: \"10 km\" },\n        ],\n    };\n\n    componentDidMount() {\n        this.updateShopList();\n    }\n\n    updateShopList = async () => {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopList(this.state.distance);\n            console.log(response);\n            if (response.data)\n                this.setState({ shopData: response.data, message: \"\" });\n            else this.setState({ message: \"No Shop Found\" });\n        } catch (ex) {\n            if (ex.response) {\n                if (ex.response.status == 403)\n                    this.setState({ message: ex.response.data.message });\n                else\n                    this.setState({\n                        message: ex.response.data\n                            ? ex.response.data.message\n                            : \"An Error Occured\",\n                    });\n            } else this.setState({ message: \"An Error Occured\" });\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n    };\n\n    updateFilter = (filter) => {\n        this.setState({ filter });\n    };\n\n    //     customerRatings:\n    // 3: false\n    // 4: false\n    // __proto__: Object\n    // items: []\n    // openClose:\n    // isOpen: false\n    // showAll: true\n    // __proto__: Object\n    // slotTypes:\n    // Afternoon: true\n    // Evening: true\n    // Morning: true\n\n    filterList = () => {\n        const filter = this.state.filter;\n        let list = [];\n        const shopList = this.state.shopData;\n\n        //Rating based filter\n        if (filter.customerRatings[\"3\"])\n            list = shopList.filter((c) => c.shopRating[0] >= 3);\n        else if (filter.customerRatings[\"4\"])\n            list = shopList.filter((c) => c.shopRating[0] >= 4);\n        else list = shopList;\n\n        //Open-Close based\n        const openedNow = (data) => {\n            let d = new Date();\n            let currentOffset = d.getTimezoneOffset();\n            let ISTOffset = 330;\n            let ISTTime = new Date(\n                d.getTime() + (ISTOffset + currentOffset) * 60000\n            );\n            const openingTime = new Date();\n            const closingTime = new Date();\n            const {\n                openingHour,\n                openingMinute,\n                closingHour,\n                closingMinute,\n            } = data;\n            openingTime.setHours(openingHour);\n            openingTime.setMinutes(openingMinute);\n            closingTime.setHours(closingHour);\n            closingTime.setMinutes(closingTime);\n\n            const currentTime =\n                ISTTime.getHours() * 3600 + ISTTime.getMinutes() * 60;\n\n            return (\n                currentTime >= openingHour * 3600 + openingMinute * 60 &&\n                currentTime <= closingHour * 3600 + closingMinute * 60\n            );\n        };\n        if (!filter.openClose.showAll) list = list.filter((c) => openedNow(c));\n\n        //Items Based\n        if (filter.items.length != 0)\n            list = list.filter((shop) => {\n                for (let tag of shop.tags) {\n                    if (filter.items.includes(tag)) return true;\n                }\n                return false;\n            });\n\n        //Distance Filter\n        list = list.filter((c) => c.distancemetric <= filter.distance);\n\n        //Period Based(Must filter at last)\n        let newList = [];\n        if (filter.slotTypes.Morning)\n            newList = list.filter((c) => c.openingHour < 12);\n        // else newList = list.filter((c) => c.openingHour >= 12);\n        if (filter.slotTypes.Afternoon)\n            newList = newList.concat(\n                list\n                    .filter((c) => c.openingHour < 18 && c.closingHour >= 12)\n                    .filter((c) => !newList.includes(c))\n            );\n        if (filter.slotTypes.Evening)\n            newList = newList.concat(\n                list\n                    .filter((c) => c.closingHour > 18)\n                    .filter((c) => !newList.includes(c))\n            );\n\n        return newList;\n    };\n\n    getItemList = (shopList) => {};\n\n    handleAddress = () => {\n        this.updateShopList();\n    };\n\n    getItemList = (shopList) => {\n        let itemList = [];\n        for (const shop of shopList) {\n            itemList = [...shop.tags, ...itemList];\n        }\n        return Array.from(new Set(itemList));\n    };\n\n    render() {\n        const shopList = this.filterList();\n        const { classes } = this.props;\n        const { distance } = this.state;\n        console.log(\"render called\");\n        return (\n            // <Shop/>\n            <div className={classes.root}>\n                <Grid\n                    container\n                    spacing={5}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"flex-start\"\n                >\n                    <Grid\n                        container\n                        sm={3}\n                        md={3}\n                        lg={3}\n                        spacing={1}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                    >\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                            style={{ width: \"100%\" }}\n                        >\n                            <FilterCard\n                                updateFilter={this.updateFilter}\n                                itemList={this.getItemList(this.state.shopData)}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        sm={8}\n                        md={8}\n                        lg={8}\n                        direction=\"column\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        style={{ width: \"100%\" }}\n                    >\n                        <Grid container xs={12} direction=\"row\">\n                            <CurrentLocation\n                                handleAddress={this.handleAddress}\n                            />\n                        </Grid>\n                        {this.state.isLoading ? (\n                            <Grid\n                                container\n                                spacing={5}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                                style={{ marginTop: 20 }}\n                            >\n                                <CircularProgress color=\"secondary\" />\n                            </Grid>\n                        ) : this.state.message ? (\n                            <Typography variant=\"body1\" align=\"center\">\n                                {this.state.message}\n                            </Typography>\n                        ) : (\n                            <GridList\n                                cellHeight=\"auto\"\n                                cols={2}\n                                spacing={10}\n                                style={{ width: \"100%\" }}\n                            >\n                                {shopList.length == 0 ? (\n                                    <Grid\n                                        container\n                                        xs={12}\n                                        justify=\"center\"\n                                        direction=\"row\"\n                                    >\n                                        <Grid item>\n                                            <Typography\n                                                variant=\"h5\"\n                                                align=\"center\"\n                                            >\n                                                No Shop Found\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                ) : (\n                                    shopList.map((data, i) => (\n                                        <GridListTile\n                                            key={i}\n                                            cols={\n                                                window.innerWidth < 500 ? 2 : 1\n                                            }\n                                        >\n                                            <Shop\n                                                data={data}\n                                                userAddress={\n                                                    this.state.userAddress\n                                                }\n                                            />\n                                        </GridListTile>\n                                    ))\n                                )}\n                            </GridList>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Shops);\n","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { updateBookings } from \"../../../../services/userService\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass EditBookings extends Component {\n    state = {\n        data: {\n            itemList: this.props.bookingDetails.purchaseItems.split(\",\"),\n            period:\n                this.props.bookingDetails.arrivalHour < 12\n                    ? \"Morning\"\n                    : this.props.bookingDetails.arrivalHour < 18\n                    ? \"Afternoon\"\n                    : \"Evening\",\n            slot: {\n                start: this.props.bookingDetails.slotGroupBegins,\n                end: this.props.bookingDetails.slotGroupEnds,\n            },\n        },\n        slotLabel: `${timeString(\n            this.props.bookingDetails.slotGroupBegins\n        )} - ${timeString(this.props.bookingDetails.slotGroupEnds)}`,\n        noticeBody: {},\n        isLoading: false,\n        submitted: false,\n        success: true,\n    };\n\n    formData = {\n        period: [\n            { label: \"Morning\", slot: { start: 0, end: 12 } },\n            { label: \"Afternoon\", slot: { start: 12, end: 18 } },\n            { label: \"Evening\", slot: { start: 18, end: 23 } },\n        ],\n    };\n\n    getSlotTimes = (period) => {\n        let slotTimeArr = [];\n        let stime = new Date();\n        const currentTime = new Date();\n        const gap = 60 * 60 * 1000;\n        if (!period)\n            period = this.formData.period.filter(\n                (c) => !c.label.localeCompare(this.state.data.period)\n            )[0].slot;\n        const duration = 3600 * 1000;\n        stime.setHours(period.start);\n        stime.setMinutes(0);\n        stime.setSeconds(0);\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        if (period.end < currentTime.getHours()) return [];\n        while (\n            stime.getHours() < period.end &&\n            stime.getHours() < closingHour\n        ) {\n            const start = new Date(stime);\n            const end = new Date(stime.getTime() + duration);\n            if (\n                start.getTime() < currentTime.getTime() ||\n                start.getHours() < openingHour\n            ) {\n                stime.setTime(stime.getTime() + gap);\n                continue;\n            }\n            let slot = {};\n            slot.interval = { start: start.getHours(), end: end.getHours() };\n            slot.label =\n                start.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                }) +\n                \" - \" +\n                end.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n            slotTimeArr.push(slot);\n            //if (start.getHours() <= this.props.closingHour) break;\n            stime.setTime(stime.getTime() + gap);\n        }\n        //console.log(slotTimeArr);\n        return slotTimeArr;\n    };\n\n    handleBooking = async () => {\n        this.setState({ submitted: true, isLoading: true });\n        try {\n            const { data } = await updateBookings(\n                this.state.data,\n                this.props.bookingDetails.bookingId\n            );\n            this.setState({ noticeBody: data });\n            this.props.setSlotTime(data);\n        } catch (ex) {\n            console.log(\"ex logging\", ex);\n            this.setState({ noticeBody: ex.response.data, success: false });\n            console.log(this.state.noticeBody, ex.response.data);\n            //alert(\"An error occured, Try re signin and booking\");\n        }\n        this.setState({ isLoading: false });\n    };\n\n    handlePeriod = (e) => {\n        const data = { ...this.state.data };\n        data.period = e.target.value.label;\n        //data.slot = this.getSlotTimes(e.target.value.slot)[0] || \"\" ;\n        this.setState({ data, slotLabel: \"\" });\n    };\n\n    handleSlotTime = (e) => {\n        const data = { ...this.state.data };\n        const slot = this.getSlotTimes().find(\n            (time) => !time.label.localeCompare(e.target.value)\n        ).interval;\n        data.slot = slot;\n        this.setState({ data, slotLabel: e.target.value });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleClose = () => {\n        this.setState({\n            noticeBody: {},\n            isLoading: false,\n            submitted: false,\n            success: true,\n        });\n        this.props.handleClose();\n    }\n\n    render() {\n        const {  open, classes } = this.props;\n        const { data, slotLabel } = this.state;\n        const { period } = this.formData;\n        const {\n            handlePeriod,\n            handleSlotTime,\n            handleBooking,\n            handleClose,\n        } = this;\n\n        return (\n            <Dialog\n                maxWidth=\"xl\"\n                onClose={handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={open}\n                style={{ width: window.innerWidth * 0.6, margin: \"auto\" }}\n            >\n                {!this.state.submitted ? (\n                    <form style={{ width: \"100%\" }}>\n                        <Box\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Grid item container xs={12}>\n                                <Grid item xs={12} md={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        className={classes.formControl}\n                                        required\n                                    >\n                                        <InputLabel id=\"SelectPeriod\">\n                                            Slot Type\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"SelectPeriod\"\n                                            id=\"SelectPeriod\"\n                                            value={\n                                                period.filter(\n                                                    (c) =>\n                                                        !c.label.localeCompare(\n                                                            data.period\n                                                        )\n                                                )[0]\n                                            }\n                                            onChange={handlePeriod}\n                                            label=\"Period\"\n                                        >\n                                            {period.map((time, i) => (\n                                                <MenuItem key={i} value={time}>\n                                                    {time.label}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        required\n                                        className={classes.formControl}\n                                    >\n                                        <InputLabel id=\"SlotTime\">\n                                            Slot Time\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"SlotTime\"\n                                            id=\"SlotTime\"\n                                            value={slotLabel}\n                                            onChange={handleSlotTime}\n                                            label=\"Slot Time\"\n                                        >\n                                            {this.getSlotTimes().map(\n                                                (item, i) => (\n                                                    <MenuItem\n                                                        key={i}\n                                                        value={item.label}\n                                                    >\n                                                        {item.label}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Box\n                            borderRadius={5}\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Grid item container xs={12}>\n                                <Grid item xs={12}>\n                                    <Box>\n                                        {data.itemList.map((value, i) => (\n                                            <Chip\n                                                key={i}\n                                                label={value}\n                                                color=\"secondary\"\n                                                className={classes.chip}\n                                            />\n                                        ))}\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Box\n                            borderRadius={5}\n                            boxShadow={2}\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Typography>\n                                {data.itemList.length\n                                    ? `${data.itemList.length} items selected.`\n                                    : \"\"}\n                                <br />\n                                You'll be alloted a period within the slot you\n                                choosed.\n                            </Typography>\n                            <br />\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                            >\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={handleBooking}\n                                >\n                                    Confirm Booking\n                                </Button>\n                            </Grid>\n                        </Box>\n                    </form>\n                ) : this.state.isLoading ? (\n                    <Box m={3}>\n                        <CircularProgress color=\"primary\" />\n                    </Box>\n                ) : (\n                    <SuccessNoticeBody\n                        data={this.state.noticeBody}\n                        error={!this.state.success}\n                    />\n                )}\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(EditBookings);\n\n// arrivalHour: 15;\n// arrivalMinute: 0;\n// arrivalTimeIST: 3;\n// deliveryHour: 15;\n// deliveryMinute: 30;\n// deliveryTimeIST: 3;\n// message: \"Booking updated successfully\";\n\nclass SuccessNoticeBody extends Component {\n    state = {};\n\n    render() {\n        if (this.props.error) {\n            const { message } = this.props.data;\n            return (\n                <Box m={2}>\n                    <Typography\n                        variant=\"h5\"\n                        style={{ margin: 20 }}\n                        color=\"error\"\n                        align=\"center\"\n                    >\n                        <b>{message}</b>\n                    </Typography>\n                </Box>\n            );\n        } else {\n            const {\n                arrivalHour,\n                arrivalMinute,\n                deliveryHour,\n                message,\n                deliveryMinute,\n            } = this.props.data;\n            return (\n                <Box m={2}>\n                    <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                        <img\n                            src=\"https://www.huayeahfabric.com/wp-content/uploads/2019/06/success.gif\"\n                            style={{ height: 150, margin: \"auto\" }}\n                        />\n                        <br />\n                        Thank you for your order.\n                        <br />\n                        <p style={{ fontSize: 20 }}>\n                            You are alloted the slot <br />\n                            <b style={{ fontSize: 26 }}>\n                                {timeString(arrivalHour, arrivalMinute)} →{\" \"}\n                                {timeString(deliveryHour, deliveryMinute)}\n                            </b>\n                        </p>\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"center\">\n                        <b>{message}</b>\n                    </Typography>\n                </Box>\n            );\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Divider } from \"@material-ui/core\";\nimport EditBookings from \"./editBookings\";\nimport { getShopDetails } from \"../../../../services/dataServices\";\n\nvar QRCode = require(\"qrcode.react\");\n\nconst useStyles = (theme) => ({\n    activeRoot: {\n        width: 250,\n        //inWidth: 200,\n        //background: \"#80ffd4\",\n        color: \"black\",\n        \"&:hover\": {\n            background: \"#efefef\",\n        },\n    },\n    expiredRoot: {\n        maxWidth: 250,\n        background: \"#ffff80\",\n        color: \"black\",\n        \"&:hover\": {\n            background: \"#ffe066\",\n        },\n    },\n    media: {\n        height: 150,\n        width: 150,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        margin: \"auto\",\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n    margin: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(1),\n    },\n});\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass SlotCard extends Component {\n    state = {\n        expanded: false,\n        data: this.props.data,\n        shopData: {},\n        open: false,\n        isLoading: false,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getShopDetails(this.props.data.shopId);\n            this.setState({ shopData: data[0] });\n        } catch (ex) {\n            alert(\"An error Occured. Check Internet or Re signin\");\n            console.log(ex);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    handleSlotChange = newData => {\n        let data = { ...this.state.data };\n        data.arrivalHour = newData.arrivalHour;\n        data.arrivalMinute = newData.arrivalMinute;\n        data.deliveryHour = newData.deliveryHour;\n        data.deliveryMinute = newData.deliveryMinute;\n        this.setState({ data });\n    }\n\n    handleExpandClick = () => {\n        this.setState({ expanded: !this.state.expanded });\n    };\n\n    isEditable = () => {\n        return (\n            this.props.isExpired ||\n            this.state.isLoading\n        );\n    }\n\n    handleEdit = () => {\n        this.setState({ open: true });\n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { expanded, data, open, isLoading, shopData } = this.state;\n        const { handleClose, handleEdit,handleSlotChange } = this;\n        return (\n            <Card\n                className={classes.activeRoot}\n                onMouseOver={this.handleExpandClick}\n                onMouseOut={this.handleExpandClick}\n            >\n                {isLoading ? (\n                    \"waiting for network..\"\n                ) : (\n                    <CardHeader title={shopData.shopName} />\n                )}\n                <Grid justify=\"center\">\n                    <QRCode\n                        value={data.bookingId+\"@@##$$\"+data.otp}\n                        style={{ margin: \"auto\" }}\n                        className={classes.media}\n                    />\n                    <Typography variant=\"body1\" align=\"center\" style={{margin:10}}><b>OTP: {data.otp}</b></Typography>\n                </Grid>\n\n                <CardContent>\n                    <Typography\n                        variant=\"h6\"\n                        justify=\"center\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        <b>\n                            {timeString(data.arrivalHour, data.arrivalMinute)} →{\" \"}\n                            {timeString(data.deliveryHour, data.deliveryMinute)}\n                        </b>\n                        <br />\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Button\n                        disabled={this.isEditable()}\n                        variant=\"outlined\"\n                        className={classes.margin}\n                        color=\"primary\"\n                        startIcon={<EditIcon />}\n                        onClick={handleEdit}\n                    >\n                        Edit\n                    </Button>\n\n                    <Button\n                        variant=\"outlined\"\n                        className={classes.margin}\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        onClick={()=> this.props.handleDelete(data.bookingId)}\n                    >\n                        Delete\n                    </Button>\n                    <EditBookings\n                        data={this.state.shopData}\n                        bookingDetails={data}\n                        open={open}\n                        handleClose={handleClose}\n                        setSlotTime={handleSlotChange}\n                    />\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent className={classes.chips}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Order summary\n                        </Typography>\n                        <hr />\n                        <br />\n                        <br />\n                        {data.purchaseItems.split(\",\").map((value) => (\n                            <Chip\n                                key={value}\n                                label={value}\n                                color=\"primary\"\n                                className={classes.chip}\n                            />\n                        ))}\n                    </CardContent>\n                </Collapse>\n                <Divider />\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(SlotCard);\n","import React, { Component } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport SlotCard from \"./components/slotCard\";\nimport { getBookedSlotCustomer } from \"../../../utils/auth\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getMyBookings } from \"../../../services/dataServices\";\nimport { deleteSlots } from \"../../../services/userService\";\n\nclass MyBookings extends Component {\n    state = {\n        slotData: [],\n        showPastSlot: false,\n        editDialogue: false,\n        isLoading: false,\n        errorMessage: \"\",\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getMyBookings();\n            console.log(response.data);\n            this.setState({ slotData: response.data, errorMessage: \"\" });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    isExpired = (data) => {\n        const ctime = new Date();\n        let slotStartTme = new Date(data.createdAt);\n        slotStartTme.setHours(data.arrivalHour);\n        slotStartTme.setMinutes(data.arrivalMinute);\n        return ctime.getTime() >= slotStartTme.getTime();\n    };\n\n    handleDelete = async id => {\n        const copy = [...this.state.slotData];\n        this.setState({ slotData: copy.filter(c => c.bookingId !== id) });\n        console.log(\n            \"data updated\",\n            this.state.slotData\n        );\n\n        try {\n            console.log(copy.length);\n            const { data } = await deleteSlots(id);\n            console.log(data);\n            alert(data.message);\n            this.forceUpdate();\n        } catch (ex) {\n            alert(\"An error occured\");\n            console.log(ex.response);\n            this.setState({ slotData: copy });\n        }\n    }\n\n    numberOfActiveBookngs = () => {\n        let count = 0;\n        for (const item of this.state.slotData) {\n            if (!this.isExpired(item)) count++;\n        }\n        return count;\n    };\n\n    showPastSlot = () => {\n        this.setState({ showPastSlot: !this.state.showPastSlot });\n    };\n\n    render() {\n        console.log(\"render the slots\",this.state.slotData);\n        const { slotData: data } = this.state;\n        return (\n            <Grid container spacing={3} justify=\"flex-start\">\n                {this.state.isLoading ? (\n                    <Grid item>\n                        <CircularProgress />\n                    </Grid>\n                ) : this.state.errorMessage ? (\n                    <h2>{this.state.errorMessage}</h2>\n                ) : (\n                    <React.Fragment>\n                        <Grid xs={12} item style={{ margin: 6 }}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                            >{`Active Slots  ${this.numberOfActiveBookngs()}`}</Button>\n                        </Grid>\n                        <Grid\n                            xs={12}\n                            item\n                            container\n                            spacing={3}\n                            justify={\n                                window.innerWidth < 500\n                                    ? \"center\"\n                                    : \"flex-start\"\n                            }\n                        >\n                            {data.map(\n                                (cards, i) =>\n                                    this.isExpired(cards) || (\n                                        <Grid key={i} item>\n                                            <SlotCard\n                                                data={cards}\n                                                isExpired={this.isExpired(\n                                                    cards\n                                                )}\n                                                handleDelete={this.handleDelete}\n                                            />\n                                        </Grid>\n                                    )\n                            )}\n                        </Grid>\n\n                        <Grid xs={12} item style={{ margin: 6 }}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={this.showPastSlot}\n                                label=\"See Past Slots\"\n                                color=\"secondary\"\n                            >\n                                See Past Slots\n                            </Button>\n                        </Grid>\n                        <Grid\n                            xs={12}\n                            item\n                            container\n                            spacing={3}\n                            justify={\n                                window.innerWidth < 500\n                                    ? \"center\"\n                                    : \"flex-start\"\n                            }\n                        >\n                            {this.state.showPastSlot &&\n                                data.map(\n                                    (cards, i) =>\n                                        this.isExpired(cards) && (\n                                            <Grid key={i} item>\n                                                <SlotCard\n                                                    data={cards}\n                                                    isExpired={this.isExpired(\n                                                        cards\n                                                    )}\n                                                    handleDelete={\n                                                        this.handleDelete\n                                                    }\n                                                />\n                                            </Grid>\n                                        )\n                                )}\n                        </Grid>\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default MyBookings;\n","import React, { Component } from \"react\";\nimport { Grid, Button, Box } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n    userDetails,\n    uploadPhoto,\n    updateCustomerDetails,\n} from \"../../../services/userService\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\n\nconst useStyles = (theme) => ({\n    largeAvatar: {\n        width: theme.spacing(35),\n        height: theme.spacing(35),\n        margin: \"auto\",\n    },\n});\n\nfunction buildFileSelector() {\n    const fileSelector = document.createElement(\"input\");\n    fileSelector.setAttribute(\"type\", \"file\");\n    fileSelector.setAttribute(\"multiple\", \"multiple\");\n    return fileSelector;\n}\n\nclass MyProfile extends Component {\n    state = {\n        userData: {},\n        isLoading: false,\n        edit: false,\n        selectedFile: null,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await userDetails();\n            this.setState({ userData: response.data.userCredentials });\n            console.log(response);\n        } catch (ex) {\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n        this.fileSelector = buildFileSelector();\n        this.fileSelector.setAttribute(\"onchange\", this.updateFile);\n    }\n\n    getTime = (t) => {\n        const d = new Date(t);\n        return d.toDateString();\n    };\n\n    handleClick = () => {\n        this.setState({ edit: true });\n    };\n\n    handleClose = () => {\n        this.setState({ edit: false });\n    };\n\n    handleFile = () => {\n        this.fileSelector.click();\n        console.log(\"hello\", this.fileSelector);\n        console.log(this.state.selectedFile);\n    };\n\n    uploadFile = async () => {\n        const formData = new FormData();\n        formData.append(\n            \"Image\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n        try {\n            const response = await uploadPhoto(formData);\n            console.log(response);\n            const url = URL.createObjectURL(this.state.selectedFile);\n            let userData = { ...this.state.userData };\n            userData.imageUrl = url;\n            this.setState({ userData });\n            this.forceUpdate();\n        } catch (ex) {\n            console.log(ex.response);\n        } finally {\n            this.setState({ selectedFile: null });\n        }\n    };\n\n    updateFile = (event) => {\n        this.setState({ selectedFile: event.target.files[0] });\n        console.log(this.state.selectedFile, event.target.files);\n        // this.uploadFile();\n    };\n\n    // address: \"undefined, Durgapur, West Bengal [WB], India\";\n    // createdAt: \"2020-07-17T06:34:53.036Z\";\n    // email: \"skshahnawaz2909@gmail.com\";\n    // firstName: \"Sk\";\n    // gender: \"Male\";\n    // imageUrl: \"https://picsum.photos/200\";\n    // lastName: \"Shahnawaz\";\n    // phoneNumber: \"6297939928\";\n    // userId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n\n    render() {\n        const { classes } = this.props;\n        const { userData } = this.state;\n        console.log(\"hello\", this.fileSelector);\n        return (\n            <Grid container justify=\"center\" spacing={5}>\n                {this.state.isLoading ? (\n                    <Grid item style={{ marginTop: 20 }}>\n                        <CircularProgress color=\"secondary\" />\n                    </Grid>\n                ) : (\n                    <React.Fragment>\n                        {\" \"}\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            xs={12}\n                            spacing={2}\n                        >\n                            {/* //<div style={{ padding: 10 }}> */}\n                            <Grid item>\n                                <Avatar\n                                    src={\n                                        userData.imageUrl ||\n                                        \"https://picsum.photos/500/500\"\n                                    }\n                                    className={classes.largeAvatar}\n                                />\n                            </Grid>\n                            <Grid item>\n                                {\" \"}\n                                {this.state.selectedFile ? (\n                                    <React.Fragment>\n                                        <Typography variant=\"body1\">\n                                            {this.state.selectedFile.name}\n                                        </Typography>\n                                        <Button\n                                            variant=\"contained\"\n                                            onClick={this.uploadFile}\n                                            color=\"primary\"\n                                        >\n                                            upload\n                                        </Button>\n                                    </React.Fragment>\n                                ) : (\n                                    <React.Fragment>\n                                        <label\n                                            htmlFor=\"uploadFile\"\n                                            style={{ cursor: \"pointer\" }}\n                                        >\n                                            <AddAPhotoIcon fontSize=\"large\" />\n                                        </label>\n                                        <input\n                                            type=\"file\"\n                                            id=\"uploadFile\"\n                                            multiple=\"multiple\"\n                                            onChange={this.updateFile}\n                                            style={{ display: \"none\" }}\n                                        />\n                                    </React.Fragment>\n                                )}\n                            </Grid>\n\n                            <br />\n                            <Grid item>\n                                <Typography\n                                    variant=\"h3\"\n                                    component=\"h3\"\n                                    align=\"center\"\n                                >\n                                    {userData.firstName +\n                                        \" \" +\n                                        userData.lastName}\n                                </Typography>\n                            </Grid>\n\n                            {/* </div> */}\n                        </Grid>\n                        <Grid xs={12} item>\n                            <Typography variant=\"h6\" align=\"center\">\n                                {userData.address}\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            justify=\"center\"\n                            xs={8}\n                            direction=\"row\"\n                        >\n                            <Grid\n                                item\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                xl={4}\n                                container\n                                alignItems=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item>\n                                    <EmailIcon />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" align=\"center\">\n                                        {userData.email}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                item\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                xl={4}\n                                container\n                                alignItems=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item>\n                                    <PhoneIcon />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" align=\"center\">\n                                        {userData.phoneNumber}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            item\n                            xs={6}\n                            container\n                            spacing={3}\n                            alignItems=\"center\"\n                            direction=\"column\"\n                        >\n                            <Grid item>\n                                <Button\n                                    onClick={this.handleClick}\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Edit\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    Member since{\" \"}\n                                    {this.getTime(userData.createdAt)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <EditForm\n                            open={this.state.edit}\n                            handleClose={this.handleClose}\n                            data={userData}\n                        />\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(MyProfile);\n\nclass EditForm extends Component {\n    state = {\n        data: {\n            firstName: this.props.data.firstName,\n            lastName: this.props.data.lastName,\n            phoneNumber: this.props.data.phoneNumber,\n            address: this.props.data.address,\n        },\n        shouldAwait: false,\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n        this.doSubmit();\n    };\n\n    doSubmit = async () => {\n        this.setState({ shouldAwait: true });\n        try {\n            const response = await updateCustomerDetails(this.state.data);\n            console.log(response);\n            this.setState({ shouldAwait: false });\n            alert(response.data.message);\n        } catch (ex) {\n            // alert(\"Cann't Update. \");\n            console.log(ex.response);\n        }\n        this.props.handleClose();\n        this.setState({ shouldAwait: false });\n    };\n\n    updateLocation = (addr) => {\n        let data = { ...this.state.data };\n        data[\"address\"] = addr.description;\n        this.setState({ data });\n        localStorage.setItem(\"userAddress\", addr.description);\n    };\n\n    render() {\n        const { handleClose, open } = this.props;\n        const { data } = this.state;\n        return (\n            <Dialog\n                onClose={handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={open}\n            >\n                <Box m={2}>\n                    <form\n                        style={{ width: \"100%\", marginTop: 5 }}\n                        noValidate\n                        onSubmit={this.handleSubmit}\n                    >\n                        <Grid container spacing={2}>\n                            <Box\n                                borderColor=\"primary.main\"\n                                border={1}\n                                borderRadius=\"borderRadius\"\n                                m={1}\n                                p={2}\n                                style={{ width: \"100%\" }}\n                            >\n                                <Typography variant=\"caption\" display=\"block\">\n                                    Name and Contact Details\n                                </Typography>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            name=\"firstName\"\n                                            value={data.firstName}\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            id=\"firstName\"\n                                            label=\"First Name\"\n                                            autoFocus\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            id=\"lastName\"\n                                            label=\"Last Name\"\n                                            name=\"lastName\"\n                                            value={data.lastName}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        <TextField\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            value={data.phoneNumber}\n                                            id=\"phoneNumber\"\n                                            label=\"Contact Number\"\n                                            name=\"phoneNumber\"\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                            <Box\n                                borderColor=\"primary.main\"\n                                border={1}\n                                borderRadius=\"borderRadius\"\n                                m={1}\n                                p={2}\n                                style={{ width: \"100%\" }}\n                            >\n                                <Typography variant=\"caption\" display=\"block\">\n                                    Address\n                                </Typography>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12}>\n                                        <Paper\n                                            component=\"form\"\n                                            style={{\n                                                padding: \"2px 4px\",\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                width: \"100%\",\n                                            }}\n                                        >\n                                            <IconButton\n                                                type=\"submit\"\n                                                style={{ padding: 5 }}\n                                                aria-label=\"search\"\n                                            >\n                                                <SearchIcon />\n                                            </IconButton>\n                                            <GooglePlacesAutocomplete\n                                                onSelect={this.updateLocation}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            disabled={this.state.shouldAwait}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ marginTop: 15 }}\n                        >\n                            Submit\n                        </Button>\n                    </form>\n                </Box>\n            </Dialog>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport http from \"../../../services/httpServices\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../../../services/userService\";\n\nclass Logout extends Component {\n  state = {};\n  async componentDidMount() {\n    try {\n      const response = await logout();\n      console.log(response);\n    } catch (ex) {\n      console.log(ex);\n    }\n    localStorage.clear();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(Logout);\n","import React, { Component } from 'react';\nimport { Typography, Box } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nclass Address extends Component {\n    state = {  }\n    render() { \n        const { address, phoneNumber, ownerName } = this.props.data;\n        return (\n            <Grid item>\n                <Box\n                    borderRadius={5}\n                    boxShadow={3}\n                    padding={2}\n                    style={{ backgroundColor: \"white\" }}\n                >\n                    <Typography\n                        variant=\"body1\"\n                        style={{ fontSize: 18, borderRadius: 5 }}\n                    >\n                        <b>{ownerName}</b>\n                        <br />\n                        {address}\n                        <br />\n                        Contact: {phoneNumber}\n                    </Typography>\n                </Box>\n            </Grid>\n        );\n    }\n}\n \nexport default Address;","import React, { Component } from 'react';\n\nclass Overview extends Component {\n    state = {  }\n    render() { \n        return ( \n            <p>Overview</p>\n         );\n    }\n}\n \nexport default Overview;","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { bookNewSlot } from \"../../../../services/userService\";\nimport CurrentLocation from \"./getLocation\";\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nclass Order extends Component {\n    state = {\n        data: {\n            itemList: [],\n            period: \"Morning\",\n            slot: {},\n            otp: Math.round(Math.random(0, 1) * 777777 + 222222),\n        },\n        slotLabel: \"\",\n        item: \"\",\n        openModal: false,\n        dialogueData: {},\n        errors: {},\n    };\n\n    // componentDidMount() {\n    //     let data = { ...this.state.data };\n    //     data.period = this.periodData()[0].label;\n    //     this.setState({ data });\n    // }\n\n    formData = {\n        period: [\n            { label: \"Morning\", slot: { start: 0, end: 12 } },\n            { label: \"Afternoon\", slot: { start: 12, end: 18 } },\n            { label: \"Evening\", slot: { start: 18, end: 23 } },\n        ],\n    };\n\n    periodData = () => {\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        let period = [\n            {\n                label: \"Morning\",\n                slot: { start: { h: 0, m: 0 }, end: { h: 12, m: 0 } },\n            },\n            {\n                label: \"Afternoon\",\n                slot: { start: { h: 12, m: 0 }, end: { h: 18, m: 0 } },\n            },\n            {\n                label: \"Evening\",\n                slot: { start: { h: 18, m: 0 }, end: { h: 24, m: 0 } },\n            },\n        ];\n        if (openingHour < 12 && openingHour > 0) {\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        } else if (openingMinute >= 12 && openingHour < 18) {\n            period.splice(0, 1);\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        } else if (openingMinute >= 18 && openingHour < 24) {\n            period.splice(0, 2);\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        }\n\n        if (closingHour > 0 && closingHour <= 12) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n            period.splice(1, 2);\n        } else if (closingHour > 12 && closingHour <= 18) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n            period.splice(2, 1);\n        } else if (closingHour > 18 && closingHour <= 24) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n        }\n\n        return period;\n    };\n\n    getSlotTimes = (period) => {\n        let slotTimeArr = [];\n        let stime = new Date();\n        const currentTime = new Date();\n        const gap = 60 * 60 * 1000;\n        if (!period)\n            period = this.formData.period.filter(\n                (c) => !c.label.localeCompare(this.state.data.period)\n            )[0].slot;\n        const duration = 3600 * 1000;\n        stime.setHours(period.start);\n        stime.setMinutes(0);\n        stime.setSeconds(0);\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        if (period.end < currentTime.getHours()) return [];\n        while (\n            stime.getHours() < period.end &&\n            stime.getHours() < closingHour\n        ) {\n            const start = new Date(stime);\n            const end = new Date(stime.getTime() + duration);\n            if (\n                start.getTime() < currentTime.getTime() ||\n                start.getHours() < openingHour\n            ) {\n                stime.setTime(stime.getTime() + gap);\n                continue;\n            }\n            let slot = {};\n            slot.interval = { start: start.getHours(), end: end.getHours() };\n            slot.label =\n                start.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                }) +\n                \" - \" +\n                end.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n            slotTimeArr.push(slot);\n            //if (start.getHours() <= this.props.closingHour) break;\n            stime.setTime(stime.getTime() + gap);\n        }\n        //console.log(slotTimeArr);\n        return slotTimeArr;\n    };\n\n    handlePeriod = (e) => {\n        const data = { ...this.state.data };\n        data.period = e.target.value.label;\n        //data.slot = this.getSlotTimes(e.target.value.slot)[0] || \"\" ;\n        this.setState({ data });\n    };\n\n    handleAddItem = () => {\n        const data = { ...this.state.data };\n        if (this.state.item) data.itemList.push(this.state.item);\n        this.setState({ data, item: \"\", errors: {} });\n    };\n\n    handleSlotTime = (e) => {\n        const data = { ...this.state.data };\n        const slot = this.getSlotTimes().find(\n            (time) => !time.label.localeCompare(e.target.value)\n        ).interval;\n        data.slot = slot;\n        this.setState({ data, slotLabel: e.target.value });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleDelete = (item) => {\n        const data = { ...this.state.data };\n        const index = data.itemList.indexOf(item);\n        data.itemList.splice(index, 1);\n        this.setState({ data });\n    };\n\n    handleBooking = async () => {\n        try {\n            const { data } = await bookNewSlot(\n                this.state.data,\n                this.props.data.shopId\n            );\n            const otp = this.state.data.otp;\n            this.setState({ dialogueData: {otp, ...data} });\n            this.setState({ openModal: true });\n        } catch (ex) {\n            console.log(ex);\n            this.setState({ errors: ex.response.data });\n            //alert(\"An error occured, Try re signin and booking\");\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ openModal: false });\n    };\n\n    render() {\n        //console.log(\"order:\", this.periodData());\n        const { data, item, openModal, slotLabel } = this.state;\n        const { period } = this.formData;\n        const { classes } = this.props;\n        const {\n            handlePeriod,\n            handleSlotTime,\n            handleAddItem,\n            handleDelete,\n            handleBooking,\n            handleClose,\n        } = this;\n        return (\n            <Grid container spacing={2} style={{ paddingTop: 15 }}>\n                <form style={{ width: \"100%\" }}>\n                    {/* <CurrentLocation /> */}\n                    <br />\n                    <Box\n                        borderRadius={5}\n                        boxShadow={5}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={1}\n                    >\n                        <Grid item container xs={12}>\n                            <Grid item xs={12} md={6}>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    className={classes.formControl}\n                                    required\n                                >\n                                    <InputLabel id=\"SelectPeriod\">\n                                        Slot Type\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"SelectPeriod\"\n                                        id=\"SelectPeriod\"\n                                        value={\n                                            period.filter(\n                                                (c) =>\n                                                    !c.label.localeCompare(\n                                                        data.period\n                                                    )\n                                            )[0]\n                                        }\n                                        onChange={handlePeriod}\n                                        label=\"Period\"\n                                    >\n                                        {period.map((time, i) => (\n                                            <MenuItem key={i} value={time}>\n                                                {time.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    required\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"SlotTime\">\n                                        Slot Time\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"SlotTime\"\n                                        id=\"SlotTime\"\n                                        value={slotLabel}\n                                        onChange={handleSlotTime}\n                                        label=\"Slot Time\"\n                                    >\n                                        {this.getSlotTimes().map((item, i) => (\n                                            <MenuItem\n                                                key={i}\n                                                value={item.label}\n                                            >\n                                                {item.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderRadius={5}\n                        boxShadow={5}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={1}\n                    >\n                        <Grid item container xs={12}>\n                            <Grid item xs={12} md={8}>\n                                <TextField\n                                    id=\"standard-basic\"\n                                    name=\"item\"\n                                    value={item}\n                                    onChange={this.handleChange}\n                                    label=\"Item\"\n                                    className={classes.formControl}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    onClick={handleAddItem}\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}\n                                >\n                                    add\n                                </Button>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Box>\n                                    {data.itemList.map((value, i) => (\n                                        <Chip\n                                            key={i}\n                                            label={value}\n                                            color=\"secondary\"\n                                            onDelete={() => handleDelete(value)}\n                                            className={classes.chip}\n                                        />\n                                    ))}\n                                </Box>\n                            </Grid>\n                            {this.state.errors &&\n                            this.state.errors.purchaseItems ? (\n                                <Grid item xs={12}>\n                                    <Typography variant=\"body2\" color=\"error\">\n                                        {this.state.errors.purchaseItems}\n                                    </Typography>\n                                </Grid>\n                            ) : null}\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderRadius={5}\n                        boxShadow={2}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={3}\n                    >\n                        <Typography>\n                            {data.itemList.length\n                                ? `${data.itemList.length} items selected.`\n                                : \"\"}\n                            <br />\n                            You'll be alloted a period within the slot you\n                            choosed.\n                        </Typography>\n                        <br />\n                        <Grid item container direction=\"row\" justify=\"center\">\n                            <Button\n                                disabled={\n                                    Object.keys(this.state.data.slot).length ===\n                                    0\n                                }\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={handleBooking}\n                            >\n                                Confirm Booking\n                            </Button>\n                        </Grid>\n                        <Dialog\n                            open={openModal}\n                            onClose={handleClose}\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                        >\n                            <DialogContent>\n                                <ModalNoticeBody\n                                    data={this.state.dialogueData}\n                                />\n                            </DialogContent>\n                        </Dialog>\n                    </Box>\n                </form>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(Order);\n\nfunction timeString(h, m) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass ModalNoticeBody extends Component {\n    state = {};\n\n    render() {\n        const {\n            arrivalHour,\n            arrivalMinute,\n            deliveryHour,\n            bookingId,\n            otp,\n            deliveryMinute,\n        } = this.props.data;\n        return (\n            <Box>\n                <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                    <img\n                        src=\"https://www.huayeahfabric.com/wp-content/uploads/2019/06/success.gif\"\n                        style={{ height: 150, margin: \"auto\" }}\n                    />\n                    <br />\n                    Thank you for your order.\n                    <br />\n                    <p style={{ fontSize: 20 }}>\n                        You are alloted the slot <br />\n                        <b style={{ fontSize: 26 }}>\n                            {timeString(arrivalHour, arrivalMinute)} →{\" \"}\n                            {timeString(deliveryHour, deliveryMinute)}\n                        </b>\n                    </p>\n                </Typography>\n                <Typography variant=\"h5\" align=\"center\">\n                    OTP: <b>{otp}</b>\n                </Typography><Typography variant=\"h6\" align=\"center\">\n                    Your Booking Id: <b>{bookingId}</b>\n                </Typography>\n            </Box>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width:'100%',\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        marginTop:20,\n        backgroundColor: theme.palette.background.paper,\n    },\n    // gridList: {\n    //     width: 500,\n    //     height: 450,\n    // },\n});\n\nclass Image extends Component {\n    state = {};\n    tileData = [\n        {\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 2,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 2,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 3,\n        },\n    ];\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <GridList\n                    cellHeight={250}\n                    //className={classes.gridList}\n                    cols={3}\n                >\n                    {this.tileData.map((tile) => (\n                        <GridListTile\n                            key={tile.img}\n                            cols={tile.cols || 1}\n                        >\n                            <img src={tile.img} alt={tile.title} />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Image);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport Button from \"@material-ui/core/Button\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAltOutlined\";\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getReviews } from '../../../../services/dataServices';\n\n\nclass Review extends Component {\n    state = {\n        data: [],\n        sortType: \"Newest First\",\n        isLoading:false,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getReviews(this.props.id);\n            this.setState({ data });\n        } catch (ex) {\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    sorting = [\n        \"Newest First\",\n        \"Oldest First\",\n        \"Highest Rated\",\n        \"Lowest Rated\"\n    ];\n\n    handleChange = event => {\n        this.setState({ sortType: event.target.value });\n    }\n\n    render() {\n        return (\n            <Grid container direction=\"row\" spacing={5} lg sm md xs>\n                {this.state.isLoading ? (\n                    <Grid item container direction=\"row\" justify=\"center\" style={{marginTop:10}}>\n                        <CircularProgress />\n                    </Grid>\n                ) : (\n                    <React.Fragment>\n                        <FormControl\n                            variant=\"standard\"\n                            style={{ marginLeft: 30, marginTop: 20 }}\n                            //className={classes.formControl}\n                        >\n                            <InputLabel id=\"demo-simple-select-filled-label\">\n                                Sort By\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-filled-label\"\n                                id=\"demo-simple-select-filled\"\n                                value={this.state.sortType}\n                                onChange={this.handleChange}\n                            >\n                                {this.sorting.map((value, i) => (\n                                    <MenuItem key={i} value={value}>\n                                        {value}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        {this.state.data.map((val) => (\n                            <React.Fragment>\n                                <ReviewCard key={val.ratingId} data={val} />\n                                <Divider />\n                            </React.Fragment>\n                        ))}\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default Review;\n\n\n\nconst customIcons = {\n    1: {\n        icon: <SentimentVeryDissatisfiedIcon />,\n        label: \"Very Dissatisfied\",\n    },\n    2: {\n        icon: <SentimentDissatisfiedIcon />,\n        label: \"Dissatisfied\",\n    },\n    3: {\n        icon: <SentimentSatisfiedIcon />,\n        label: \"Neutral\",\n    },\n    4: {\n        icon: <SentimentSatisfiedAltIcon />,\n        label: \"Satisfied\",\n    },\n    5: {\n        icon: <SentimentVerySatisfiedIcon />,\n        label: \"Very Satisfied\",\n    },\n};\nfunction IconContainer(props) {\n    const { value, ...other } = props;\n    return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\n\nclass ReviewCard extends Component {\n    state = {\n        data: {},\n        liked: false,\n    };\n\n    handleLike = () => {\n        this.setState({ liked: !this.state.liked });\n    };\n\n    date = str => {\n        const options = {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n        };\n        let d = new Date(str);\n        return d.toLocaleDateString(\"en-US\", options);\n    }\n\n    // createdAt: \"2020-07-20T13:15:35.544Z\";\n    // customerId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n    // customerName: \"Sk Shahnawaz\";\n    // imageUrl: \"https://picsum.photos/200\";\n    // rating: 5;\n    // ratingId: \"zKb44YHvLhhfBlnYnwER\";\n    // review: \"okay delivery\";\n\n    render() {\n        const {\n            customerName:name,\n            review,\n            rating,\n            imageUrl,\n            createdAt,\n            customerId,\n            ratingId,\n        } = this.props.data;\n        return (\n\n            <Grid\n                container\n                item\n                direction=\"column\"\n                lg={12}\n                sm={12}\n                md={12}\n                xl={12}\n            >\n                <Box borderRadius={5} style={{ padding: 8, width: \"100%\" }}>\n                    <Grid\n                        container\n                        item\n                        direction=\"row\"\n                        lg={12}\n                        sm={12}\n                        md={12}\n                        xl={12}\n                        spacing={5}\n                    >\n                        <Grid\n                            item\n                            container\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            lg={8}\n                            xl={8}\n                            spacing={2}\n                            sm={8}\n                        >\n                            <Grid item xs={2}>\n                                <Avatar\n                                    src={imageUrl}\n                                    style={{ margin: 5 }}\n                                />\n                            </Grid>\n                            <Grid\n                                item\n                                container\n                                direction=\"column\"\n                                xs={12}\n                                lg={8}\n                                xl={8}\n                            >\n                                <Typography component=\"h2\" variant=\"h5\">\n                                    {name}\n                                </Typography>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                >\n                                    {this.date(createdAt)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            lg={4}\n                            xl={4}\n                            sm={4}\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                            spacing={1}\n                        >\n                            <Grid item>\n                                <Rating\n                                    name=\"ratings\"\n                                    defaultValue={rating}\n                                    readOnly\n                                    style={{ paddingTop: 4, color: \"#ff065c\" }}\n                                    getLabelText={(value) =>\n                                        customIcons[value].label\n                                    }\n                                    IconContainerComponent={IconContainer}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h6\">\n                                    <b>{rating}</b>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        <Typography\n                            variant=\"subtitle1\"\n                            paragraph\n                            style={{ marginTop: 20 }}\n                        >\n                            {review}\n                        </Typography>\n                        <Grid\n                            container\n                            spacing={2}\n                            style={{ marginBottom: 10 }}\n                        >\n                            <Grid item>\n                                <Box\n                                    borderRadius={15}\n                                    style={{\n                                        backgroundImage: `url(${\"https://picsum.photos/200/150\"})`,\n                                        width: \"200px\",\n                                        height: \"150px\",\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Box\n                                    borderRadius={15}\n                                    style={{\n                                        backgroundImage: `url(${\"https://picsum.photos/201/150\"})`,\n                                        width: \"200px\",\n                                        height: \"150px\",\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        <Button\n                            color=\"secondary\"\n                            onClick={this.handleLike}\n                            startIcon={\n                                this.state.liked ? (\n                                    <ThumbUpAltIcon />\n                                ) : (\n                                    <ThumbUpAltOutlinedIcon />\n                                )\n                            }\n                        >\n                            like\n                        </Button>\n                        <Typography variant=\"caption\">\n                            {Math.round(Math.random(0, 1) * 500)} Likes\n                        </Typography>\n                    </Grid>\n                </Box>\n                <Divider style={{ width: \"90%\", margin: \"auto\" }} />\n            </Grid>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Typography, Box, Button } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { giveReview } from '../../../../services/userService';\n\n\nclass GiveReview extends Component {\n    state = { write: false, reviewText: \"\", ratings: 0 };\n\n    handleClick = () => {\n        if (!localStorage.getItem(\"userLogged\")) {\n            alert(\"Please Sign in to review\");\n            window.location = \"/signin\";\n        } else {\n            if (!this.state.write) this.setState({ write: !this.state.write });\n            else this.handleSubmit();\n        }\n    };\n\n    handleSubmit = async () => {\n        this.setState({ write: !this.state.write });\n        try {\n            const response = await giveReview(this.state.ratings, this.props.id, this.state.reviewText);\n            console.log(response.data);\n            alert(\"Submitted\");\n        } catch (ex) {\n            alert(ex.response.data);\n            console.log(ex.response);\n        }\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleRating = (event, value) => {\n        this.setState({ ratings: value });\n    }\n\n    render() {\n        return (\n            <Grid item>\n                <Box\n                    borderRadius={5}\n                    boxShadow={3}\n                    padding={2}\n                    style={{ backgroundColor: \"white\", width: \"100%\" }}\n                >\n                    <Typography style={{ fontSize: 25, color: \"#ff689c\" }}>\n                        <b>Rate your experience</b>\n                    </Typography>\n                    <Rating\n                        name=\"ratings\"\n                        style={{ fontSize: 25, color: \"#f10053\" }}\n                        onChange={this.handleRating}\n                        value={this.state.ratings}\n                    />\n                    <br />\n                    {this.state.write && (\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Write your review here\"\n                            multiline\n                            value={this.state.reviewText}\n                            name=\"reviewText\"\n                            rows={6}\n                            fullWidth\n                            onChange={this.handleChange}\n                            defaultValue=\"\"\n                            variant=\"outlined\"\n                            style={{ marginBottom: 5, marginTop: 15 }}\n                        />\n                    )}\n                    <Button\n                        size=\"small\"\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        onClick={this.handleClick}\n                        style={{ marginTop: 5 }}\n                    >\n                        {this.state.write ? \"submit\" : \"Add a review\"}\n                    </Button>\n                </Box>\n            </Grid>\n        );\n    }\n}\n\nexport default GiveReview;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport BallotOutlinedIcon from \"@material-ui/icons/BallotOutlined\";\nimport PhotoLibraryOutlinedIcon from \"@material-ui/icons/PhotoLibraryOutlined\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport Address from \"./Adress\";\nimport Overview from \"./Overview\";\nimport Order from \"./Order\";\nimport Image from \"./Image\";\nimport Review from \"./Reviews\";\nimport GiveReview from \"./giveReview\";\nimport { getShopDetails } from \"../../../../services/dataServices\";\n\nconst useStyles = (theme) => ({\n    chip: {\n        margin: 2,\n    },\n    toolbarSecondary: {\n        justifyContent: \"space-between\",\n        overflowX: \"auto\",\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        margin: 5,\n        flexShrink: 0,\n        fontSize: 12,\n        cursor: \"pointer\",\n    },\n});\n\nconst tabs = [\n    { title: \"Book Slot\", value: 0, icon: <AddBoxOutlinedIcon /> },\n    { title: \"Reviews\", value: 1, icon: <BallotOutlinedIcon /> },\n    { title: \"Photos\", value: 2, icon: <PhotoLibraryOutlinedIcon /> },\n];\n\nclass ShopPage extends Component {\n    state = {\n        data: {},\n        tabPageNumber: 0,\n        isLoading: true,\n        address: \"\",\n    };\n\n    async componentDidMount() {\n        const id = this.props.match.params.shopId;\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getShopDetails(id);\n            this.setState({ data: data[0], isLoading: false });\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    getTabPage = (id, data) => {\n        const tabPage = [\n            <Order data={data} />,\n            <Review id={data.shopId} />,\n            <Image />,\n        ];\n        return tabPage[id];\n    };\n\n    handleTabs = (event, tabPageNumber) => {\n        this.setState({ tabPageNumber });\n    };\n\n    handleDirection = () => {\n        const userAddress = localStorage\n            .getItem(\"userAddress\")\n            .split(\" \")\n            .join(\"%20\");\n        const destination = this.state.data.address.split(\" \").join(\"%20\");\n\n        window.open(\n            `https://www.google.com/maps/dir/?api=1&origin=${userAddress}&destination=${destination}`,\n            \"_blank\"\n        );\n    };\n\n    render() {\n        console.log(this.state, this.props.userAddress);\n        const { classes } = this.props;\n        const {\n            imageUrl,\n            tags,\n            payment_modes,\n            shopRating: rating,\n            address,\n            phoneNumber,\n            ownerName,\n            shopId,\n            shopName,\n            discount,\n            openingTimeIST,\n            closingTimeIST,\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.state.data;\n        // const imageUrl =\n        //     imgUrl ||\n        //     \"https://picsum.photos/600/\" +\n        //         Math.round(Math.random(0, 1) * 200 + 500);\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"xl\">\n                    <main>\n                        <Box boxShadow={0} p={2} style={{ width: \"100%\" }}>\n                            {this.state.isLoading ? (\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    xs\n                                    xl\n                                    lg\n                                    justify=\"center\"\n                                    style={{ marginTop: 20 }}\n                                >\n                                    <CircularProgress color=\"secondary\" />\n                                </Grid>\n                            ) : (\n                                <Grid container direction=\"row\" spacing={0}>\n                                    <Grid\n                                        item\n                                        container\n                                        sm={4}\n                                        md={4}\n                                        lg={4}\n                                        spacing={5}\n                                        direction=\"column\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item style={{ width: \"100%\" }}>\n                                            <Box\n                                                borderRadius={16}\n                                                boxShadow={3}\n                                                style={{\n                                                    backgroundImage: `url(${imageUrl})`,\n                                                    height: 450,\n                                                    backgroundSize: \"cover\",\n                                                    width: \"100%\",\n                                                }}\n                                            ></Box>\n                                        </Grid>\n                                        <Grid container item direction=\"row\">\n                                            <Grid\n                                                item\n                                                container\n                                                direction=\"column\"\n                                                sm={8}\n                                                lg={8}\n                                                md={8}\n                                                xl={8}\n                                                justify=\"flex-start\"\n                                                alignItems=\"flex-start\"\n                                            >\n                                                <Grid item>\n                                                    <Typography\n                                                        variant=\"h4\"\n                                                        style={{\n                                                            marginBottom: 10,\n                                                        }}\n                                                    >\n                                                        <b>{shopName}</b>\n                                                    </Typography>\n                                                    <Typography variant=\"body1\">\n                                                        <FiberManualRecordIcon\n                                                            style={{\n                                                                color: \"green\",\n                                                                fontSize: 13,\n                                                                marginRight: 5,\n                                                            }}\n                                                        />\n                                                        {openingTimeIST}\n                                                        <FiberManualRecordIcon\n                                                            style={{\n                                                                color: \"red\",\n                                                                fontSize: 13,\n                                                            }}\n                                                        />\n                                                        {closingTimeIST}\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid\n                                                    item\n                                                    style={{\n                                                        marginTop: 20,\n                                                        marginBottom: 10,\n                                                    }}\n                                                >\n                                                    {tags.map((value) => (\n                                                        <Chip\n                                                            key={value}\n                                                            label={value}\n                                                            color=\"primary\"\n                                                            variant=\"outlined\"\n                                                            className={\n                                                                classes.chip\n                                                            }\n                                                        />\n                                                    ))}\n                                                </Grid>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                container\n                                                sm={4}\n                                                lg={4}\n                                                xl={4}\n                                                justify=\"flex-Start\"\n                                                alignItems=\"flex-end\"\n                                                direction=\"column\"\n                                            >\n                                                <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    style={{ marginBottom: 10 }}\n                                                >\n                                                    <Rating\n                                                        name=\"ratings\"\n                                                        defaultValue={rating[0]}\n                                                        precision={0.1}\n                                                        readOnly\n                                                        style={{\n                                                            fontSize: 40,\n                                                            color: \"red\",\n                                                        }}\n                                                    />\n                                                    <Typography\n                                                        variant=\"h5\"\n                                                        style={{\n                                                            marginTop: 5,\n                                                            marginLeft: 5,\n                                                        }}\n                                                    >\n                                                        <b>{rating[0]}</b>\n                                                    </Typography>\n                                                </Grid>\n                                                {/* <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                    }}\n                                                >\n                                                    <Typography variant=\"body1\">\n                                                        {rating[1] + \" \"}\n                                                        reviews\n                                                    </Typography>\n                                                </Grid> */}\n                                                <br />\n                                                <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    spacing={5}\n                                                    style={{\n                                                        width: \"100%\",\n                                                    }}\n                                                >\n                                                    <Button\n                                                        variant=\"outlined\"\n                                                        style={{ margin: 5 }}\n                                                        color=\"secondary\"\n                                                        onClick={\n                                                            this.handleDirection\n                                                        }\n                                                        startIcon={\n                                                            <DirectionsIcon />\n                                                        }\n                                                    >\n                                                        direction\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"outlined\"\n                                                        style={{ margin: 5 }}\n                                                        color=\"secondary\"\n                                                        startIcon={\n                                                            <ShareIcon />\n                                                        }\n                                                    >\n                                                        share\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            container\n                                            spacing={2}\n                                            alignItems=\"center\"\n                                            justify=\"flex-start\"\n                                            direction=\"column\"\n                                        >\n                                            <Grid\n                                                item\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                <Address\n                                                    data={{\n                                                        address,\n                                                        phoneNumber,\n                                                        ownerName,\n                                                    }}\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                <GiveReview id={this.state.data.shopId}/>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sm={1} md={1} lg={1}></Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sm={6}\n                                        md={6}\n                                        lg={6}\n                                        style={{ width: \"100%\" }}\n                                        spacing={5}\n                                        direction=\"column\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid\n                                            item\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            style={{ width: \"100%\" }}\n                                        >\n                                            <Tabs\n                                                value={this.state.tabPageNumber}\n                                                onChange={this.handleTabs}\n                                                variant=\"scrollable\"\n                                                scrollButtons=\"auto\"\n                                                indicatorColor=\"secondary\"\n                                                textColor=\"secondary\"\n                                                aria-label=\"icon label tabs example\"\n                                            >\n                                                {tabs.map((tab) => (\n                                                    <Tab\n                                                        color=\"inherit\"\n                                                        noWrap\n                                                        icon={tab.icon}\n                                                        label={tab.title}\n                                                        key={tab.title}\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.toolbarLink\n                                                        }\n                                                    />\n                                                ))}\n                                            </Tabs>\n                                        </Grid>\n                                        <Grid style={{ width: \"100%\" }}>\n                                            {this.getTabPage(\n                                                this.state.tabPageNumber,\n                                                this.state.data\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Box>\n                    </main>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ShopPage);\n","import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport BookmarksRoundedIcon from \"@material-ui/icons/BookmarksRounded\";\nimport PowerSettingsNewRoundedIcon from \"@material-ui/icons/PowerSettingsNewRounded\";\n\nimport Shops from \"./shops\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MyBookings from \"./myBookings\";\nimport MyProfile from \"./profile\";\nimport Logout from \"./Logout\";\nimport ShopPage from \"./shopPage/shopPage\";\nimport { userDetails } from \"../../../services/userService\";\n\nconst drawerWidth = 240;\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n    },\n    drawer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        // [theme.breakpoints.up('sm')]: {\n        //   width: `calc(100% - ${drawerWidth}px)`,\n        //   marginLeft: drawerWidth,\n        // },\n        background: \"#f98b88\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        width: \"100%\",\n        padding: theme.spacing(3),\n    },\n    largeAvatar: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        margin: \"auto\",\n    },\n});\n\nclass MainPage extends Component {\n    state = {\n        data: [\n            {\n                path: \"/customer/profile\",\n                label: \"Profile\",\n                icon: <AccountBoxIcon />,\n            },\n            {\n                path: \"/customer/dashboard\",\n                label: \"Dashboard\",\n                icon: <DashboardIcon />,\n            },\n            {\n                path: \"/customer/booking\",\n                label: \"Bookings\",\n                icon: <BookmarksRoundedIcon />,\n            },\n            {\n                path: \"/customer/logout\",\n                label: \"Logout\",\n                icon: <PowerSettingsNewRoundedIcon />,\n            },\n        ],\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await userDetails();\n            const { firstName, lastName } = response.data.userCredentials;\n            localStorage.setItem(\"userName\", firstName + \" \" + lastName);\n            console.log(response);\n        } catch (ex) {\n            if (ex.response && ex.response.status == 403) alert(\"Your Token has expired. Please re Sign In.\");\n            console.log(ex.response)\n        }\n    }\n\n    handleClick = (path) => {\n        this.props.history.push(path);\n    };\n\n    render() {\n        const { window, classes, theme } = this.props;\n        const container =\n            window !== undefined ? () => window().document.body : undefined;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Switch>\n                        <Route\n                            path=\"/customer/profile\"\n                            component={() => <MyProfile />}\n                        />\n                        <Route\n                            path=\"/customer/dashboard\"\n                            component={() => <Shops />}\n                        />\n                        <Route\n                            path=\"/customer/booking/\"\n                            component={MyBookings}\n                        />\n                        <Route path=\"/customer/logout/\" component={Logout} />\n                        <Route\n                            path=\"/customer/shop/:shopId?\"\n                            component={ShopPage}\n                        />\n                        <Route path=\"/customer\" component={() => <Shops />} />\n                        {/* <Route path=\"/\" component={MyProfile} /> */}\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles, { withTheme: true })(MainPage));\n","//Only for App.js, Includes Appbar and Options,\nimport React, { Component } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { withRouter } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Slide from \"@material-ui/core/Slide\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport SignIn from \"./pages/signin\";\nimport AndroidOutlinedIcon from '@material-ui/icons/AndroidOutlined';\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\n\nclass CustomAppBarClass extends Component {\n    state = {\n        anchorEl: null,\n    };\n\n    handlePath = (path) => {\n        this.props.history.push(path);\n    };\n\n    handleSignIn = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleSignUp = () => {\n        this.props.history.push(\"/signup\");\n    };\n\n    HideOnScroll = (props) => {\n        const { children, window } = props;\n        const trigger = useScrollTrigger({\n            target: window ? window() : undefined,\n        });\n\n        return (\n            <Slide appear={false} direction=\"down\" in={!trigger}>\n                {children}\n            </Slide>\n        );\n    };\n\n    render() {\n        const { menuOption, auth } = this.props;\n        const { HideOnScroll } = this;\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? \"simple-popover\" : undefined;\n        const homePage = !localStorage.getItem(\"userLogged\");\n        console.log(\"home \", homePage);\n        return (\n            <HideOnScroll {...this.props}>\n                {/* <AppBar color=\"transparent\"  style={{ flexGrow: 1,  }} > */}\n                <AppBar\n                    color={homePage ? \"transparent\" : \"\"}\n                    elevation={homePage ? 0 : 6}\n                    disableGutters={homePage ? \"true\" : \"false\"}\n                    style={{\n                        flexGrow: 1,\n                        background: homePage ? \"\" : \"#28da8b\",\n                        //background: homePage ? \"\" : \"#00ff80\",\n                    }}\n                    //style={{ flexGrow: 1, background: \"#00ff80\" }}\n                >\n                    <Toolbar>\n                        {homePage || (\n                            <img\n                                src=\"https://storage.googleapis.com/shopsafe-ju/logonew.png\"\n                                //src=\"https://drive.google.com/uc?export=view&id=18cWTWvu9cTgiZWWp_yDnwzvic3HDZPhz\"\n                                width=\"60\"\n                                height=\"50\"\n                            />\n                        )}\n                        <div style={{ flexGrow: 1 }} />\n                        {/* <Typography variant=\"h4\" noWrap /> */}\n                        {auth ? (\n                            <ProfileMenu\n                                menuOption={menuOption || []}\n                                handlePath={this.handlePath}\n                            />\n                        ) : (\n                            <React.Fragment>\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={this.handleSignIn}\n                                    color=\"primary\"\n                                    style={{\n                                        margin: 3,\n                                    }}\n                                >\n                                    Sign In\n                                </Button>\n                                <Popover\n                                    id={id}\n                                    open={open}\n                                    anchorEl={this.state.anchorEl}\n                                    onClose={this.handleClose}\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"center\",\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"center\",\n                                    }}\n                                >\n                                    <Box m={2} p={2}>\n                                        <SignIn\n                                            handleAuth={this.props.handleAuth}\n                                            handleClose={this.handleClose}\n                                        />\n                                    </Box>\n                                </Popover>\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={this.handleSignUp}\n                                    color=\"primary\"\n                                    style={{\n                                        margin: 3,\n                                    }}\n                                >\n                                    Sign Up\n                                </Button>\n                            </React.Fragment>\n                        )}\n                    </Toolbar>\n                </AppBar>\n            </HideOnScroll>\n        );\n    }\n}\n\n//export default withRouter(CustomAppBar);\n\nclass CustomFooter extends Component {\n    state = {};\n    handleGit = () => {\n        window.location = \"https://github.com/Swadesh13/ShopSafe\";\n    }\n    handleApp = () => {\n        window.location = \"https://github.com/Swadesh13/ShopSafe\";\n    }\n    render() {\n        return (\n            <div\n                style={{\n                    //width: \"100%\",\n                    height: \"35x\",\n                    bottom: 0,\n                    paddingTop: 10,\n                    paddingBottom: 10,\n                    marginBottom: -1,\n                    background: \"#f2f2e4\",\n                }}\n            >\n                <Grid container direction=\"row\" justify=\"center\" >\n                    <Grid\n                        item\n                        container\n                        direction=\"column\"\n                        justify=\"space-evenly\"\n                        spacing={2}\n                        alignItems=\"center\"\n                        sm={3}\n                    >\n                        <Grid item>\n                            <img\n                                src=\"https://storage.googleapis.com/shopsafe-ju/eQ-logo-circle.png\"\n                                width=\"60\"\n                                heigt=\"60\"\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\" align=\"center\">\n                                Queue for the New Normal\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        direction=\"column\"\n                        sm={3}\n                    >\n                        <Link href=\"#\">Home</Link>\n                        <Link href=\"#\">Privacy Policy</Link>\n                        <Link href=\"#\">About Us</Link>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        direction=\"column\"\n                        sm={3}\n                    >\n                        <Link href=\"#\">Helps and Support</Link>\n                        <Link href=\"#\">Terms and Condition</Link>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        direction=\"column\"\n                        sm={3}\n                    >\n                        <Box\n                            borderRadius={5}\n                            style={{\n                                backgroundImage: `url(\n                                    \"https://storage.googleapis.com/shopsafe-ju/play_store.png\"\n                                )`,\n                                height: \"50px\",\n                                width: \"180px\",\n                                backgroundSize: \"cover\",\n                                backgroundPosition: \"center\",\n                                cursor: \"pointer\",\n                                marginTop: 2,\n                                marginBottom: 2,\n                            }}\n                            onClick={this.handleApp}\n                        />\n                        <Box\n                            borderRadius={5}\n                            style={{\n                                backgroundImage: `url(\n                                    \"https://storage.googleapis.com/shopsafe-ju/github.jpeg\"\n                                )`,\n                                height: \"50px\",\n                                width: \"180px\",\n                                backgroundSize: \"cover\",\n                                backgroundPosition: \"center\",\n                                cursor: \"pointer\",\n                                marginTop: 2,\n                                marginBottom: 2,\n                            }}\n                            onClick={this.handleGit}\n                        />\n                    </Grid>\n                    <Grid item container justify=\"center\">\n                        <Typography variant=\"body1\" align=\"center\">\n                            Copyright © 2020 eQ. All rights reserved\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nclass ProfileMenu extends Component {\n    state = {\n        anchorEl: null,\n        menuOption: this.props.menuOption,\n    };\n\n    handleMenu = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handlePath = (path) => {\n        this.props.handlePath(path);\n        this.handleClose();\n    };\n\n    render() {\n        const { anchorEl, menuOption } = this.state;\n        const { handleClose, handleMenu } = this;\n        return (\n            <div>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                >\n                    <AccountCircle style={{ fontSize: 45 }} />\n                </IconButton>\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    open={anchorEl ? true : false}\n                    onClose={handleClose}\n                >\n                    {menuOption.map((option, i) => (\n                        <MenuItem\n                            key={i}\n                            onClick={() => this.handlePath(option.path)}\n                        >\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nexport const CustomAppBar = withRouter(CustomAppBarClass);\nexport const Footer = withRouter(CustomFooter);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"center\",\n  },\n  hero: {\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)), url('https://emerging-europe.com/wp-content/uploads/2018/12/b_retail_1_epp_galaxy_szczecin-990x556.jpg')`,\n    height: \"600px\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"#fff\",\n    fontSize: \"4rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 300,\n      fontSize: \"3em\",\n    },\n  },\n  blogsContainer: {\n    paddingTop: theme.spacing(3),\n  },\n  promo: {\n    backgroundColor: \"#fff5ec\",\n    marginBottom: 20,\n  },\n  blogTitle: {\n    fontWeight: 800,\n    paddingBottom: theme.spacing(3),\n  },\n  card: {\n    maxWidth: \"100%\",\n    elevation: 0,\n  },\n  media: {\n    height: 350,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 100,\n    },\n  },\n  cardActions: {\n    display: \"flex\",\n    margin: \"0 10px\",\n    justifyContent: \"space-between\",\n  },\n  cardContent: {\n    alignItems: \"center\",\n  },\n  author: {\n    display: \"flex\",\n  },\n  paginationContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction Home() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Box className={classes.hero}>{/* <Box>Lala Boi</Box> */}</Box>\n            <Container maxWidth=\"xl\" className={classes.blogsContainer}>\n                <Box className={classes.promo}>\n                    <Typography variant=\"h4\" align=\"left\">\n                        Tired of Standing in Long Queue?\n                    </Typography>\n                    <Typography gutterbottom variant=\"h4\" align=\"right\">\n                        Afraid of getting infected?\n                    </Typography>\n                    <Typography variant=\"h4\" className={classes.blogTitle}>\n                        It's time to say Bye-Bye !!\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.blogTitle}>\n                        With eQ, have the oppurtunity to manage your position in\n                        an online Queue and save your time.\n                    </Typography>\n                </Box>\n                <Typography variant=\"h4\" className={classes.blogTitle}>\n                    Book your Slot in Four Easy steps:\n                </Typography>\n                <Grid container spacing={4} style={{ marginBottom: 20 }}>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/1.jpeg\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent className={classes.cardContent}>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Set Location\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/2.jpeg\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Select Shop\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/3.jpeg\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Choose Slot\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/4.jpeg\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    <b>BOOK</b>\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row-reverse\"\n                    className={classes.promo}\n                    justify=\"space-between\"\n                >\n                    <Grid item xs={12} sm={6}>\n                        <img\n                            src=\"https://storage.googleapis.com/shopsafe-ju/new-normal.jpg\"\n                            style={{ width: \"100%\" }}\n                        />\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        spacing={5}\n                    >\n                        <Grid item>\n                            <Typography variant=\"h2\" component=\"h2\">\n                                Shopping cum Social Distancing\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h6\" component=\"h6\">\n                                Our online-queueing algorithm is aimed at\n                                reducing overcrowding at shops and thus helps\n                                practise social distancing efficiently.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid\n                    container\n                    className={classes.promo}\n                    justify=\"space-between\"\n                >\n                    <Grid item xs={12} sm={6}>\n                        <img\n                            src=\"https://storage.googleapis.com/shopsafe-ju/manage-booking.jpg\"\n                            style={{ width: \"100%\" }}\n                        />\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        spacing={5}\n                    >\n                        <Grid item>\n                            <Typography variant=\"h2\" component=\"h2\">\n                                Manage your position in real-time\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h6\" component=\"h6\">\n                                Our simple UI provides a seamless experience\n                                towards booking slots and managing them in\n                                real-time. It's just as if you are standing in a\n                                real queue.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { logout } from '../../../services/userService';\n\n\nclass Logout extends Component {\n    state = {}\n    async componentDidMount() {\n        try {\n            const response = await logout();\n            console.log(response);\n        } catch (ex) {\n            console.log(ex);\n        } finally {\n            localStorage.clear();\n            window.location = \"/\";\n        }\n    }\n    render() { \n        return ( null );\n    }\n}\n \nexport default withRouter(Logout);","import React, { Component } from \"react\";\nimport ApexCharts from \"react-apexcharts\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst useStyles = (theme) => ({\n    root: { margin: 5, height: \"50%\", width: \"95%\" },\n});\n\nclass ApexLineChart extends Component {\n    state = {\n        series: [\n            {\n                name: \"Customer Booked\",\n                data: [],\n            },\n            {\n                name: \"Turn Ups\",\n                data: [],\n            },\n        ],\n        options: {\n            chart: {\n                height: 350,\n                type: \"area\",\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            stroke: {\n                curve: \"smooth\",\n            },\n            xaxis: {\n                type: \"string\",\n                categories: [],\n            },\n\n            // xaxis: {\n            //     type: \"datetime\",\n            //     categories: [],\n            // },\n            // tooltip: {\n            //     x: {\n            //         format: \"DD/MM/YYYY HH:mm\",\n            //     },\n            // },\n        },\n    };\n\n    getOptions = () => {\n        let options = { ...this.state.options };\n        const { data } = this.props;\n        let categories = [];\n        let d = new Date();\n\n        for (\n            let x = this.props.shopData.openingHour;\n            x <= this.props.shopData.closingHour;\n            x++\n        ) {\n            d.setHours(x);\n            d.setMinutes(0);\n            categories.push(\n                d.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    hour12: true,\n                })\n            );\n        }\n        options.xaxis.categories = categories;\n        return options;\n    };\n\n    getSeries = () => {\n        const { data } = this.props;\n\n        let bookedData = [];\n        let turnUpsData = [];\n        for (\n            let x = this.props.shopData.openingHour;\n            x <= this.props.shopData.closingHour;\n            x++\n        ) {\n            let count1 = 0,\n                count2 = 0;\n            for (const row of this.props.data) {\n                if (row.arrivalHour == x) count1++;\n                if (row.arrivalHour == x && row.status == 2) count2++;\n            }\n            bookedData.push(count1);\n            turnUpsData.push(count2);\n        }\n\n        let series = [...this.state.series];\n        let options = { ...this.state.options };\n        series[0].data = bookedData;\n        series[1].data = turnUpsData;\n        return series;\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Box\n                m={3}\n                p={1}\n                borderRadius={5}\n                boxShadow={5}\n                style={{ width: \"96%\" }}\n            >\n                <Typography variant=\"h4\" style={{ marginLeft: 5 }}>\n                    {this.props.shopData.shopName}\n                </Typography>\n                <ApexCharts\n                    className={classes.root}\n                    options={this.getOptions()}\n                    series={this.getSeries()}\n                    type=\"area\"\n                    height={370}\n                />\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ApexLineChart);\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport ApexCharts from \"react-apexcharts\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { getShopDetailsAuthorized } from '../../../../services/userService';\n\n\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass SimpleStatCard extends Component {\n    state = {\n        shopData: this.props.shopData,\n        CustomerServedToday: this.props.data.filter(c => c.status == 2).length,\n        UpcomingCustomer:this.props.data.filter(c => c.status == 1).length,\n    };\n\n    // componentDidMount() {\n    //     const CustomerServedToday = this.props.data.filter((c) => {\n    //         const d = new Date(c.createdAt);\n    //         const currentTime = new Date();\n    //         c.status == 2;\n    //     }).length;\n    // }\n\n    render() {\n        const { shopData } = this.state;\n        return (\n            <Box m={3} borderRadius={5} p={2} boxShadow={5}>\n                <Grid item container direction=\"row\" spacing={2}>\n                    <Grid item container direction=\"row\" xs={12} spacing={5}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">\n                                Customer Served Today\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {this.state.CustomerServedToday}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item container direction=\"row\" xs={12} spacing={5}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">\n                                Upcoming customer\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {this.state.UpcomingCustomer}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item container direction=\"row\" xs={12}>\n                        {/* <Grid item xs={12}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textSecondary\"\n                                align=\"center\"\n                            >\n                                Working Hour\n                            </Typography>\n                        </Grid> */}\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                align=\"center\"\n                                gutterBottom\n                                style={{\n                                    paddingLeft: 10,\n                                    margin: \"auto\",\n                                }}\n                            >\n                                <FiberManualRecordIcon\n                                    style={{\n                                        color: \"green\",\n                                        fontSize: 24,\n                                        marginRight: 5,\n                                    }}\n                                />\n                                {timeString(\n                                    shopData.openingHour,\n                                    shopData.openingMinute\n                                )}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                align=\"center\"\n                                gutterBottom\n                                style={{\n                                    paddingLeft: 10,\n                                    margin: \"auto\",\n                                }}\n                            >\n                                <FiberManualRecordIcon\n                                    style={{\n                                        color: \"red\",\n                                        fontSize: 24,\n                                        marginLeft: 10,\n                                    }}\n                                />\n                                {timeString(\n                                    shopData.closingHour,\n                                    shopData.closingMinute\n                                )}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default (SimpleStatCard);\n\nexport class TodayChart extends Component {\n           state = {\n               series: [\n                   {\n                       name: \"Morning\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour < 12)\n                               .length,\n                       ],\n                   },\n                   {\n                       name: \"Afternoon\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour >= 12 && c.arrivalHour <18)\n                               .length,\n                       ],\n                   },\n                   {\n                       name: \"Evening\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour >= 18)\n                               .length,\n                       ],\n                   },\n               ],\n               options: {\n                   chart: {\n                       type: \"bar\",\n                       height: 180,\n                   },\n                   plotOptions: {\n                       bar: {\n                           horizontal: false,\n                           columnWidth: \"55%\",\n                           //endingShape: \"rounded\",\n                       },\n                   },\n                   dataLabels: {\n                       enabled: false,\n                   },\n                   stroke: {\n                       show: true,\n                       width: 2,\n                       colors: [\"transparent\"],\n                   },\n                   xaxis: {\n                       categories: [\"Today\"],\n                   },\n                   yaxis: {\n                       title: {\n                           text: \"Number of Customer\",\n                       },\n                   },\n                   fill: {\n                       opacity: 1,\n                   },\n               },\n           };\n           render() {\n               return (\n                   <Box m={3} borderRadius={5} p={5} boxShadow={5}>\n                       <Grid container direction=\"row\" spacing={2}>\n                           <Grid item xs={12}>\n                               <Typography variant=\"h5\" color=\"textSecondary\">\n                                   Current Statistics\n                               </Typography>\n                           </Grid>\n                           <Grid\n                               item\n                               container\n                               direction=\"row\"\n                               xs={12}\n                               spacing={3}\n                               justify=\"center\"\n                           >\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Morning{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) => c.arrivalHour < 12\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Afternoon{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) =>\n                                                   c.arrivalHour >= 12 &&\n                                                   c.arrivalHour < 18\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Evening{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) => c.arrivalHour >= 18\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                           </Grid>\n                           <Grid item xs={12}>\n                               <ApexCharts\n                                   options={this.state.options}\n                                   series={this.state.series}\n                                   type=\"bar\"\n                                   height={200}\n                               />\n                           </Grid>\n                       </Grid>\n                   </Box>\n               );\n           }\n       }\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box,Grid, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { getShopBookings } from \"../../../../services/dataServices\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\n\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass UpcomingBookingsTable extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: this.props.data,\n    };\n\n    \n\n    filteredList = () => {\n        const d = new Date();\n        return this.state.bookingsData.filter(c => {\n            let ct = new Date(c.createdAt);\n            ct.setHours(c.arrivalHour); ct.setMinutes(c.arrivalMinute);\n            return (d.getTime() < ct.getTime() && c.status==1);\n        });\n    };\n\n    render() {\n        // const { data } = this.state;\n        const data = this.filteredList();\n        return (\n            <Box m={3} borderRadius={5} boxShadow={5}>\n                {/*  */}\n                <Grid container direction=\"row\">\n                    <Typography\n                        variant=\"h5\"\n                        color=\"textSecondary\"\n                        style={{ margin: 10 }}\n                    >\n                        Upcoming Bookings\n                    </Typography>\n                    <TableContainer component={Paper}>\n                        <Table\n                            style={{\n                                width: \"100%\",\n                                margin: \"auto\",\n                            }}\n                            aria-label=\"simple table\"\n                        >\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Name\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Items\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Slot\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((row, i) => (\n                                    <TableRow key={i}>\n                                        <TableCell\n                                            component=\"th\"\n                                            scope=\"row\"\n                                            align=\"center\"\n                                        >\n                                            {i + 1}\n                                            {/* <Avatar src={row.imgUrl} /> */}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >\n                                            {row.customerName}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >\n                                            {row.purchaseItems}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >{`${timeString(\n                                            row.arrivalHour,\n                                            row.arrivalMinute\n                                        )} - ${timeString(\n                                            row.deliveryHour,\n                                            row.deliveryMinute\n                                        )}`}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default UpcomingBookingsTable;\n","import React, { Component } from \"react\";\nimport ApexLineChart from \"./components/graph\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SimpleStatCard, { TodayChart } from \"./components/simpleStat\";\nimport UpcomingBookingsTable from \"./components/UpcomingBookingsTable\";\nimport { getShopBookings } from \"../../../services/dataServices\";\nimport { getShopDetailsAuthorized } from \"../../../services/userService\";\n\nclass ShopDashboard extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: [],\n        shopData: {},\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response1 = await getShopBookings();\n            console.log(response1.data);\n            const data = response1.data.filter((c) => {\n                const creationTime = new Date(c.createdAt);\n                const d = new Date();\n                d.setHours(0);\n                d.setMinutes(0);\n                d.setSeconds(0);\n                return creationTime.getTime() > d.getTime();\n            });\n            this.setState({ bookingsData:data , errorMessage: \"\" });\n            const response2 = await getShopDetailsAuthorized();\n            this.setState({ shopData: response2.data.userCredentials });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container xl spacing={0} style={{ marginTop: 80 }}>\n                    {this.state.isLoading ? (\n                        <CircularProgress\n                            style={{ marginLeft: window.innerWidth * 0.48 }}\n                        />\n                    ) : this.state.errorMessage ? (\n                        <h2 style={{ paddingTop: 60 }}>\n                            {this.state.errorMessage}\n                        </h2>\n                    ) : (\n                        <React.Fragment>\n                            <Grid item sm={4} md={4} lg={4} xl={4}>\n                                <TodayChart data={this.state.bookingsData} />\n                            </Grid>\n                            <Grid item sm={8} md={8} lg={8} xl={8}>\n                                <ApexLineChart shopData={this.state.shopData} data={this.state.bookingsData} />\n                            </Grid>\n                            <Grid item sm={4} md={4} lg={4} xl={4}>\n                                <SimpleStatCard\n                                    data={this.state.bookingsData}\n                                    shopData={this.state.shopData}\n                                />\n                            </Grid>\n                            <Grid item sm={8} md={8} lg={8} xl={8}>\n                                <UpcomingBookingsTable\n                                    data={this.state.bookingsData}\n                                />\n                            </Grid>\n                        </React.Fragment>\n                    )}\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ShopDashboard;\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box, Typography, Grid, TextField, Button } from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getShopBookings } from \"../../../services/dataServices\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { validateSlotByOtp } from \"../../../services/userService\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass ViewBookings extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: [],\n        filter: { status: \"All\", period: [\"Morning\", \"Afternoon\", \"Evening\"], todayOnly:true },\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopBookings();\n            console.log(response.data);\n            this.setState({ bookingsData: response.data, errorMessage: \"\" });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    updateFilter = (filter) => {\n        this.setState({ filter });\n        this.forceUpdate();\n    };\n\n    updateStatus = (data) => {\n        //data.status = 2;\n        let bookingsData = [...this.state.bookingsData];\n        const index = bookingsData.indexOf(data);\n        console.log(data, bookingsData, index);\n        bookingsData[index].status = 2;\n        this.setState({ bookingsData });\n    };\n\n    filterData = () => {\n        const { status, period,todayOnly } = this.state.filter;\n        let data = [...this.state.bookingsData];\n        console.log(period);\n        //filter by period\n        if (period.indexOf(\"Morning\") == -1) {\n            data = data.filter((c) => c.arrivalHour >= 12);\n        }\n        if (period.indexOf(\"Afternoon\") == -1) {\n            data = data.filter(\n                (c) => c.arrivalHour >= 18 || c.arrivalHour < 12\n            );\n        }\n        if (period.indexOf(\"Evening\") == -1) {\n            data = data.filter((c) => c.arrivalHour < 18);\n        }\n\n        if (todayOnly)\n            data = data.filter(c => {\n                const creationTime = new Date(c.createdAt);\n                const d = new Date(); d.setHours(0); d.setMinutes(0); d.setSeconds(0);\n                return creationTime.getTime() > d.getTime();\n            })\n\n        //filter according to status\n        if (status.localeCompare(\"All\") == 0) return data;\n        else if (status.localeCompare(\"Pending\") == 0)\n            return data.filter((c) => c.status == 1);\n        else if (status.localeCompare(\"Complete\") == 0)\n            return data.filter((c) => c.status == 2);\n        else if (status.localeCompare(\"Expired\") == 0)\n            return data.filter((c) => c.status == 0);\n    };\n\n    // arrivalHour: 3;\n    // arrivalMinute: 0;\n    // arrivalTimeIST: \"3 AM\";\n    // bookingId: \"kvalOpAcU4mj8ENy3Ovc\";\n    // createdAt: \"2020-07-28T18:47:04.441Z\";\n    // customerId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n    // deliveryHour: 3;\n    // deliveryMinute: 30;\n    // deliveryTimeIST: \"3:30 AM\";\n    // duration: 30;\n    // purchaseItems: \"tiktok,katbery,fsafas,Dettol\";\n    // shopId: \"25QLTdo85CRarWC0b3Rc4YG5Ozu2\";\n    // slotGroupBegins: 3;\n    // slotGroupEnds: 4;\n\n    render() {\n        const data = this.filterData();\n        return (\n            <Container maxWidth=\"xl\" style={{ marginTop: 90 }}>\n                {this.state.isLoading ? (\n                    <CircularProgress\n                        style={{ marginLeft: window.innerWidth * 0.48 }}\n                    />\n                ) : this.state.errorMessage ? (\n                    <h2 style={{ paddingTop: 60 }}>\n                        {this.state.errorMessage}\n                    </h2>\n                ) : (\n                    <React.Fragment>\n                        <Grid container direction=\"row\">\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                spacing={2}\n                                xs={6}\n                            >\n                                <Grid item>\n                                    <Typography\n                                        variant=\"h5\"\n                                        color=\"textSecondary\"\n                                    >\n                                        All Bookings\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Chip\n                                        color=\"primary\"\n                                        label={\n                                            \"Total: \" +\n                                            data.length\n                                        }\n                                        style={{\n                                            fontSize: 20,\n                                        }}\n                                    ></Chip>\n                                </Grid>\n                                <Grid item>\n                                    <Chip\n                                        color=\"secondary\"\n                                        label={\n                                            \"Pending: \" +\n                                            data.filter(\n                                                (c) => c.status == 1\n                                            ).length\n                                        }\n                                        style={{\n                                            color: \"black\",\n                                            backgroundColor: \"#ffbf00\",\n                                            fontSize: 20,\n                                        }}\n                                    ></Chip>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Filter setFilter={this.updateFilter} />\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <br />\n                        <TableContainer component={Paper}>\n                            <Table\n                                style={{ width: \"100%\", margin: \"auto\" }}\n                                aria-label=\"simple table\"\n                            >\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell\n                                            size=\"small\"\n                                            align=\"right\"\n                                        ></TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Name</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Items</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Slot</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Duration</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Status</b>\n                                        </TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {data.map((row, i) => (\n                                        <RowBody\n                                            key={i}\n                                            data={row}\n                                            index={i}\n                                            updateStatus={this.updateStatus}\n                                        />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </React.Fragment>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default ViewBookings;\n\nclass RowBody extends Component {\n    state = {\n        data: this.props.data,\n    };\n\n    getChip = (status) => {\n        if (status == 1)\n            return (\n                <Chip\n                    style={{\n                        backgroundColor: \"#ffbf00\",\n                    }}\n                    icon={<ErrorOutlineIcon />}\n                    label=\"Pending\"\n                />\n            );\n        else if (status == 0)\n            return <Chip icon={<CancelOutlinedIcon />} label=\"Expired\" />;\n        else if (status == 2)\n            return (\n                <Chip\n                    style={{\n                        backgroundColor: \"#00f600\",\n                    }}\n                    icon={<CheckCircleOutlineOutlinedIcon />}\n                    label=\"Complete\"\n                />\n            );\n    };\n\n    handleOtp = async (otp) => {\n        try {\n            const response = await validateSlotByOtp(\n                this.props.data.bookingId,\n                otp\n            );\n            if (response.status == 200) {\n                this.props.updateStatus(this.props.data);\n            }\n            console.log(response);\n        } catch (ex) {\n            console.log(ex);\n            alert(\"Something went wrong\");\n        }\n        console.log(otp);\n    };\n\n    render() {\n        const { data: row, index } = this.props;\n        return (\n            <TableRow>\n                <TableCell align=\"right\" size=\"small\">\n                    {index + 1}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.customerName || \"DemoName Zunaid\"}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.purchaseItems}\n                </TableCell>\n                <TableCell\n                    align=\"center\"\n                    style={{ fontSize: 17 }}\n                >{`${row.arrivalTimeIST} ⟶ ${row.deliveryTimeIST}`}</TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.duration}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {this.getChip(row.status)}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.status == 1 ? (\n                        <OTP submitOtp={this.handleOtp} />\n                    ) : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nclass Filter extends Component {\n    state = {\n        period: [\"Morning\", \"Afternoon\", \"Evening\"],\n        status: \"All\",\n        todayOnly: true,\n    };\n\n    handleChange = (event) => {\n        let data = { ...this.state };\n        this.setState({ [event.target.name]: event.target.value });\n        data[event.target.name] = event.target.value;\n        this.props.setFilter(data);\n    };\n\n    handleCheck = (event) => {\n        let data = { ...this.state };\n        this.setState({ [event.target.name]: event.target.checked });\n        data[event.target.name] = event.target.checked;\n        this.props.setFilter(data);\n    };\n\n    render() {\n        const { period, status } = this.state;\n        const MenuProps = {\n            PaperProps: {\n                style: {\n                    maxHeight: 224,\n                    width: 160,\n                },\n            },\n        };\n\n        return (\n            <Paper elevation={0}>\n                <Grid container direction=\"row\" spacing={2} justify=\"flex-end\">\n                    <Grid item>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.todayOnly}\n                                    onChange={this.handleCheck}\n                                    name=\"todayOnly\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Only Today\"\n                        />\n                    </Grid>\n                    <Grid item>\n                        <FormControl style={{ minWidth: 150, maxWidth: 300 }}>\n                            <InputLabel id=\"demo-mutiple-checkbox-label\">\n                                Period\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-mutiple-checkbox-label\"\n                                id=\"demo-mutiple-checkbox\"\n                                multiple\n                                name=\"period\"\n                                value={period}\n                                onChange={this.handleChange}\n                                input={<Input />}\n                                renderValue={(selected) => selected.join(\", \")}\n                                MenuProps={MenuProps}\n                            >\n                                {[\"Morning\", \"Afternoon\", \"Evening\"].map(\n                                    (name) => (\n                                        <MenuItem key={name} value={name}>\n                                            <Checkbox\n                                                checked={\n                                                    period.indexOf(name) > -1\n                                                }\n                                            />\n                                            <ListItemText primary={name} />\n                                        </MenuItem>\n                                    )\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <FormControl style={{ minWidth: 150, maxWidth: 300 }}>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                Status\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={status}\n                                name=\"status\"\n                                onChange={this.handleChange}\n                            >\n                                {[\"All\", \"Complete\", \"Pending\", \"Expired\"].map(\n                                    (name) => (\n                                        <MenuItem key={name} value={name}>\n                                            {name}\n                                        </MenuItem>\n                                    )\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    }\n}\n\nclass OTP extends Component {\n    state = {\n        showInputField: false,\n        otp: \"\",\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleClick = () => {\n        if (this.state.showInputField) {\n            if (this.state.otp) this.props.submitOtp(parseInt(this.state.otp));\n        } else {\n            this.setState({ showInputField: true });\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.showInputField ? (\n                    <TextField\n                        name=\"otp\"\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange}\n                        label=\"OTP\"\n                        style={{ margin: 5 }}\n                    />\n                ) : null}\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleClick}\n                >\n                    {this.state.otp ? \"Submit\" : \"approve\"}\n                </Button>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport {\n    getShopDetailsAuthorized,\n    updateShopDetails,\n    uploadShopPhoto,\n} from \"../../../services/userService\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nclass ShopProfile extends Component {\n    state = {\n        isLoading: true,\n        errorMessage: \"\",\n        shopData: {},\n        data: {},\n        item: \"\",\n        label: (\n            <label\n                htmlFor=\"uploadFile\"\n                style={{\n                    cursor: \"pointer\",\n                }}\n            ></label>\n        ),\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopDetailsAuthorized();\n            console.log(response.data);\n            const { userCredentials } = response.data;\n            let data = {\n                payment_modes: userCredentials.payment_modes,\n                closingHour: userCredentials.closingHour,\n                closingMinute: userCredentials.closingMinute,\n                openingHour: userCredentials.openingHour,\n                openingMinute: userCredentials.openingMinute,\n                maxConcurrent: userCredentials.maxConcurrent,\n                tags: userCredentials.tags,\n                phoneNumber: userCredentials.phoneNumber,\n            };\n            this.setState({\n                shopData: response.data.userCredentials,\n                errorMessage: \"\",\n                data,\n            });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    handleNumberChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = parseInt(input.value);\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleAddItem = () => {\n        const data = { ...this.state.data };\n        if (this.state.item) data.tags.push(this.state.item);\n        this.setState({ data, item: \"\" });\n    };\n\n    handleDelete = (item) => {\n        const data = { ...this.state.data };\n        const index = data.tags.indexOf(item);\n        data.tags.splice(index, 1);\n        this.setState({ data });\n    };\n\n    handleSubmit = async () => {\n        console.log(\"Data\", this.state.data);\n        try {\n            const response = await updateShopDetails(this.state.data);\n            console.log(response);\n            alert(response.data.message);\n        } catch (ex) {\n            console.log(ex.response);\n        }\n    };\n\n    handleClickFile = () => {\n        document.getElementById(\"uploadFile\").click();\n        console.log(\"button click\");\n    };\n\n    updateImageFile = async (event) => {\n        console.log(\"input change triggered\");\n        const file = event.target.files[0];\n        const formData = new FormData();\n        formData.append(\"Image\", file);\n        const shopData2 = { ...this.state.shopData };\n\n        try {\n            const url = URL.createObjectURL(file);\n            const shopData = { ...this.state.shopData };\n            shopData.imgURL = url;\n            this.setState({ shopData });\n            this.forceUpdate();\n            const response = await uploadShopPhoto(formData);\n            console.log(response);\n            alert(response.data.message);\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({ shopData:shopData2 });\n        }\n    };\n\n    //     address: \"Sealdah Railway Station No 1 & 2, Sealdah, Raja Bazar, Calcutta, West Bengal, India\"\n    // bookingTimeUnit: 24\n    // closingHour: 23\n    // closingMinute: 59\n    // createdAt: \"2020-07-26T20:53:17.534Z\"\n    // discount: 11\n    // email: \"zunaidubeh@gmail.com\"\n    // maxConcurrent: 60\n    // openingHour: 2\n    // openingMinute: 0\n    // ownerName: \"Andrew Mizerati\"\n    // payment_modes: (4) [\"Cards\", \"Cash\", \"Gpay\", \"UPI\"]\n    // phoneNumber: 9123574185\n    // shopName: \"My Own Shit Electronics\"\n    // shopRating: (2) [\"4.0\", 1]\n    // tags: (5) [\"Electronics\", \"Oil & Fat\", \"Grains and Bread\", \"Grocery\", \"Dairy & Eggs\"]\n    //     userId: \"25QLTdo85CRarWC0b3Rc4YG5Ozu2\"\n\n    render() {\n        const { shopData: data, data: info, item } = this.state;\n        const { classes, themes } = this.props;\n        return (\n            <React.Fragment>\n                <Container maxWidth=\"xl\" style={{ marginTop: 80 }}>\n                    {this.state.isLoading ? (\n                        <CircularProgress\n                            style={{ marginLeft: window.innerWidth * 0.48 }}\n                        />\n                    ) : this.state.errorMessage ? (\n                        <h2 style={{ paddingTop: 60 }}>\n                            {this.state.errorMessage}\n                        </h2>\n                    ) : (\n                        <Grid container direction=\"row\" spacing={0}>\n                            <Grid\n                                item\n                                container\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                spacing={1}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item style={{ width: \"100%\" }}>\n                                    <Box\n                                        borderRadius={16}\n                                        boxShadow={3}\n                                        style={{\n                                            backgroundImage: `url(${\n                                                data.imageUrl\n                                            })`,\n                                            height: 450,\n                                            backgroundSize: \"cover\",\n                                            width: \"100%\",\n                                        }}\n                                    >\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"flex-end\"\n                                            alignItems=\"flex-end\"\n                                            style={{ height: \"100%\" }}\n                                        >\n                                            <Grid xs={12} item>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    style={{ width: \"100%\" }}\n                                                    onClick={\n                                                        this.handleClickFile\n                                                    }\n                                                >\n                                                    upload\n                                                </Button>\n\n                                                <input\n                                                    type=\"file\"\n                                                    id=\"uploadFile\"\n                                                    multiple=\"multiple\"\n                                                    onChange={\n                                                        this.updateImageFile\n                                                    }\n                                                    style={{ display: \"none\" }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                </Grid>\n                                <Grid container item direction=\"row\">\n                                    <Grid\n                                        item\n                                        container\n                                        direction=\"column\"\n                                        xs={12}\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <Grid item>\n                                            <Typography\n                                                variant=\"h4\"\n                                                style={{\n                                                    marginBottom: 10,\n                                                }}\n                                            >\n                                                <b>{data.shopName}</b>\n                                            </Typography>\n                                            <Typography variant=\"body1\">\n                                                <FiberManualRecordIcon\n                                                    style={{\n                                                        color: \"green\",\n                                                        fontSize: 13,\n                                                        marginRight: 5,\n                                                    }}\n                                                />\n                                                {timeString(\n                                                    data.openingHour,\n                                                    data.openingMinute\n                                                )}\n                                                <FiberManualRecordIcon\n                                                    style={{\n                                                        color: \"red\",\n                                                        fontSize: 13,\n                                                    }}\n                                                />\n                                                {timeString(\n                                                    data.closingHour,\n                                                    data.closingMinute\n                                                )}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        xs={12}\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                        direction=\"column\"\n                                    >\n                                        <Grid\n                                            item\n                                            container\n                                            direction=\"row\"\n                                            justify=\"flex-start\"\n                                            style={{ marginBottom: 10 }}\n                                        >\n                                            <Rating\n                                                name=\"ratings\"\n                                                defaultValue={\n                                                    data.shopRating[0]\n                                                }\n                                                precision={0.1}\n                                                readOnly\n                                                style={{\n                                                    fontSize: 40,\n                                                    color: \"red\",\n                                                }}\n                                            />\n                                            <Typography\n                                                variant=\"h5\"\n                                                style={{\n                                                    marginTop: 5,\n                                                    marginLeft: 5,\n                                                }}\n                                            >\n                                                <b>{data.shopRating[0]}</b>\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    item\n                                    container\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                    justify=\"flex-start\"\n                                    direction=\"column\"\n                                >\n                                    <Grid item style={{ width: \"100%\" }}>\n                                        <Box\n                                            borderRadius={5}\n                                            boxShadow={3}\n                                            padding={2}\n                                            style={{ backgroundColor: \"white\" }}\n                                        >\n                                            <Typography\n                                                variant=\"body1\"\n                                                style={{\n                                                    fontSize: 18,\n                                                    borderRadius: 5,\n                                                }}\n                                            >\n                                                <b>{data.ownerName}</b>\n                                                <br />\n                                                {data.address}\n                                                <br />\n                                                {/* Contact: {phoneNumber} */}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                item\n                                container\n                                sm={8}\n                                md={8}\n                                lg={8}\n                                style={{ width: \"100%\" }}\n                                spacing={2}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                            >\n                                <form style={{ width: \"95%\", marginTop: 20 }}>\n                                    <Box\n                                        borderRadius=\"borderRadius\"\n                                        boxShadow={5}\n                                        m={1}\n                                        p={2}\n                                        style={{ width: \"95%\" }}\n                                    >\n                                        <Typography\n                                            variant=\"h5\"\n                                            display=\"block\"\n                                            align=\"center\"\n                                            style={{ margin: 5 }}\n                                        >\n                                            Edit Info\n                                        </Typography>\n                                        <Grid item container spacing={2}>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    variant=\"caption\"\n                                                    display=\"block\"\n                                                >\n                                                    Opening Time And Closing\n                                                    Time(Please use 24Hr format)\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"openingHour\"\n                                                    value={info.openingHour}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 24,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"openingHour\"\n                                                    label=\"Opening Hour\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"openingMinute\"\n                                                    value={info.openingMinute}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 60,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"openingMinute\"\n                                                    label=\"Opening Minute\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"closingHour\"\n                                                    value={info.closingHour}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 24,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"closingHour\"\n                                                    label=\"Closing Hour\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"closingMinute\"\n                                                    value={info.closingMinute}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 60,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"closingMinute\"\n                                                    label=\"Cloosing Minute\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    variant=\"caption\"\n                                                    display=\"block\"\n                                                >\n                                                    Available Transaction\n                                                    Options\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <MultipleSelect\n                                                    selectedItems={\n                                                        info.payment_modes\n                                                    }\n                                                    handleChange={\n                                                        this.handleSelect\n                                                    }\n                                                    classes={this.props.classes}\n                                                    name=\"payment_modes\"\n                                                    label=\"Accepted Payment Modes\"\n                                                    theme={this.props.theme}\n                                                    items={[\n                                                        \"Cards\",\n                                                        \"PayTm\",\n                                                        \"PayPal\",\n                                                        \"Credit Card\",\n                                                        \"ATM Card\",\n                                                        \"Cash\",\n                                                        \"Gpay\",\n                                                        \"Digital Wallets\",\n                                                        \"UPI\",\n                                                        \"Other Methods\",\n                                                    ]}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    variant=\"caption\"\n                                                    display=\"block\"\n                                                >\n                                                    Available Items (Tags)\n                                                </Typography>\n                                                <Grid item container xs={12}>\n                                                    <Grid item xs={12} md={8}>\n                                                        <TextField\n                                                            id=\"standard-basic\"\n                                                            name=\"item\"\n                                                            value={item}\n                                                            onChange={\n                                                                this\n                                                                    .handleChange\n                                                            }\n                                                            label=\"Item\"\n                                                            className={\n                                                                classes.formControl\n                                                            }\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} md={4}>\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                            size=\"large\"\n                                                            onClick={\n                                                                this\n                                                                    .handleAddItem\n                                                            }\n                                                            className={\n                                                                classes.button\n                                                            }\n                                                            startIcon={\n                                                                <AddIcon />\n                                                            }\n                                                        >\n                                                            add\n                                                        </Button>\n                                                    </Grid>\n                                                    <Grid item xs={12}>\n                                                        <Box>\n                                                            {info.tags.map(\n                                                                (value, i) => (\n                                                                    <Chip\n                                                                        key={i}\n                                                                        label={\n                                                                            value\n                                                                        }\n                                                                        color=\"secondary\"\n                                                                        onDelete={() =>\n                                                                            this.handleDelete(\n                                                                                value\n                                                                            )\n                                                                        }\n                                                                        className={\n                                                                            classes.chip\n                                                                        }\n                                                                    />\n                                                                )\n                                                            )}\n                                                        </Box>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item sm={6} md={6} lg={6}>\n                                                <TextField\n                                                    name=\"phoneNumber\"\n                                                    value={info.phoneNumber}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    fullWidth\n                                                    id=\"phoneNumber\"\n                                                    label=\"Phone Number\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                    style={{ margin: 2 }}\n                                                />\n                                            </Grid>\n                                            <Grid item sm={6} md={6} lg={6}>\n                                                <TextField\n                                                    name=\"maxConcurrent\"\n                                                    value={info.maxConcurrent}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    fullWidth\n                                                    id=\"maxConcurrent\"\n                                                    label=\"Max Customer Allowed\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                    style={{ margin: 2 }}\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                xs={12}\n                                                container\n                                                direction=\"row\"\n                                                justify=\"center\"\n                                            >\n                                                <Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    onClick={this.handleSubmit}\n                                                >\n                                                    Submit\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                </form>\n                            </Grid>\n                        </Grid>\n                    )}\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(ShopProfile);\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n            handleDelete,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport ShopDashboard from \"./dashBoard\";\nimport Logout from \"./shopLogout\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ViewBookings from './viewBookings';\nimport ShopProfile from './ShopProfile';\n\nclass ShopMainPage extends Component {\n    state = {};\n\n    \n    render() {\n        return (\n            <main style={{ display: \"flex\", width: \"100%\" }}>\n                {this.state.isLoading ? (\n                    <CircularProgress />\n                ) : this.state.errorMessage ? (\n                    <h2 style={{ paddingTop: 60 }}>\n                        {this.state.errorMessage}\n                    </h2>\n                ) : (\n                    <Switch>\n                        {/* <Route\n                        path=\"/shopowner/profile\"\n                        component={() => (\n                            <MyProfile />\n                        )}\n                    /> */}\n                        <Route\n                            path=\"/shopowner/dashboard\"\n                            component={() => <ShopDashboard />}\n                        />\n                        <Route\n                            path=\"/shopowner/bookings/\"\n                            component={ViewBookings}\n                        />\n                        <Route\n                            path=\"/shopowner/shopprofile/\"\n                            component={ShopProfile}\n                        />\n                        <Route path=\"/shopowner/logout/\" component={Logout} />\n                        {/* <Route\n                            path=\"/shopowner\"\n                            component={() => <ShopProfile />}\n                        /> */}\n                        <Route\n                            path=\"/shopowner\"\n                            component={() => <ShopDashboard />}\n                        />\n                    </Switch>\n                )}\n            </main>\n        );\n    }\n}\n\nexport default ShopMainPage;\n","import React, { Component } from \"react\";\nimport api from \"../configApi.json\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\n\nclass NotFound extends Component {\n    getStyles = () => {\n        let st = {};\n        const { innerWidth: w, innerHeight: h } = window;\n        if (w > h) st.height = h * 0.8;\n        else st.width = w * 0.95;\n        st.margin = \"auto\";\n        st.marginTop = 60;\n        return st;\n    }\n    render() {\n        return (\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid Item>\n                    <img\n                        src={api.errorPageImage}\n                        style={this.getStyles()}\n                        // style={{\n                        //     height: window.innerHeight * 0.8,\n                        //     margin: \"auto\",\n                        //     marginTop: 60,\n                        // }}\n                    ></img>\n                </Grid>\n                <Grid item>\n                    <Link to=\"/\">HOME</Link>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport SignIn from \"./components/pages/signin\";\nimport SignUp from \"./components/pages/registration\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport MainPage from \"./components/pages/customer/mainPage\";\nimport { CustomAppBar, Footer } from \"./components/AppComponent\";\nimport Home from \"./components/home\";\nimport Logout from \"./components/pages/shopowner/shopLogout\";\nimport { withRouter } from \"react-router-dom\";\nimport ShopMainPage from \"./components/pages/shopowner/shopMainPage\";\nimport NotFound from \"./components/notFound\";\n\nclass App extends Component {\n    state = {\n        auth: {\n            customerLogged: false,\n            //localStorage.getItem(\"userLogged\") && !localStorage.getItem(\"isShop\"),\n            shopOwnerLogged: false,\n            //localStorage.getItem(\"userLogged\") && localStorage.getItem(\"isShop\"),\n        },\n        customerMenu: [\n            {\n                path: \"/customer/profile\",\n                label: \"Profile\",\n                //icon: <AccountBoxIcon />,\n            },\n            {\n                path: \"/customer/dashboard\",\n                label: \"Dashboard\",\n                //icon: <DashboardIcon />,\n            },\n            {\n                path: \"/customer/booking\",\n                label: \"Bookings\",\n                //icon: <BookmarksRoundedIcon />,\n            },\n            {\n                path: \"/customer/logout\",\n                label: \"Logout\",\n                //icon: <PowerSettingsNewRoundedIcon />,\n            },\n        ],\n        shopOwnerMenu: [\n            {\n                path: \"/shopowner/shopprofile\",\n                label: \"Shop Profile\",\n            },\n            {\n                path: \"/shopowner/dashboard\",\n                label: \"Dashboard\",\n            },\n            {\n                path: \"/shopowner/bookings\",\n                label: \"View Bookings\",\n            },\n            {\n                path: \"/logout\",\n                label: \"Logout\",\n            },\n        ],\n    };\n\n    componentDidMount() {\n        try {\n            if (localStorage.getItem(\"userLogged\")) {\n                const check = localStorage.getItem(\"isShop\");\n                console.log(\"cdm\", check);\n                if (check) {\n                    console.log(\"cdm shopOwnerLogged\", check);\n                    this.setState({ auth: { shopOwnerLogged: true } });\n                    this.props.history.push(\"/shopowner\");\n                } else {\n                    console.log(\"cdm customerLogged\", check);\n                    this.setState({ auth: { customerLogged: true } });\n                    this.props.history.push(\"/customer\");\n                }\n            }\n        } catch (ex) {}\n    }\n\n    handleAuth = (authname) => {\n        this.setState({ auth: { [authname]: true } });\n    };\n\n    darkTheme = createMuiTheme({\n        palette: {\n            type: \"light\",\n            //   primary: {\n            //     main: orange[500],\n            //   },\n            //   secondary: {\n            //     main: deepOrange[900],\n            //   },\n        },\n    });\n\n    render() {\n        const {\n            customerMenu,\n            shopOwnerMenu,\n            auth: { customerLogged, shopOwnerLogged },\n            userLoggedIn,\n        } = this.state;\n        // return (\n        //     <ThemeProvider theme={this.darkTheme}>\n        //         <div style={{flexGrow:1,marginTop:40}}>\n        //             <Grid\n        //                 container\n        //                 direction=\"row\"\n        //                 justify=\"center\"\n        //                 alignItems=\"baseline\"\n        //             >\n        //                 <Switch>\n        //                     <Route path=\"/signup\" component={SignUp}/>\n        //                     <Route path=\"/signin\" component={SignIn}/>\n        //                     <Route path=\"/\" component={() => <Sidebar userData={this.state.data}/>}/>\n        //                 </Switch>\n        //             </Grid>\n        //         </div>\n        //     </ThemeProvider>\n        //  );\n\n        const menuOption =\n            (shopOwnerLogged || customerLogged) &&\n            (customerLogged ? customerMenu : shopOwnerMenu);\n        return (\n            <React.Fragment>\n                <div style={{ flexGrow: 1, backgroundColor: \"#ffffff\" }}>\n                    <CustomAppBar\n                        menuOption={menuOption}\n                        auth={shopOwnerLogged || customerLogged}\n                        handleAuth={this.handleAuth}\n                    />\n                    {/* <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    style={{ marginTop: 20, width: \"100%\", margin: \"auto\" }}\n                > */}\n                    <Switch>\n                        {/* <Route\n                            path=\"/signin\"\n                            component={() => (\n                                <SignIn handleAuth={this.handleAuth} />\n                            )}\n                        /> */}\n                        <Route path=\"/logout\" component={() => <Logout />} />\n                        <Route\n                            path=\"/signup\"\n                            component={() => (\n                                <SignUp handleAuth={this.handleAuth} />\n                            )}\n                        />\n                        {shopOwnerLogged && (\n                            <Route\n                                path=\"/shopowner\"\n                                component={() => <ShopMainPage />}\n                            />\n                        )}\n                        {customerLogged && (\n                            <Route\n                                path=\"/customer\"\n                                component={() => <MainPage />}\n                            />\n                        )}\n                        <Route path=\"/404\" component={NotFound} />\n                        <Route path=\"/\" exact component={Home} />\n                        <Redirect to=\"/404\"></Redirect>\n                    </Switch>\n                    {/* </Grid> */}\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}